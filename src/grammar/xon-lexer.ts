// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT

 
import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly Class = 3;
	public static readonly Enum = 4;
	public static readonly Scheme = 5;
	public static readonly If = 6;
	public static readonly Else = 7;
	public static readonly Loop = 8;
	public static readonly In = 9;
	public static readonly Continue = 10;
	public static readonly Break = 11;
	public static readonly Return = 12;
	public static readonly As = 13;
	public static readonly Var = 14;
	public static readonly Await = 15;
	public static readonly Select = 16;
	public static readonly Preprocessor = 17;
	public static readonly LineBreak = 18;
	public static readonly BitAnd = 19;
	public static readonly BitOr = 20;
	public static readonly BitXor = 21;
	public static readonly RightShiftArithmetic = 22;
	public static readonly LeftShiftArithmetic = 23;
	public static readonly RightShiftLogical = 24;
	public static readonly OpenBracket = 25;
	public static readonly CloseBracket = 26;
	public static readonly OpenParen = 27;
	public static readonly CloseParen = 28;
	public static readonly OpenBrace = 29;
	public static readonly CloseBrace = 30;
	public static readonly Comma = 31;
	public static readonly Assign = 32;
	public static readonly QuestionMark = 33;
	public static readonly Colon = 34;
	public static readonly TwoColon = 35;
	public static readonly Ellipsis = 36;
	public static readonly Dot = 37;
	public static readonly Plus = 38;
	public static readonly Minus = 39;
	public static readonly BitNot = 40;
	public static readonly Not = 41;
	public static readonly Multiply = 42;
	public static readonly Divide = 43;
	public static readonly Modulus = 44;
	public static readonly Pow = 45;
	public static readonly Sharp = 46;
	public static readonly LessThan = 47;
	public static readonly MoreThan = 48;
	public static readonly LessThanEquals = 49;
	public static readonly MoreThanEquals = 50;
	public static readonly Equals = 51;
	public static readonly NotEquals = 52;
	public static readonly And = 53;
	public static readonly Or = 54;
	public static readonly MultiplyAssign = 55;
	public static readonly DivideAssign = 56;
	public static readonly ModulusAssign = 57;
	public static readonly PlusAssign = 58;
	public static readonly MinusAssign = 59;
	public static readonly LeftShiftArithmeticAssign = 60;
	public static readonly RightShiftArithmeticAssign = 61;
	public static readonly RightShiftLogicalAssign = 62;
	public static readonly BitAndAssign = 63;
	public static readonly BitXorAssign = 64;
	public static readonly BitOrAssign = 65;
	public static readonly LambdaStart = 66;
	public static readonly Pipe = 67;
	public static readonly Underscore = 68;
	public static readonly NullLiteral = 69;
	public static readonly BooleanLiteral = 70;
	public static readonly DecimalLiteral = 71;
	public static readonly FloatLiteral = 72;
	public static readonly StringLiteral = 73;
	public static readonly StringFormatStart = 74;
	public static readonly StringFormatMiddle = 75;
	public static readonly StringFormatEnd = 76;
	public static readonly ID = 77;
	public static readonly Skip = 78;
	public static readonly UnexpectedCharacter = 79;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"Class", "Enum", "Scheme", "If", "Else", "Loop", "In", "Continue", "Break", 
		"Return", "As", "Var", "Await", "Select", "Preprocessor", "LineBreak", 
		"BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", "LeftShiftArithmetic", 
		"RightShiftLogical", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"OpenBrace", "CloseBrace", "Comma", "Assign", "QuestionMark", "Colon", 
		"TwoColon", "Ellipsis", "Dot", "Plus", "Minus", "BitNot", "Not", "Multiply", 
		"Divide", "Modulus", "Pow", "Sharp", "LessThan", "MoreThan", "LessThanEquals", 
		"MoreThanEquals", "Equals", "NotEquals", "And", "Or", "MultiplyAssign", 
		"DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", 
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign", 
		"BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", "Underscore", "NullLiteral", 
		"BooleanLiteral", "DecimalLiteral", "FloatLiteral", "StringLiteral", "StringFormatStart", 
		"StringFormatMiddle", "StringFormatEnd", "ID", "Skip", "UnexpectedCharacter", 
		"SPACES", "MULTI_LINE_COMMENT", "SINGLE_LINE_COMMENT", "LINE_JOINING", 
		"DECIMAL_NUMBER", "DECIMAL_DIGIT", "CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'class'", "'enum'", "'scheme'", "'if'", 
		"'else'", "'loop'", "'in'", "'continue'", "'break'", "'return'", "'as'", 
		"'var'", "'await'", "'select'", undefined, undefined, "'and'", "'or'", 
		"'xor'", "'>>'", "'<<'", "'>>>'", "'['", "']'", "'('", "')'", "'{'", "'}'", 
		"','", "'='", "'?'", "':'", "'::'", "'...'", "'.'", "'+'", "'-'", "'~'", 
		"'!'", "'*'", "'/'", "'%'", "'^'", "'#'", "'<'", "'>'", "'<='", "'>='", 
		"'=='", "'!='", "'&&'", "'||'", "'*='", "'/='", "'%='", "'+='", "'-='", 
		"'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'\\'", "'|'", "'_'", 
		"'null'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "Class", "Enum", "Scheme", "If", "Else", 
		"Loop", "In", "Continue", "Break", "Return", "As", "Var", "Await", "Select", 
		"Preprocessor", "LineBreak", "BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "Comma", "Assign", 
		"QuestionMark", "Colon", "TwoColon", "Ellipsis", "Dot", "Plus", "Minus", 
		"BitNot", "Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", "LessThan", 
		"MoreThan", "LessThanEquals", "MoreThanEquals", "Equals", "NotEquals", 
		"And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", 
		"MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign", 
		"LambdaStart", "Pipe", "Underscore", "NullLiteral", "BooleanLiteral", 
		"DecimalLiteral", "FloatLiteral", "StringLiteral", "StringFormatStart", 
		"StringFormatMiddle", "StringFormatEnd", "ID", "Skip", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 15:
			this.LineBreak_action(_localctx, actionIndex);
			break;

		case 22:
			this.OpenBracket_action(_localctx, actionIndex);
			break;

		case 23:
			this.CloseBracket_action(_localctx, actionIndex);
			break;

		case 24:
			this.OpenParen_action(_localctx, actionIndex);
			break;

		case 25:
			this.CloseParen_action(_localctx, actionIndex);
			break;

		case 26:
			this.OpenBrace_action(_localctx, actionIndex);
			break;

		case 27:
			this.CloseBrace_action(_localctx, actionIndex);
			break;
		}
	}
	private LineBreak_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.handleLineBreak()
			break;
		}
	}
	private OpenBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened++;
			break;
		}
	}
	private CloseBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.opened--;
			break;
		}
	}
	private OpenParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 3:
			this.opened++;
			break;
		}
	}
	private CloseParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 4:
			this.opened--;
			break;
		}
	}
	private OpenBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 5:
			this.opened++;
			break;
		}
	}
	private CloseBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 6:
			this.opened--;
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 15:
			return this.LineBreak_sempred(_localctx, predIndex);
		}
		return true;
	}
	private LineBreak_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atStartOfInput();
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02Q\u022D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x06\x10\xFC\n" +
		"\x10\r\x10\x0E\x10\xFD\x03\x11\x03\x11\x03\x11\x05\x11\u0103\n\x11\x03" +
		"\x11\x03\x11\x05\x11\u0107\n\x11\x03\x11\x05\x11\u010A\n\x11\x05\x11\u010C" +
		"\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F" +
		"\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03" +
		"$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03" +
		"+\x03+\x03,\x03,\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x030\x031\x03" +
		"1\x031\x032\x032\x032\x033\x033\x033\x034\x034\x034\x035\x035\x035\x03" +
		"6\x036\x036\x037\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03" +
		":\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03=\x03=\x03=\x03=\x03=\x03" +
		">\x03>\x03>\x03?\x03?\x03?\x03@\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03" +
		"C\x03D\x03D\x03D\x03D\x03D\x03E\x03E\x03E\x03E\x03E\x03E\x03E\x03E\x03" +
		"E\x05E\u01A9\nE\x03F\x03F\x03G\x03G\x03G\x03G\x03H\x03H\x07H\u01B3\nH" +
		"\fH\x0EH\u01B6\vH\x03H\x03H\x03I\x03I\x03I\x03I\x07I\u01BE\nI\fI\x0EI" +
		"\u01C1\vI\x03I\x03I\x03J\x03J\x07J\u01C7\nJ\fJ\x0EJ\u01CA\vJ\x03J\x03" +
		"J\x03K\x03K\x07K\u01D0\nK\fK\x0EK\u01D3\vK\x03K\x03K\x03L\x03L\x07L\u01D9" +
		"\nL\fL\x0EL\u01DC\vL\x03L\x03L\x06L\u01E0\nL\rL\x0EL\u01E1\x05L\u01E4" +
		"\nL\x03M\x03M\x03M\x03M\x05M\u01EA\nM\x03M\x03M\x03N\x03N\x03N\x03N\x03" +
		"O\x06O\u01F3\nO\rO\x0EO\u01F4\x03P\x03P\x03P\x03P\x07P\u01FB\nP\fP\x0E" +
		"P\u01FE\vP\x03P\x03P\x03P\x03Q\x03Q\x03Q\x03Q\x07Q\u0207\nQ\fQ\x0EQ\u020A" +
		"\vQ\x03R\x03R\x05R\u020E\nR\x03R\x05R\u0211\nR\x03R\x03R\x05R\u0215\n" +
		"R\x03S\x06S\u0218\nS\rS\x0ES\u0219\x03S\x03S\x06S\u021E\nS\rS\x0ES\u021F" +
		"\x07S\u0222\nS\fS\x0ES\u0225\vS\x03T\x03T\x03U\x03U\x03U\x05U\u022C\n" +
		"U\x03\u01FC\x02\x02V\x03\x02\x05\x05\x02\x06\x07\x02\x07\t\x02\b\v\x02" +
		"\t\r\x02\n\x0F\x02\v\x11\x02\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F\x19\x02" +
		"\x10\x1B\x02\x11\x1D\x02\x12\x1F\x02\x13!\x02\x14#\x02\x15%\x02\x16\'" +
		"\x02\x17)\x02\x18+\x02\x19-\x02\x1A/\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E" +
		"7\x02\x1F9\x02 ;\x02!=\x02\"?\x02#A\x02$C\x02%E\x02&G\x02\'I\x02(K\x02" +
		")M\x02*O\x02+Q\x02,S\x02-U\x02.W\x02/Y\x020[\x021]\x022_\x023a\x024c\x02" +
		"5e\x026g\x027i\x028k\x029m\x02:o\x02;q\x02<s\x02=u\x02>w\x02?y\x02@{\x02" +
		"A}\x02B\x7F\x02C\x81\x02D\x83\x02E\x85\x02F\x87\x02G\x89\x02H\x8B\x02" +
		"I\x8D\x02J\x8F\x02K\x91\x02L\x93\x02M\x95\x02N\x97\x02O\x99\x02P\x9B\x02" +
		"Q\x9D\x02\x02\x9F\x02\x02\xA1\x02\x02\xA3\x02\x02\xA5\x02\x02\xA7\x02" +
		"\x02\xA9\x02\x02\x03\x02\n\x04\x02\f\f\x0F\x0F\x05\x02&&C\\c|\x06\x02" +
		"2;C\\aac|\x06\x02&&C\\aac|\x04\x02\v\v\"\"\x03\x022;\x03\x02))\v\x02$" +
		"$))^^ddhhppttvvxx\x02\u023F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02" +
		"\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02" +
		"\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03" +
		"\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02" +
		"\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02" +
		"}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02" +
		"\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02" +
		"\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02" +
		"\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02\x02\x93\x03\x02\x02\x02\x02" +
		"\x95\x03\x02\x02\x02\x02\x97\x03\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02" +
		"\x9B\x03\x02\x02\x02\x03\xAB\x03\x02\x02\x02\x05\xB1\x03\x02\x02\x02\x07" +
		"\xB6\x03\x02\x02\x02\t\xBD\x03\x02\x02\x02\v\xC0\x03\x02\x02\x02\r\xC5" +
		"\x03\x02\x02\x02\x0F\xCA\x03\x02\x02\x02\x11\xCD\x03\x02\x02\x02\x13\xD6" +
		"\x03\x02\x02\x02\x15\xDC\x03\x02\x02\x02\x17\xE3\x03\x02\x02\x02\x19\xE6" +
		"\x03\x02\x02\x02\x1B\xEA\x03\x02\x02\x02\x1D\xF0\x03\x02\x02\x02\x1F\xF7" +
		"\x03\x02\x02\x02!\u010B\x03\x02\x02\x02#\u010F\x03\x02\x02\x02%\u0113" +
		"\x03\x02\x02\x02\'\u0116\x03\x02\x02\x02)\u011A\x03\x02\x02\x02+\u011D" +
		"\x03\x02\x02\x02-\u0120\x03\x02\x02\x02/\u0124\x03\x02\x02\x021\u0127" +
		"\x03\x02\x02\x023\u012A\x03\x02\x02\x025\u012D\x03\x02\x02\x027\u0130" +
		"\x03\x02\x02\x029\u0133\x03\x02\x02\x02;\u0136\x03\x02\x02\x02=\u0138" +
		"\x03\x02\x02\x02?\u013A\x03\x02\x02\x02A\u013C\x03\x02\x02\x02C\u013E" +
		"\x03\x02\x02\x02E\u0141\x03\x02\x02\x02G\u0145\x03\x02\x02\x02I\u0147" +
		"\x03\x02\x02\x02K\u0149\x03\x02\x02\x02M\u014B\x03\x02\x02\x02O\u014D" +
		"\x03\x02\x02\x02Q\u014F\x03\x02\x02\x02S\u0151\x03\x02\x02\x02U\u0153" +
		"\x03\x02\x02\x02W\u0155\x03\x02\x02\x02Y\u0157\x03\x02\x02\x02[\u0159" +
		"\x03\x02\x02\x02]\u015B\x03\x02\x02\x02_\u015D\x03\x02\x02\x02a\u0160" +
		"\x03\x02\x02\x02c\u0163\x03\x02\x02\x02e\u0166\x03\x02\x02\x02g\u0169" +
		"\x03\x02\x02\x02i\u016C\x03\x02\x02\x02k\u016F\x03\x02\x02\x02m\u0172" +
		"\x03\x02\x02\x02o\u0175\x03\x02\x02\x02q\u0178\x03\x02\x02\x02s\u017B" +
		"\x03\x02\x02\x02u\u017E\x03\x02\x02\x02w\u0182\x03\x02\x02\x02y\u0186" +
		"\x03\x02\x02\x02{\u018B\x03\x02\x02\x02}\u018E\x03\x02\x02\x02\x7F\u0191" +
		"\x03\x02\x02\x02\x81\u0194\x03\x02\x02\x02\x83\u0196\x03\x02\x02\x02\x85" +
		"\u0198\x03\x02\x02\x02\x87\u019A\x03\x02\x02\x02\x89\u01A8\x03\x02\x02" +
		"\x02\x8B\u01AA\x03\x02\x02\x02\x8D\u01AC\x03\x02\x02\x02\x8F\u01B0\x03" +
		"\x02\x02\x02\x91\u01B9\x03\x02\x02\x02\x93\u01C4\x03\x02\x02\x02\x95\u01CD" +
		"\x03\x02\x02\x02\x97\u01E3\x03\x02\x02\x02\x99\u01E9\x03\x02\x02\x02\x9B" +
		"\u01ED\x03\x02\x02\x02\x9D\u01F2\x03\x02\x02\x02\x9F\u01F6\x03\x02\x02" +
		"\x02\xA1\u0202\x03\x02\x02\x02\xA3\u020B\x03\x02\x02\x02\xA5\u0217\x03" +
		"\x02\x02\x02\xA7\u0226\x03\x02\x02\x02\xA9\u022B\x03\x02\x02\x02\xAB\xAC" +
		"\x07e\x02\x02\xAC\xAD\x07n\x02\x02\xAD\xAE\x07c\x02\x02\xAE\xAF\x07u\x02" +
		"\x02\xAF\xB0\x07u\x02\x02\xB0\x04\x03\x02\x02\x02\xB1\xB2\x07g\x02\x02" +
		"\xB2\xB3\x07p\x02\x02\xB3\xB4\x07w\x02\x02\xB4\xB5\x07o\x02\x02\xB5\x06" +
		"\x03\x02\x02\x02\xB6\xB7\x07u\x02\x02\xB7\xB8\x07e\x02\x02\xB8\xB9\x07" +
		"j\x02\x02\xB9\xBA\x07g\x02\x02\xBA\xBB\x07o\x02\x02\xBB\xBC\x07g\x02\x02" +
		"\xBC\b\x03\x02\x02\x02\xBD\xBE\x07k\x02\x02\xBE\xBF\x07h\x02\x02\xBF\n" +
		"\x03\x02\x02\x02\xC0\xC1\x07g\x02\x02\xC1\xC2\x07n\x02\x02\xC2\xC3\x07" +
		"u\x02\x02\xC3\xC4\x07g\x02\x02\xC4\f\x03\x02\x02\x02\xC5\xC6\x07n\x02" +
		"\x02\xC6\xC7\x07q\x02\x02\xC7\xC8\x07q\x02\x02\xC8\xC9\x07r\x02\x02\xC9" +
		"\x0E\x03\x02\x02\x02\xCA\xCB\x07k\x02\x02\xCB\xCC\x07p\x02\x02\xCC\x10" +
		"\x03\x02\x02\x02\xCD\xCE\x07e\x02\x02\xCE\xCF\x07q\x02\x02\xCF\xD0\x07" +
		"p\x02\x02\xD0\xD1\x07v\x02\x02\xD1\xD2\x07k\x02\x02\xD2\xD3\x07p\x02\x02" +
		"\xD3\xD4\x07w\x02\x02\xD4\xD5\x07g\x02\x02\xD5\x12\x03\x02\x02\x02\xD6" +
		"\xD7\x07d\x02\x02\xD7\xD8\x07t\x02\x02\xD8\xD9\x07g\x02\x02\xD9\xDA\x07" +
		"c\x02\x02\xDA\xDB\x07m\x02\x02\xDB\x14\x03\x02\x02\x02\xDC\xDD\x07t\x02" +
		"\x02\xDD\xDE\x07g\x02\x02\xDE\xDF\x07v\x02\x02\xDF\xE0\x07w\x02\x02\xE0" +
		"\xE1\x07t\x02\x02\xE1\xE2\x07p\x02\x02\xE2\x16\x03\x02\x02\x02\xE3\xE4" +
		"\x07c\x02\x02\xE4\xE5\x07u\x02\x02\xE5\x18\x03\x02\x02\x02\xE6\xE7\x07" +
		"x\x02\x02\xE7\xE8\x07c\x02\x02\xE8\xE9\x07t\x02\x02\xE9\x1A\x03\x02\x02" +
		"\x02\xEA\xEB\x07c\x02\x02\xEB\xEC\x07y\x02\x02\xEC\xED\x07c\x02\x02\xED" +
		"\xEE\x07k\x02\x02\xEE\xEF\x07v\x02\x02\xEF\x1C\x03\x02\x02\x02\xF0\xF1" +
		"\x07u\x02\x02\xF1\xF2\x07g\x02\x02\xF2\xF3\x07n\x02\x02\xF3\xF4\x07g\x02" +
		"\x02\xF4\xF5\x07e\x02\x02\xF5\xF6\x07v\x02\x02\xF6\x1E\x03\x02\x02\x02" +
		"\xF7\xF8\x07%\x02\x02\xF8\xF9\x07<\x02\x02\xF9\xFB\x03\x02\x02\x02\xFA" +
		"\xFC\n\x02\x02\x02\xFB\xFA\x03\x02\x02\x02\xFC\xFD\x03\x02\x02\x02\xFD" +
		"\xFB\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02\xFE \x03\x02\x02\x02\xFF" +
		"\u0100\x06\x11\x02\x02\u0100\u010C\x05\x9DO\x02\u0101\u0103\x07\x0F\x02" +
		"\x02\u0102\u0101\x03\x02\x02\x02\u0102\u0103\x03\x02\x02\x02\u0103\u0104" +
		"\x03\x02\x02\x02\u0104\u0107\x07\f\x02\x02\u0105\u0107\x07\x0F\x02\x02" +
		"\u0106\u0102\x03\x02\x02\x02\u0106\u0105\x03\x02\x02\x02\u0107\u0109\x03" +
		"\x02\x02\x02\u0108\u010A\x05\x9DO\x02\u0109\u0108\x03\x02\x02\x02\u0109" +
		"\u010A\x03\x02\x02\x02\u010A\u010C\x03\x02\x02\x02\u010B\xFF\x03\x02\x02" +
		"\x02\u010B\u0106\x03\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010D\u010E" +
		"\b\x11\x02\x02\u010E\"\x03\x02\x02\x02\u010F\u0110\x07c\x02\x02\u0110" +
		"\u0111\x07p\x02\x02\u0111\u0112\x07f\x02\x02\u0112$\x03\x02\x02\x02\u0113" +
		"\u0114\x07q\x02\x02\u0114\u0115\x07t\x02\x02\u0115&\x03\x02\x02\x02\u0116" +
		"\u0117\x07z\x02\x02\u0117\u0118\x07q\x02\x02\u0118\u0119\x07t\x02\x02" +
		"\u0119(\x03\x02\x02\x02\u011A\u011B\x07@\x02\x02\u011B\u011C\x07@\x02" +
		"\x02\u011C*\x03\x02\x02\x02\u011D\u011E\x07>\x02\x02\u011E\u011F\x07>" +
		"\x02\x02\u011F,\x03\x02\x02\x02\u0120\u0121\x07@\x02\x02\u0121\u0122\x07" +
		"@\x02\x02\u0122\u0123\x07@\x02\x02\u0123.\x03\x02\x02\x02\u0124\u0125" +
		"\x07]\x02\x02\u0125\u0126\b\x18\x03\x02\u01260\x03\x02\x02\x02\u0127\u0128" +
		"\x07_\x02\x02\u0128\u0129\b\x19\x04\x02\u01292\x03\x02\x02\x02\u012A\u012B" +
		"\x07*\x02\x02\u012B\u012C\b\x1A\x05\x02\u012C4\x03\x02\x02\x02\u012D\u012E" +
		"\x07+\x02\x02\u012E\u012F\b\x1B\x06\x02\u012F6\x03\x02\x02\x02\u0130\u0131" +
		"\x07}\x02\x02\u0131\u0132\b\x1C\x07\x02\u01328\x03\x02\x02\x02\u0133\u0134" +
		"\x07\x7F\x02\x02\u0134\u0135\b\x1D\b\x02\u0135:\x03\x02\x02\x02\u0136" +
		"\u0137\x07.\x02\x02\u0137<\x03\x02\x02\x02\u0138\u0139\x07?\x02\x02\u0139" +
		">\x03\x02\x02\x02\u013A\u013B\x07A\x02\x02\u013B@\x03\x02\x02\x02\u013C" +
		"\u013D\x07<\x02\x02\u013DB\x03\x02\x02\x02\u013E\u013F\x07<\x02\x02\u013F" +
		"\u0140\x07<\x02\x02\u0140D\x03\x02\x02\x02\u0141\u0142\x070\x02\x02\u0142" +
		"\u0143\x070\x02\x02\u0143\u0144\x070\x02\x02\u0144F\x03\x02\x02\x02\u0145" +
		"\u0146\x070\x02\x02\u0146H\x03\x02\x02\x02\u0147\u0148\x07-\x02\x02\u0148" +
		"J\x03\x02\x02\x02\u0149\u014A\x07/\x02\x02\u014AL\x03\x02\x02\x02\u014B" +
		"\u014C\x07\x80\x02\x02\u014CN\x03\x02\x02\x02\u014D\u014E\x07#\x02\x02" +
		"\u014EP\x03\x02\x02\x02\u014F\u0150\x07,\x02\x02\u0150R\x03\x02\x02\x02" +
		"\u0151\u0152\x071\x02\x02\u0152T\x03\x02\x02\x02\u0153\u0154\x07\'\x02" +
		"\x02\u0154V\x03\x02\x02\x02\u0155\u0156\x07`\x02\x02\u0156X\x03\x02\x02" +
		"\x02\u0157\u0158\x07%\x02\x02\u0158Z\x03\x02\x02\x02\u0159\u015A\x07>" +
		"\x02\x02\u015A\\\x03\x02\x02\x02\u015B\u015C\x07@\x02\x02\u015C^\x03\x02" +
		"\x02\x02\u015D\u015E\x07>\x02\x02\u015E\u015F\x07?\x02\x02\u015F`\x03" +
		"\x02\x02\x02\u0160\u0161\x07@\x02\x02\u0161\u0162\x07?\x02\x02\u0162b" +
		"\x03\x02\x02\x02\u0163\u0164\x07?\x02\x02\u0164\u0165\x07?\x02\x02\u0165" +
		"d\x03\x02\x02\x02\u0166\u0167\x07#\x02\x02\u0167\u0168\x07?\x02\x02\u0168" +
		"f\x03\x02\x02\x02\u0169\u016A\x07(\x02\x02\u016A\u016B\x07(\x02\x02\u016B" +
		"h\x03\x02\x02\x02\u016C\u016D\x07~\x02\x02\u016D\u016E\x07~\x02\x02\u016E" +
		"j\x03\x02\x02\x02\u016F\u0170\x07,\x02\x02\u0170\u0171\x07?\x02\x02\u0171" +
		"l\x03\x02\x02\x02\u0172\u0173\x071\x02\x02\u0173\u0174\x07?\x02\x02\u0174" +
		"n\x03\x02\x02\x02\u0175\u0176\x07\'\x02\x02\u0176\u0177\x07?\x02\x02\u0177" +
		"p\x03\x02\x02\x02\u0178\u0179\x07-\x02\x02\u0179\u017A\x07?\x02\x02\u017A" +
		"r\x03\x02\x02\x02\u017B\u017C\x07/\x02\x02\u017C\u017D\x07?\x02\x02\u017D" +
		"t\x03\x02\x02\x02\u017E\u017F\x07>\x02\x02\u017F\u0180\x07>\x02\x02\u0180" +
		"\u0181\x07?\x02\x02\u0181v\x03\x02\x02\x02\u0182\u0183\x07@\x02\x02\u0183" +
		"\u0184\x07@\x02\x02\u0184\u0185\x07?\x02\x02\u0185x\x03\x02\x02\x02\u0186" +
		"\u0187\x07@\x02\x02\u0187\u0188\x07@\x02\x02\u0188\u0189\x07@\x02\x02" +
		"\u0189\u018A\x07?\x02\x02\u018Az\x03\x02\x02\x02\u018B\u018C\x07(\x02" +
		"\x02\u018C\u018D\x07?\x02\x02\u018D|\x03\x02\x02\x02\u018E\u018F\x07`" +
		"\x02\x02\u018F\u0190\x07?\x02\x02\u0190~\x03\x02\x02\x02\u0191\u0192\x07" +
		"~\x02\x02\u0192\u0193\x07?\x02\x02\u0193\x80\x03\x02\x02\x02\u0194\u0195" +
		"\x07^\x02\x02\u0195\x82\x03\x02\x02\x02\u0196\u0197\x07~\x02\x02\u0197" +
		"\x84\x03\x02\x02\x02\u0198\u0199\x07a\x02\x02\u0199\x86\x03\x02\x02\x02" +
		"\u019A\u019B\x07p\x02\x02\u019B\u019C\x07w\x02\x02\u019C\u019D\x07n\x02" +
		"\x02\u019D\u019E\x07n\x02\x02\u019E\x88\x03\x02\x02\x02\u019F\u01A0\x07" +
		"v\x02\x02\u01A0\u01A1\x07t\x02\x02\u01A1\u01A2\x07w\x02\x02\u01A2\u01A9" +
		"\x07g\x02\x02\u01A3\u01A4\x07h\x02\x02\u01A4\u01A5\x07c\x02\x02\u01A5" +
		"\u01A6\x07n\x02\x02\u01A6\u01A7\x07u\x02\x02\u01A7\u01A9\x07g\x02\x02" +
		"\u01A8\u019F\x03\x02\x02\x02\u01A8\u01A3\x03\x02\x02\x02\u01A9\x8A\x03" +
		"\x02\x02\x02\u01AA\u01AB\x05\xA5S\x02\u01AB\x8C\x03\x02\x02\x02\u01AC" +
		"\u01AD\x05\xA5S\x02\u01AD\u01AE\x070\x02\x02\u01AE\u01AF\x05\xA5S\x02" +
		"\u01AF\x8E\x03\x02\x02\x02\u01B0\u01B4\x07)\x02\x02\u01B1\u01B3\x05\xA9" +
		"U\x02\u01B2\u01B1\x03\x02\x02\x02\u01B3\u01B6\x03\x02\x02\x02\u01B4\u01B2" +
		"\x03\x02\x02\x02\u01B4\u01B5\x03\x02\x02\x02\u01B5\u01B7\x03\x02\x02\x02" +
		"\u01B6\u01B4\x03\x02\x02\x02\u01B7\u01B8\x07)\x02\x02\u01B8\x90\x03\x02" +
		"\x02\x02\u01B9\u01BA\x07h\x02\x02\u01BA\u01BB\x07)\x02\x02\u01BB\u01BF" +
		"\x03\x02\x02\x02\u01BC\u01BE\x05\xA9U\x02\u01BD\u01BC\x03\x02\x02\x02" +
		"\u01BE\u01C1\x03\x02\x02\x02\u01BF\u01BD\x03\x02\x02\x02\u01BF\u01C0\x03" +
		"\x02\x02\x02\u01C0\u01C2\x03\x02\x02\x02\u01C1\u01BF\x03\x02\x02\x02\u01C2" +
		"\u01C3\x07}\x02\x02\u01C3\x92\x03\x02\x02\x02\u01C4\u01C8\x07\x7F\x02" +
		"\x02\u01C5\u01C7\x05\xA9U\x02\u01C6\u01C5\x03\x02\x02\x02\u01C7\u01CA" +
		"\x03\x02\x02\x02\u01C8\u01C6\x03\x02\x02\x02\u01C8\u01C9\x03\x02\x02\x02" +
		"\u01C9\u01CB\x03\x02\x02\x02\u01CA\u01C8\x03\x02\x02\x02\u01CB\u01CC\x07" +
		"}\x02\x02\u01CC\x94\x03\x02\x02\x02\u01CD\u01D1\x07\x7F\x02\x02\u01CE" +
		"\u01D0\x05\xA9U\x02\u01CF\u01CE\x03\x02\x02\x02\u01D0\u01D3\x03\x02\x02" +
		"\x02\u01D1\u01CF\x03\x02\x02\x02\u01D1\u01D2\x03\x02\x02\x02\u01D2\u01D4" +
		"\x03\x02\x02\x02\u01D3\u01D1\x03\x02\x02\x02\u01D4\u01D5\x07)\x02\x02" +
		"\u01D5\x96\x03\x02\x02\x02\u01D6\u01DA\t\x03\x02\x02\u01D7\u01D9\t\x04" +
		"\x02\x02\u01D8\u01D7\x03\x02\x02\x02\u01D9\u01DC\x03\x02\x02\x02\u01DA" +
		"\u01D8\x03\x02\x02\x02\u01DA\u01DB\x03\x02\x02\x02\u01DB\u01E4\x03\x02" +
		"\x02\x02\u01DC\u01DA\x03\x02\x02\x02\u01DD\u01DF\t\x05\x02\x02\u01DE\u01E0" +
		"\t\x04\x02\x02\u01DF\u01DE\x03\x02\x02\x02\u01E0\u01E1\x03\x02\x02\x02" +
		"\u01E1\u01DF\x03\x02\x02\x02\u01E1\u01E2\x03\x02\x02\x02\u01E2\u01E4\x03" +
		"\x02\x02\x02\u01E3\u01D6\x03\x02\x02\x02\u01E3\u01DD\x03\x02\x02\x02\u01E4" +
		"\x98\x03\x02\x02\x02\u01E5\u01EA\x05\x9DO\x02\u01E6\u01EA\x05\xA1Q\x02" +
		"\u01E7\u01EA\x05\x9FP\x02\u01E8\u01EA\x05\xA3R\x02\u01E9\u01E5\x03\x02" +
		"\x02\x02\u01E9\u01E6\x03\x02\x02\x02\u01E9\u01E7\x03\x02\x02\x02\u01E9" +
		"\u01E8\x03\x02\x02\x02\u01EA\u01EB\x03\x02\x02\x02\u01EB\u01EC\bM\t\x02" +
		"\u01EC\x9A\x03\x02\x02\x02\u01ED\u01EE\v\x02\x02\x02\u01EE\u01EF\x03\x02" +
		"\x02\x02\u01EF\u01F0\bN\n\x02\u01F0\x9C\x03\x02\x02\x02\u01F1\u01F3\t" +
		"\x06\x02\x02\u01F2\u01F1\x03\x02\x02\x02\u01F3\u01F4\x03\x02\x02\x02\u01F4" +
		"\u01F2\x03\x02\x02\x02\u01F4\u01F5\x03\x02\x02\x02\u01F5\x9E\x03\x02\x02" +
		"\x02\u01F6\u01F7\x071\x02\x02\u01F7\u01F8\x07,\x02\x02\u01F8\u01FC\x03" +
		"\x02\x02\x02\u01F9\u01FB\v\x02\x02\x02\u01FA\u01F9\x03\x02\x02\x02\u01FB" +
		"\u01FE\x03\x02\x02\x02\u01FC\u01FD\x03\x02\x02\x02\u01FC\u01FA\x03\x02" +
		"\x02\x02\u01FD\u01FF\x03\x02\x02\x02\u01FE\u01FC\x03\x02\x02\x02\u01FF" +
		"\u0200\x07,\x02\x02\u0200\u0201\x071\x02\x02\u0201\xA0\x03\x02\x02\x02" +
		"\u0202\u0203\x071\x02\x02\u0203\u0204\x071\x02\x02\u0204\u0208\x03\x02" +
		"\x02\x02\u0205\u0207\n\x02\x02\x02\u0206\u0205\x03\x02\x02\x02\u0207\u020A" +
		"\x03\x02\x02\x02\u0208\u0206\x03\x02\x02\x02\u0208\u0209\x03\x02\x02\x02" +
		"\u0209\xA2\x03\x02\x02\x02\u020A\u0208\x03\x02\x02\x02\u020B\u020D\x07" +
		"^\x02\x02\u020C\u020E\x05\x9DO\x02\u020D\u020C\x03\x02\x02\x02\u020D\u020E" +
		"\x03\x02\x02\x02\u020E\u0214\x03\x02\x02\x02\u020F\u0211\x07\x0F\x02\x02" +
		"\u0210\u020F\x03\x02\x02\x02\u0210\u0211\x03\x02\x02\x02\u0211\u0212\x03" +
		"\x02\x02\x02\u0212\u0215\x07\f\x02\x02\u0213\u0215\x07\x0F\x02\x02\u0214" +
		"\u0210\x03\x02\x02\x02\u0214\u0213\x03\x02\x02\x02\u0215\xA4\x03\x02\x02" +
		"\x02\u0216\u0218\x05\xA7T\x02\u0217\u0216\x03\x02\x02\x02\u0218\u0219" +
		"\x03\x02\x02\x02\u0219\u0217\x03\x02\x02\x02\u0219\u021A\x03\x02\x02\x02" +
		"\u021A\u0223\x03\x02\x02\x02\u021B\u021D\x07a\x02\x02\u021C\u021E\x05" +
		"\xA7T\x02\u021D\u021C\x03\x02\x02\x02\u021E\u021F\x03\x02\x02\x02\u021F" +
		"\u021D\x03\x02\x02\x02\u021F\u0220\x03\x02\x02\x02\u0220\u0222\x03\x02" +
		"\x02\x02\u0221\u021B\x03\x02\x02\x02\u0222\u0225\x03\x02\x02\x02\u0223" +
		"\u0221\x03\x02\x02\x02\u0223\u0224\x03\x02\x02\x02\u0224\xA6\x03\x02\x02" +
		"\x02\u0225\u0223\x03\x02\x02\x02\u0226\u0227\t\x07\x02\x02\u0227\xA8\x03" +
		"\x02\x02\x02\u0228\u022C\n\b\x02\x02\u0229\u022A\x07^\x02\x02\u022A\u022C" +
		"\t\t\x02\x02\u022B\u0228\x03\x02\x02\x02\u022B\u0229\x03\x02\x02\x02\u022C" +
		"\xAA\x03\x02\x02\x02\x1B\x02\xFD\u0102\u0106\u0109\u010B\u01A8\u01B4\u01BF" +
		"\u01C8\u01D1\u01DA\u01E1\u01E3\u01E9\u01F4\u01FC\u0208\u020D\u0210\u0214" +
		"\u0219\u021F\u0223\u022B\v\x03\x11\x02\x03\x18\x03\x03\x19\x04\x03\x1A" +
		"\x05\x03\x1B\x06\x03\x1C\x07\x03\x1D\b\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

