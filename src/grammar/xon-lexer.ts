// Generated from XonLexer.g4 by ANTLR 4.9.0-SNAPSHOT

 
    import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly OPEN = 3;
	public static readonly CLOSE = 4;
	public static readonly ACTUAL = 5;
	public static readonly BREAK = 6;
	public static readonly CONTINUE = 7;
	public static readonly DO = 8;
	public static readonly ELSE = 9;
	public static readonly EXPECT = 10;
	public static readonly EXPORT = 11;
	public static readonly FOR = 12;
	public static readonly IF = 13;
	public static readonly IMPORT = 14;
	public static readonly IN = 15;
	public static readonly RETURN = 16;
	public static readonly WHILE = 17;
	public static readonly COMMA = 18;
	public static readonly ASSIGN = 19;
	public static readonly QUESTION = 20;
	public static readonly COLON = 21;
	public static readonly META = 22;
	public static readonly DOT = 23;
	public static readonly LAMBDA = 24;
	public static readonly FLOAT = 25;
	public static readonly INTEGER = 26;
	public static readonly STRING = 27;
	public static readonly PREPROCESSOR = 28;
	public static readonly ID = 29;
	public static readonly OP = 30;
	public static readonly NL = 31;
	public static readonly LINE_COMMENT = 32;
	public static readonly WS = 33;
	public static readonly BLOCK_COMMENT = 34;
	public static readonly LINE_JOINING = 35;
	public static readonly UNEXPECTED = 36;
	public static readonly ERROR = 2;
	public static readonly WHITESPACE = 3;
	public static readonly COMMENT_CHANNEL = 4;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR", "WHITESPACE", "COMMENT_CHANNEL",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"OPEN", "CLOSE", "ACTUAL", "BREAK", "CONTINUE", "DO", "ELSE", "EXPECT", 
		"EXPORT", "FOR", "IF", "IMPORT", "IN", "RETURN", "WHILE", "COMMA", "ASSIGN", 
		"QUESTION", "COLON", "META", "DOT", "LAMBDA", "FLOAT", "INTEGER", "STRING", 
		"PREPROCESSOR", "ID", "OP", "NL", "LINE_COMMENT", "WS", "BLOCK_COMMENT", 
		"LINE_JOINING", "UNEXPECTED", "Radix", "DigitNumber", "AlphabetNumber",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "'actual'", "'break'", 
		"'continue'", "'do'", "'else'", "'expect'", "'export'", "'for'", "'if'", 
		"'import'", "'in'", "'return'", "'while'", "','", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "OPEN", "CLOSE", "ACTUAL", "BREAK", "CONTINUE", 
		"DO", "ELSE", "EXPECT", "EXPORT", "FOR", "IF", "IMPORT", "IN", "RETURN", 
		"WHILE", "COMMA", "ASSIGN", "QUESTION", "COLON", "META", "DOT", "LAMBDA", 
		"FLOAT", "INTEGER", "STRING", "PREPROCESSOR", "ID", "OP", "NL", "LINE_COMMENT", 
		"WS", "BLOCK_COMMENT", "LINE_JOINING", "UNEXPECTED",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 0:
			this.OPEN_action(_localctx, actionIndex);
			break;

		case 1:
			this.CLOSE_action(_localctx, actionIndex);
			break;

		case 28:
			this.NL_action(_localctx, actionIndex);
			break;
		}
	}
	private OPEN_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.opened++;
			break;
		}
	}
	private CLOSE_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened--;
			break;
		}
	}
	private NL_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.handleLineBreak()
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02&\u016C\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\f\x03" +
		"\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x05\x13\xA4\n\x13\x03\x13\x03\x13\x03\x14\x03\x14\x05\x14" +
		"\xAA\n\x14\x03\x14\x03\x14\x03\x14\x05\x14\xAF\n\x14\x03\x15\x03\x15\x05" +
		"\x15\xB3\n\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x05\x15\xBA\n\x15" +
		"\x03\x16\x03\x16\x05\x16\xBE\n\x16\x03\x16\x03\x16\x03\x16\x05\x16\xC3" +
		"\n\x16\x03\x17\x03\x17\x05\x17\xC7\n\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x05\x17\xCE\n\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03" +
		"\x18\x03\x18\x03\x18\x03\x18\x05\x18\xD9\n\x18\x03\x19\x03\x19\x03\x19" +
		"\x03\x19\x05\x19\xDF\n\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A\xE5" +
		"\n\x1A\f\x1A\x0E\x1A\xE8\v\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x07\x1B\xF2\n\x1B\f\x1B\x0E\x1B\xF5\v\x1B\x03" +
		"\x1B\x03\x1B\x07\x1B\xF9\n\x1B\f\x1B\x0E\x1B\xFC\v\x1B\x03\x1B\x03\x1B" +
		"\x03\x1C\x03\x1C\x07\x1C\u0102\n\x1C\f\x1C\x0E\x1C\u0105\v\x1C\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x05\x1D\u0117\n\x1D\x03" +
		"\x1E\x03\x1E\x07\x1E\u011B\n\x1E\f\x1E\x0E\x1E\u011E\v\x1E\x06\x1E\u0120" +
		"\n\x1E\r\x1E\x0E\x1E\u0121\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03" +
		"\x1F\x07\x1F\u012A\n\x1F\f\x1F\x0E\x1F\u012D\v\x1F\x03 \x06 \u0130\n " +
		"\r \x0E \u0131\x03 \x03 \x03!\x03!\x03!\x03!\x03!\x07!\u013B\n!\f!\x0E" +
		"!\u013E\v!\x03!\x03!\x03!\x03!\x03!\x03\"\x03\"\x07\"\u0147\n\"\f\"\x0E" +
		"\"\u014A\v\"\x03\"\x05\"\u014D\n\"\x03\"\x03\"\x05\"\u0151\n\"\x03\"\x03" +
		"\"\x03#\x03#\x03#\x03#\x03$\x03$\x05$\u015B\n$\x03$\x03$\x03%\x03%\x07" +
		"%\u0161\n%\f%\x0E%\u0164\v%\x03&\x03&\x07&\u0168\n&\f&\x0E&\u016B\v&\x05" +
		"\xF3\xFA\u013C\x02\x02\'\x03\x02\x05\x05\x02\x06\x07\x02\x07\t\x02\b\v" +
		"\x02\t\r\x02\n\x0F\x02\v\x11\x02\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F\x19" +
		"\x02\x10\x1B\x02\x11\x1D\x02\x12\x1F\x02\x13!\x02\x14#\x02\x15%\x02\x16" +
		"\'\x02\x17)\x02\x18+\x02\x19-\x02\x1A/\x02\x1B1\x02\x1C3\x02\x1D5\x02" +
		"\x1E7\x02\x1F9\x02 ;\x02!=\x02\"?\x02#A\x02$C\x02%E\x02&G\x02\x02I\x02" +
		"\x02K\x02\x02\x03\x02\x0F\x05\x02**]]}}\x05\x02++__\x7F\x7F\x03\x02))" +
		"\n\x02))^^ddhhppttvvxx\x05\x02C\\aac|\x06\x022;C\\aac|\x06\x02##\'(,`" +
		"~~\x04\x02\f\f\x0F\x0F\x04\x02\v\v\"\"\x03\x022;\x04\x02ZZzz\x04\x022" +
		";aa\x05\x022;C\\c|\x02\u0197\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x03M\x03\x02\x02\x02\x05P\x03\x02\x02\x02\x07S\x03\x02\x02\x02\tZ\x03" +
		"\x02\x02\x02\v`\x03\x02\x02\x02\ri\x03\x02\x02\x02\x0Fl\x03\x02\x02\x02" +
		"\x11q\x03\x02\x02\x02\x13x\x03\x02\x02\x02\x15\x7F\x03\x02\x02\x02\x17" +
		"\x83\x03\x02\x02\x02\x19\x86\x03\x02\x02\x02\x1B\x8D\x03\x02\x02\x02\x1D" +
		"\x90\x03\x02\x02\x02\x1F\x97\x03\x02\x02\x02!\x9D\x03\x02\x02\x02#\x9F" +
		"\x03\x02\x02\x02%\xA3\x03\x02\x02\x02\'\xA9\x03\x02\x02\x02)\xB2\x03\x02" +
		"\x02\x02+\xBD\x03\x02\x02\x02-\xC6\x03\x02\x02\x02/\xD8\x03\x02\x02\x02" +
		"1\xDE\x03\x02\x02\x023\xE0\x03\x02\x02\x025\xEB\x03\x02\x02\x027\xFF\x03" +
		"\x02\x02\x029\u0116\x03\x02\x02\x02;\u011F\x03\x02\x02\x02=\u0125\x03" +
		"\x02\x02\x02?\u012F\x03\x02\x02\x02A\u0135\x03\x02\x02\x02C\u0144\x03" +
		"\x02\x02\x02E\u0154\x03\x02\x02\x02G\u0158\x03\x02\x02\x02I\u015E\x03" +
		"\x02\x02\x02K\u0165\x03\x02\x02\x02MN\t\x02\x02\x02NO\b\x02\x02\x02O\x04" +
		"\x03\x02\x02\x02PQ\t\x03\x02\x02QR\b\x03\x03\x02R\x06\x03\x02\x02\x02" +
		"ST\x07c\x02\x02TU\x07e\x02\x02UV\x07v\x02\x02VW\x07w\x02\x02WX\x07c\x02" +
		"\x02XY\x07n\x02\x02Y\b\x03\x02\x02\x02Z[\x07d\x02\x02[\\\x07t\x02\x02" +
		"\\]\x07g\x02\x02]^\x07c\x02\x02^_\x07m\x02\x02_\n\x03\x02\x02\x02`a\x07" +
		"e\x02\x02ab\x07q\x02\x02bc\x07p\x02\x02cd\x07v\x02\x02de\x07k\x02\x02" +
		"ef\x07p\x02\x02fg\x07w\x02\x02gh\x07g\x02\x02h\f\x03\x02\x02\x02ij\x07" +
		"f\x02\x02jk\x07q\x02\x02k\x0E\x03\x02\x02\x02lm\x07g\x02\x02mn\x07n\x02" +
		"\x02no\x07u\x02\x02op\x07g\x02\x02p\x10\x03\x02\x02\x02qr\x07g\x02\x02" +
		"rs\x07z\x02\x02st\x07r\x02\x02tu\x07g\x02\x02uv\x07e\x02\x02vw\x07v\x02" +
		"\x02w\x12\x03\x02\x02\x02xy\x07g\x02\x02yz\x07z\x02\x02z{\x07r\x02\x02" +
		"{|\x07q\x02\x02|}\x07t\x02\x02}~\x07v\x02\x02~\x14\x03\x02\x02\x02\x7F" +
		"\x80\x07h\x02\x02\x80\x81\x07q\x02\x02\x81\x82\x07t\x02\x02\x82\x16\x03" +
		"\x02\x02\x02\x83\x84\x07k\x02\x02\x84\x85\x07h\x02\x02\x85\x18\x03\x02" +
		"\x02\x02\x86\x87\x07k\x02\x02\x87\x88\x07o\x02\x02\x88\x89\x07r\x02\x02" +
		"\x89\x8A\x07q\x02\x02\x8A\x8B\x07t\x02\x02\x8B\x8C\x07v\x02\x02\x8C\x1A" +
		"\x03\x02\x02\x02\x8D\x8E\x07k\x02\x02\x8E\x8F\x07p\x02\x02\x8F\x1C\x03" +
		"\x02\x02\x02\x90\x91\x07t\x02\x02\x91\x92\x07g\x02\x02\x92\x93\x07v\x02" +
		"\x02\x93\x94\x07w\x02\x02\x94\x95\x07t\x02\x02\x95\x96\x07p\x02\x02\x96" +
		"\x1E\x03\x02\x02\x02\x97\x98\x07y\x02\x02\x98\x99\x07j\x02\x02\x99\x9A" +
		"\x07k\x02\x02\x9A\x9B\x07n\x02\x02\x9B\x9C\x07g\x02\x02\x9C \x03\x02\x02" +
		"\x02\x9D\x9E\x07.\x02\x02\x9E\"\x03\x02\x02\x02\x9F\xA0\x07?\x02\x02\xA0" +
		"$\x03\x02\x02\x02\xA1\xA4\x05;\x1E\x02\xA2\xA4\x05? \x02\xA3\xA1\x03\x02" +
		"\x02\x02\xA3\xA2\x03\x02\x02\x02\xA3\xA4\x03\x02\x02\x02\xA4\xA5\x03\x02" +
		"\x02\x02\xA5\xA6\x07A\x02\x02\xA6&\x03\x02\x02\x02\xA7\xAA\x05;\x1E\x02" +
		"\xA8\xAA\x05? \x02\xA9\xA7\x03\x02\x02\x02\xA9\xA8\x03\x02\x02\x02\xA9" +
		"\xAA\x03\x02\x02\x02\xAA\xAB\x03\x02\x02\x02\xAB\xAE\x07<\x02\x02\xAC" +
		"\xAF\x05;\x1E\x02\xAD\xAF\x05? \x02\xAE\xAC\x03\x02\x02\x02\xAE\xAD\x03" +
		"\x02\x02\x02\xAE\xAF\x03\x02\x02\x02\xAF(\x03\x02\x02\x02\xB0\xB3\x05" +
		";\x1E\x02\xB1\xB3\x05? \x02\xB2\xB0\x03\x02\x02\x02\xB2\xB1\x03\x02\x02" +
		"\x02\xB2\xB3\x03\x02\x02\x02\xB3\xB4\x03\x02\x02\x02\xB4\xB5\x07<\x02" +
		"\x02\xB5\xB6\x07<\x02\x02\xB6\xB9\x03\x02\x02\x02\xB7\xBA\x05;\x1E\x02" +
		"\xB8\xBA\x05? \x02\xB9\xB7\x03\x02\x02\x02\xB9\xB8\x03\x02\x02\x02\xB9" +
		"\xBA\x03\x02\x02\x02\xBA*\x03\x02\x02\x02\xBB\xBE\x05;\x1E\x02\xBC\xBE" +
		"\x05? \x02\xBD\xBB\x03\x02\x02\x02\xBD\xBC\x03\x02\x02\x02\xBD\xBE\x03" +
		"\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF\xC2\x070\x02\x02\xC0\xC3\x05" +
		";\x1E\x02\xC1\xC3\x05? \x02\xC2\xC0\x03\x02\x02\x02\xC2\xC1\x03\x02\x02" +
		"\x02\xC2\xC3\x03\x02\x02\x02\xC3,\x03\x02\x02\x02\xC4\xC7\x05;\x1E\x02" +
		"\xC5\xC7\x05? \x02\xC6\xC4\x03\x02\x02\x02\xC6\xC5\x03\x02\x02\x02\xC6" +
		"\xC7\x03\x02\x02\x02\xC7\xC8\x03\x02\x02\x02\xC8\xC9\x07?\x02\x02\xC9" +
		"\xCA\x07@\x02\x02\xCA\xCD\x03\x02\x02\x02\xCB\xCE\x05;\x1E\x02\xCC\xCE" +
		"\x05? \x02\xCD\xCB\x03\x02\x02\x02\xCD\xCC\x03\x02\x02\x02\xCD\xCE\x03" +
		"\x02\x02\x02\xCE.\x03\x02\x02\x02\xCF\xD0\x05G$\x02\xD0\xD1\x05K&\x02" +
		"\xD1\xD2\x070\x02\x02\xD2\xD3\x05K&\x02\xD3\xD9\x03\x02\x02\x02\xD4\xD5" +
		"\x05I%\x02\xD5\xD6\x070\x02\x02\xD6\xD7\x05I%\x02\xD7\xD9\x03\x02\x02" +
		"\x02\xD8\xCF\x03\x02\x02\x02\xD8\xD4\x03\x02\x02\x02\xD90\x03\x02\x02" +
		"\x02\xDA\xDB\x05G$\x02\xDB\xDC\x05K&\x02\xDC\xDF\x03\x02\x02\x02\xDD\xDF" +
		"\x05I%\x02\xDE\xDA\x03\x02\x02\x02\xDE\xDD\x03\x02\x02\x02\xDF2\x03\x02" +
		"\x02\x02\xE0\xE6\x07)\x02\x02\xE1\xE5\n\x04\x02\x02\xE2\xE3\x07^\x02\x02" +
		"\xE3\xE5\t\x05\x02\x02\xE4\xE1\x03\x02\x02\x02\xE4\xE2\x03\x02\x02\x02" +
		"\xE5\xE8\x03\x02\x02\x02\xE6\xE4\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02" +
		"\xE7\xE9\x03\x02\x02\x02\xE8\xE6\x03\x02\x02\x02\xE9\xEA\x07)\x02\x02" +
		"\xEA4\x03\x02\x02\x02\xEB\xEC\x07%\x02\x02\xEC\xED\x07}\x02\x02\xED\xFA" +
		"\x03\x02\x02\x02\xEE\xF9\x055\x1B\x02\xEF\xF3\x07}\x02\x02\xF0\xF2\v\x02" +
		"\x02\x02\xF1\xF0\x03\x02\x02\x02\xF2\xF5\x03\x02\x02\x02\xF3\xF4\x03\x02" +
		"\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xF6\x03\x02\x02\x02\xF5\xF3\x03\x02" +
		"\x02\x02\xF6\xF9\x07\x7F\x02\x02\xF7\xF9\v\x02\x02\x02\xF8\xEE\x03\x02" +
		"\x02\x02\xF8\xEF\x03\x02\x02\x02\xF8\xF7\x03\x02\x02\x02\xF9\xFC\x03\x02" +
		"\x02\x02\xFA\xFB\x03\x02\x02\x02\xFA\xF8\x03\x02\x02\x02\xFB\xFD\x03\x02" +
		"\x02\x02\xFC\xFA\x03\x02\x02\x02\xFD\xFE\x07\x7F\x02\x02\xFE6\x03\x02" +
		"\x02\x02\xFF\u0103\t\x06\x02\x02\u0100\u0102\t\x07\x02\x02\u0101\u0100" +
		"\x03\x02\x02\x02\u0102\u0105\x03\x02\x02\x02\u0103\u0101\x03\x02\x02\x02" +
		"\u0103\u0104\x03\x02\x02\x02\u01048\x03\x02\x02\x02\u0105\u0103\x03\x02" +
		"\x02\x02\u0106\u0117\t\b\x02\x02\u0107\u0108\x070\x02\x02\u0108\u0117" +
		"\x070\x02\x02\u0109\u010A\x070\x02\x02\u010A\u010B\x070\x02\x02\u010B" +
		"\u0117\x070\x02\x02\u010C\u0117\x07>\x02\x02\u010D\u010E\x07>\x02\x02" +
		"\u010E\u0117\x07?\x02\x02\u010F\u0110\x07@\x02\x02\u0110\u0117\x07?\x02" +
		"\x02\u0111\u0117\x07@\x02\x02\u0112\u0113\x07?\x02\x02\u0113\u0117\x07" +
		"?\x02\x02\u0114\u0115\x07#\x02\x02\u0115\u0117\x07?\x02\x02\u0116\u0106" +
		"\x03\x02\x02\x02\u0116\u0107\x03\x02\x02\x02\u0116\u0109\x03\x02\x02\x02" +
		"\u0116\u010C\x03\x02\x02\x02\u0116\u010D\x03\x02\x02\x02\u0116\u010F\x03" +
		"\x02\x02\x02\u0116\u0111\x03\x02\x02\x02\u0116\u0112\x03\x02\x02\x02\u0116" +
		"\u0114\x03\x02\x02\x02\u0117:\x03\x02\x02\x02\u0118\u011C\t\t\x02\x02" +
		"\u0119\u011B\x05? \x02\u011A\u0119\x03\x02\x02\x02\u011B\u011E\x03\x02" +
		"\x02\x02\u011C\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D" +
		"\u0120\x03\x02\x02\x02\u011E\u011C\x03\x02\x02\x02\u011F\u0118\x03\x02" +
		"\x02\x02\u0120\u0121\x03\x02\x02\x02\u0121\u011F\x03\x02\x02\x02\u0121" +
		"\u0122\x03\x02\x02\x02\u0122\u0123\x03\x02\x02\x02\u0123\u0124\b\x1E\x04" +
		"\x02\u0124<\x03\x02\x02\x02\u0125\u0126\x07/\x02\x02\u0126\u0127\x07/" +
		"\x02\x02\u0127\u012B\x03\x02\x02\x02\u0128\u012A\n\t\x02\x02\u0129\u0128" +
		"\x03\x02\x02\x02\u012A\u012D\x03\x02\x02\x02\u012B\u0129\x03\x02\x02\x02" +
		"\u012B\u012C\x03\x02\x02\x02\u012C>\x03\x02\x02\x02\u012D\u012B\x03\x02" +
		"\x02\x02\u012E\u0130\t\n\x02\x02\u012F\u012E\x03\x02\x02\x02\u0130\u0131" +
		"\x03\x02\x02\x02\u0131\u012F\x03\x02\x02\x02\u0131\u0132\x03\x02\x02\x02" +
		"\u0132\u0133\x03\x02\x02\x02\u0133\u0134\b \x05\x02\u0134@\x03\x02\x02" +
		"\x02\u0135\u0136\x071\x02\x02\u0136\u0137\x07,\x02\x02\u0137\u013C\x03" +
		"\x02\x02\x02\u0138\u013B\x05A!\x02\u0139\u013B\v\x02\x02\x02\u013A\u0138" +
		"\x03\x02\x02\x02\u013A\u0139\x03\x02\x02\x02\u013B\u013E\x03\x02\x02\x02" +
		"\u013C\u013D\x03\x02\x02\x02\u013C\u013A\x03\x02\x02\x02\u013D\u013F\x03" +
		"\x02\x02\x02\u013E\u013C\x03\x02\x02\x02\u013F\u0140\x07,\x02\x02\u0140" +
		"\u0141\x071\x02\x02\u0141\u0142\x03\x02\x02\x02\u0142\u0143\b!\x06\x02" +
		"\u0143B\x03\x02\x02\x02\u0144\u0148\x07^\x02\x02\u0145\u0147\t\n\x02\x02" +
		"\u0146\u0145\x03\x02\x02\x02\u0147\u014A\x03\x02\x02\x02\u0148\u0146\x03" +
		"\x02\x02\x02\u0148\u0149\x03\x02\x02\x02\u0149\u0150\x03\x02\x02\x02\u014A" +
		"\u0148\x03\x02\x02\x02\u014B\u014D\x07\x0F\x02\x02\u014C\u014B\x03\x02" +
		"\x02\x02\u014C\u014D\x03\x02\x02\x02\u014D\u014E\x03\x02\x02\x02\u014E" +
		"\u0151\x07\f\x02\x02\u014F\u0151\x04\x0E\x0F\x02\u0150\u014C\x03\x02\x02" +
		"\x02\u0150\u014F\x03\x02\x02\x02\u0151\u0152\x03\x02\x02\x02\u0152\u0153" +
		"\b\"\x07\x02\u0153D\x03\x02\x02\x02\u0154\u0155\v\x02\x02\x02\u0155\u0156" +
		"\x03\x02\x02\x02\u0156\u0157\b#\b\x02\u0157F\x03\x02\x02\x02\u0158\u015A" +
		"\t\v\x02\x02\u0159\u015B\t\v\x02\x02\u015A\u0159\x03\x02\x02\x02\u015A" +
		"\u015B\x03\x02\x02\x02\u015B\u015C\x03\x02\x02\x02\u015C\u015D\t\f\x02" +
		"\x02\u015DH\x03\x02\x02\x02\u015E\u0162\t\v\x02\x02\u015F\u0161\t\r\x02" +
		"\x02\u0160\u015F\x03\x02\x02\x02\u0161\u0164\x03\x02\x02\x02\u0162\u0160" +
		"\x03\x02\x02\x02\u0162\u0163\x03\x02\x02\x02\u0163J\x03\x02\x02\x02\u0164" +
		"\u0162\x03\x02\x02\x02\u0165\u0169\t\x0E\x02\x02\u0166\u0168\t\x07\x02" +
		"\x02\u0167\u0166\x03\x02\x02\x02\u0168\u016B\x03\x02\x02\x02\u0169\u0167" +
		"\x03\x02\x02\x02\u0169\u016A\x03\x02\x02\x02\u016AL\x03\x02\x02\x02\u016B" +
		"\u0169\x03\x02\x02\x02#\x02\xA3\xA9\xAE\xB2\xB9\xBD\xC2\xC6\xCD\xD8\xDE" +
		"\xE4\xE6\xF3\xF8\xFA\u0103\u0116\u011C\u0121\u012B\u0131\u013A\u013C\u0148" +
		"\u014C\u0150\u015A\u0160\u0162\u0167\u0169\t\x03\x02\x02\x03\x03\x03\x03" +
		"\x1E\x04\x02\x05\x02\x02\x06\x02\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

