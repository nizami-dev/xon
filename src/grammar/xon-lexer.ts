// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT

 
import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly Class = 3;
	public static readonly Enum = 4;
	public static readonly Scheme = 5;
	public static readonly If = 6;
	public static readonly Else = 7;
	public static readonly Loop = 8;
	public static readonly In = 9;
	public static readonly Pass = 10;
	public static readonly Continue = 11;
	public static readonly Break = 12;
	public static readonly Return = 13;
	public static readonly As = 14;
	public static readonly Var = 15;
	public static readonly Select = 16;
	public static readonly Init = 17;
	public static readonly Preprocessor = 18;
	public static readonly LineBreak = 19;
	public static readonly BitAnd = 20;
	public static readonly BitOr = 21;
	public static readonly BitXor = 22;
	public static readonly RightShiftArithmetic = 23;
	public static readonly LeftShiftArithmetic = 24;
	public static readonly RightShiftLogical = 25;
	public static readonly OpenBracket = 26;
	public static readonly CloseBracket = 27;
	public static readonly OpenParen = 28;
	public static readonly CloseParen = 29;
	public static readonly OpenBrace = 30;
	public static readonly CloseBrace = 31;
	public static readonly Ad = 32;
	public static readonly Comma = 33;
	public static readonly Assign = 34;
	public static readonly QuestionMark = 35;
	public static readonly Colon = 36;
	public static readonly TwoColon = 37;
	public static readonly Dot = 38;
	public static readonly Plus = 39;
	public static readonly Minus = 40;
	public static readonly BitNot = 41;
	public static readonly Not = 42;
	public static readonly Multiply = 43;
	public static readonly Divide = 44;
	public static readonly Modulus = 45;
	public static readonly Pow = 46;
	public static readonly Sharp = 47;
	public static readonly LessThan = 48;
	public static readonly MoreThan = 49;
	public static readonly LessThanEquals = 50;
	public static readonly MoreThanEquals = 51;
	public static readonly Equals = 52;
	public static readonly NotEquals = 53;
	public static readonly And = 54;
	public static readonly Or = 55;
	public static readonly MultiplyAssign = 56;
	public static readonly DivideAssign = 57;
	public static readonly ModulusAssign = 58;
	public static readonly PlusAssign = 59;
	public static readonly MinusAssign = 60;
	public static readonly LeftShiftArithmeticAssign = 61;
	public static readonly RightShiftArithmeticAssign = 62;
	public static readonly RightShiftLogicalAssign = 63;
	public static readonly BitAndAssign = 64;
	public static readonly BitXorAssign = 65;
	public static readonly BitOrAssign = 66;
	public static readonly LambdaStart = 67;
	public static readonly Pipe = 68;
	public static readonly Underscore = 69;
	public static readonly Declaration = 70;
	public static readonly Constant = 71;
	public static readonly Spread = 72;
	public static readonly NullLiteral = 73;
	public static readonly BooleanLiteral = 74;
	public static readonly DecimalLiteral = 75;
	public static readonly FloatLiteral = 76;
	public static readonly StringLiteral = 77;
	public static readonly StringFormatStart = 78;
	public static readonly StringFormatMiddle = 79;
	public static readonly StringFormatEnd = 80;
	public static readonly ID = 81;
	public static readonly Skip = 82;
	public static readonly UnexpectedCharacter = 83;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"Class", "Enum", "Scheme", "If", "Else", "Loop", "In", "Pass", "Continue", 
		"Break", "Return", "As", "Var", "Select", "Init", "Preprocessor", "LineBreak", 
		"BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", "LeftShiftArithmetic", 
		"RightShiftLogical", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"OpenBrace", "CloseBrace", "Ad", "Comma", "Assign", "QuestionMark", "Colon", 
		"TwoColon", "Dot", "Plus", "Minus", "BitNot", "Not", "Multiply", "Divide", 
		"Modulus", "Pow", "Sharp", "LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", 
		"Equals", "NotEquals", "And", "Or", "MultiplyAssign", "DivideAssign", 
		"ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", 
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign", 
		"BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", "Underscore", "Declaration", 
		"Constant", "Spread", "NullLiteral", "BooleanLiteral", "DecimalLiteral", 
		"FloatLiteral", "StringLiteral", "StringFormatStart", "StringFormatMiddle", 
		"StringFormatEnd", "ID", "Skip", "UnexpectedCharacter", "SPACES", "MULTI_LINE_COMMENT", 
		"SINGLE_LINE_COMMENT", "LINE_JOINING", "DECIMAL_NUMBER", "DECIMAL_DIGIT", 
		"CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'class'", "'enum'", "'scheme'", "'if'", 
		"'else'", "'loop'", "'in'", "'pass'", "'continue'", "'break'", "'return'", 
		"'as'", "'var'", "'select'", "'init'", undefined, undefined, "'and'", 
		"'or'", "'xor'", "'>>'", "'<<'", "'>>>'", "'['", "']'", "'('", "')'", 
		"'{'", "'}'", "'@'", "','", "'='", "'?'", "':'", "'::'", "'.'", "'+'", 
		"'-'", "'~'", "'!'", "'*'", "'/'", "'%'", "'^'", "'#'", "'<'", "'>'", 
		"'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'*='", "'/='", "'%='", 
		"'+='", "'-='", "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'\\'", 
		"'|'", "'_'", "':='", "'::='", "'...'", "'null'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "Class", "Enum", "Scheme", "If", "Else", 
		"Loop", "In", "Pass", "Continue", "Break", "Return", "As", "Var", "Select", 
		"Init", "Preprocessor", "LineBreak", "BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "Ad", "Comma", "Assign", 
		"QuestionMark", "Colon", "TwoColon", "Dot", "Plus", "Minus", "BitNot", 
		"Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", "LessThan", "MoreThan", 
		"LessThanEquals", "MoreThanEquals", "Equals", "NotEquals", "And", "Or", 
		"MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", 
		"LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", "RightShiftLogicalAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", 
		"Underscore", "Declaration", "Constant", "Spread", "NullLiteral", "BooleanLiteral", 
		"DecimalLiteral", "FloatLiteral", "StringLiteral", "StringFormatStart", 
		"StringFormatMiddle", "StringFormatEnd", "ID", "Skip", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 16:
			this.LineBreak_action(_localctx, actionIndex);
			break;

		case 23:
			this.OpenBracket_action(_localctx, actionIndex);
			break;

		case 24:
			this.CloseBracket_action(_localctx, actionIndex);
			break;

		case 25:
			this.OpenParen_action(_localctx, actionIndex);
			break;

		case 26:
			this.CloseParen_action(_localctx, actionIndex);
			break;

		case 27:
			this.OpenBrace_action(_localctx, actionIndex);
			break;

		case 28:
			this.CloseBrace_action(_localctx, actionIndex);
			break;
		}
	}
	private LineBreak_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.handleLineBreak()
			break;
		}
	}
	private OpenBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened++;
			break;
		}
	}
	private CloseBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.opened--;
			break;
		}
	}
	private OpenParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 3:
			this.opened++;
			break;
		}
	}
	private CloseParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 4:
			this.opened--;
			break;
		}
	}
	private OpenBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 5:
			this.opened++;
			break;
		}
	}
	private CloseBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 6:
			this.opened--;
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 16:
			return this.LineBreak_sempred(_localctx, predIndex);
		}
		return true;
	}
	private LineBreak_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atStartOfInput();
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02U\u023A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x04T\tT\x04U\tU\x04V\tV\x04W\tW\x04" +
		"X\tX\x04Y\tY\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x06\x11\u0108\n\x11\r\x11" +
		"\x0E\x11\u0109\x03\x12\x03\x12\x03\x12\x05\x12\u010F\n\x12\x03\x12\x03" +
		"\x12\x05\x12\u0113\n\x12\x03\x12\x05\x12\u0116\n\x12\x05\x12\u0118\n\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03" +
		"!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03&\x03&\x03\'" +
		"\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03" +
		".\x03.\x03/\x03/\x030\x030\x031\x031\x031\x032\x032\x032\x033\x033\x03" +
		"3\x034\x034\x034\x035\x035\x035\x036\x036\x036\x037\x037\x037\x038\x03" +
		"8\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03;\x03;\x03<\x03<\x03<\x03" +
		"<\x03=\x03=\x03=\x03=\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03?\x03@\x03" +
		"@\x03@\x03A\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03E\x03E\x03E\x03" +
		"F\x03F\x03F\x03F\x03G\x03G\x03G\x03G\x03H\x03H\x03H\x03H\x03H\x03I\x03" +
		"I\x03I\x03I\x03I\x03I\x03I\x03I\x03I\x05I\u01BE\nI\x03J\x03J\x03K\x03" +
		"K\x03K\x03K\x03L\x03L\x07L\u01C8\nL\fL\x0EL\u01CB\vL\x03L\x03L\x03M\x03" +
		"M\x03M\x03M\x07M\u01D3\nM\fM\x0EM\u01D6\vM\x03M\x03M\x03N\x03N\x07N\u01DC" +
		"\nN\fN\x0EN\u01DF\vN\x03N\x03N\x03O\x03O\x07O\u01E5\nO\fO\x0EO\u01E8\v" +
		"O\x03O\x03O\x03P\x03P\x07P\u01EE\nP\fP\x0EP\u01F1\vP\x03Q\x03Q\x03Q\x03" +
		"Q\x05Q\u01F7\nQ\x03Q\x03Q\x03R\x03R\x03R\x03R\x03S\x06S\u0200\nS\rS\x0E" +
		"S\u0201\x03T\x03T\x03T\x03T\x07T\u0208\nT\fT\x0ET\u020B\vT\x03T\x03T\x03" +
		"T\x03U\x03U\x03U\x03U\x07U\u0214\nU\fU\x0EU\u0217\vU\x03V\x03V\x05V\u021B" +
		"\nV\x03V\x05V\u021E\nV\x03V\x03V\x05V\u0222\nV\x03W\x06W\u0225\nW\rW\x0E" +
		"W\u0226\x03W\x03W\x06W\u022B\nW\rW\x0EW\u022C\x07W\u022F\nW\fW\x0EW\u0232" +
		"\vW\x03X\x03X\x03Y\x03Y\x03Y\x05Y\u0239\nY\x03\u0209\x02\x02Z\x03\x02" +
		"\x05\x05\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r\x02\n\x0F\x02\v\x11\x02" +
		"\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F\x19\x02\x10\x1B\x02\x11\x1D\x02\x12" +
		"\x1F\x02\x13!\x02\x14#\x02\x15%\x02\x16\'\x02\x17)\x02\x18+\x02\x19-\x02" +
		"\x1A/\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E7\x02\x1F9\x02 ;\x02!=\x02\"?" +
		"\x02#A\x02$C\x02%E\x02&G\x02\'I\x02(K\x02)M\x02*O\x02+Q\x02,S\x02-U\x02" +
		".W\x02/Y\x020[\x021]\x022_\x023a\x024c\x025e\x026g\x027i\x028k\x029m\x02" +
		":o\x02;q\x02<s\x02=u\x02>w\x02?y\x02@{\x02A}\x02B\x7F\x02C\x81\x02D\x83" +
		"\x02E\x85\x02F\x87\x02G\x89\x02H\x8B\x02I\x8D\x02J\x8F\x02K\x91\x02L\x93" +
		"\x02M\x95\x02N\x97\x02O\x99\x02P\x9B\x02Q\x9D\x02R\x9F\x02S\xA1\x02T\xA3" +
		"\x02U\xA5\x02\x02\xA7\x02\x02\xA9\x02\x02\xAB\x02\x02\xAD\x02\x02\xAF" +
		"\x02\x02\xB1\x02\x02\x03\x02\t\x04\x02\f\f\x0F\x0F\x05\x02C\\aac|\x06" +
		"\x022;C\\aac|\x04\x02\v\v\"\"\x03\x022;\x03\x02))\v\x02$$))^^ddhhpptt" +
		"vvxx\x02\u024A\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02" +
		"q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02" +
		"\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02" +
		"\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02" +
		"\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02" +
		"\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02" +
		"\x02\x91\x03\x02\x02\x02\x02\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02" +
		"\x02\x97\x03\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9B\x03\x02\x02\x02" +
		"\x02\x9D\x03\x02\x02\x02\x02\x9F\x03\x02\x02\x02\x02\xA1\x03\x02\x02\x02" +
		"\x02\xA3\x03\x02\x02\x02\x03\xB3\x03\x02\x02\x02\x05\xB9\x03\x02\x02\x02" +
		"\x07\xBE\x03\x02\x02\x02\t\xC5\x03\x02\x02\x02\v\xC8\x03\x02\x02\x02\r" +
		"\xCD\x03\x02\x02\x02\x0F\xD2\x03\x02\x02\x02\x11\xD5\x03\x02\x02\x02\x13" +
		"\xDA\x03\x02\x02\x02\x15\xE3\x03\x02\x02\x02\x17\xE9\x03\x02\x02\x02\x19" +
		"\xF0\x03\x02\x02\x02\x1B\xF3\x03\x02\x02\x02\x1D\xF7\x03\x02\x02\x02\x1F" +
		"\xFE\x03\x02\x02\x02!\u0103\x03\x02\x02\x02#\u0117\x03\x02\x02\x02%\u011B" +
		"\x03\x02\x02\x02\'\u011F\x03\x02\x02\x02)\u0122\x03\x02\x02\x02+\u0126" +
		"\x03\x02\x02\x02-\u0129\x03\x02\x02\x02/\u012C\x03\x02\x02\x021\u0130" +
		"\x03\x02\x02\x023\u0133\x03\x02\x02\x025\u0136\x03\x02\x02\x027\u0139" +
		"\x03\x02\x02\x029\u013C\x03\x02\x02\x02;\u013F\x03\x02\x02\x02=\u0142" +
		"\x03\x02\x02\x02?\u0144\x03\x02\x02\x02A\u0146\x03\x02\x02\x02C\u0148" +
		"\x03\x02\x02\x02E\u014A\x03\x02\x02\x02G\u014C\x03\x02\x02\x02I\u014F" +
		"\x03\x02\x02\x02K\u0151\x03\x02\x02\x02M\u0153\x03\x02\x02\x02O\u0155" +
		"\x03\x02\x02\x02Q\u0157\x03\x02\x02\x02S\u0159\x03\x02\x02\x02U\u015B" +
		"\x03\x02\x02\x02W\u015D\x03\x02\x02\x02Y\u015F\x03\x02\x02\x02[\u0161" +
		"\x03\x02\x02\x02]\u0163\x03\x02\x02\x02_\u0165\x03\x02\x02\x02a\u0167" +
		"\x03\x02\x02\x02c\u016A\x03\x02\x02\x02e\u016D\x03\x02\x02\x02g\u0170" +
		"\x03\x02\x02\x02i\u0173\x03\x02\x02\x02k\u0176\x03\x02\x02\x02m\u0179" +
		"\x03\x02\x02\x02o\u017C\x03\x02\x02\x02q\u017F\x03\x02\x02\x02s\u0182" +
		"\x03\x02\x02\x02u\u0185\x03\x02\x02\x02w\u0188\x03\x02\x02\x02y\u018C" +
		"\x03\x02\x02\x02{\u0190\x03\x02\x02\x02}\u0195\x03\x02\x02\x02\x7F\u0198" +
		"\x03\x02\x02\x02\x81\u019B\x03\x02\x02\x02\x83\u019E\x03\x02\x02\x02\x85" +
		"\u01A0\x03\x02\x02\x02\x87\u01A2\x03\x02\x02\x02\x89\u01A4\x03\x02\x02" +
		"\x02\x8B\u01A7\x03\x02\x02\x02\x8D\u01AB\x03\x02\x02\x02\x8F\u01AF\x03" +
		"\x02\x02\x02\x91\u01BD\x03\x02\x02\x02\x93\u01BF\x03\x02\x02\x02\x95\u01C1" +
		"\x03\x02\x02\x02\x97\u01C5\x03\x02\x02\x02\x99\u01CE\x03\x02\x02\x02\x9B" +
		"\u01D9\x03\x02\x02\x02\x9D\u01E2\x03\x02\x02\x02\x9F\u01EB\x03\x02\x02" +
		"\x02\xA1\u01F6\x03\x02\x02\x02\xA3\u01FA\x03\x02\x02\x02\xA5\u01FF\x03" +
		"\x02\x02\x02\xA7\u0203\x03\x02\x02\x02\xA9\u020F\x03\x02\x02\x02\xAB\u0218" +
		"\x03\x02\x02\x02\xAD\u0224\x03\x02\x02\x02\xAF\u0233\x03\x02\x02\x02\xB1" +
		"\u0238\x03\x02\x02\x02\xB3\xB4\x07e\x02\x02\xB4\xB5\x07n\x02\x02\xB5\xB6" +
		"\x07c\x02\x02\xB6\xB7\x07u\x02\x02\xB7\xB8\x07u\x02\x02\xB8\x04\x03\x02" +
		"\x02\x02\xB9\xBA\x07g\x02\x02\xBA\xBB\x07p\x02\x02\xBB\xBC\x07w\x02\x02" +
		"\xBC\xBD\x07o\x02\x02\xBD\x06\x03\x02\x02\x02\xBE\xBF\x07u\x02\x02\xBF" +
		"\xC0\x07e\x02\x02\xC0\xC1\x07j\x02\x02\xC1\xC2\x07g\x02\x02\xC2\xC3\x07" +
		"o\x02\x02\xC3\xC4\x07g\x02\x02\xC4\b\x03\x02\x02\x02\xC5\xC6\x07k\x02" +
		"\x02\xC6\xC7\x07h\x02\x02\xC7\n\x03\x02\x02\x02\xC8\xC9\x07g\x02\x02\xC9" +
		"\xCA\x07n\x02\x02\xCA\xCB\x07u\x02\x02\xCB\xCC\x07g\x02\x02\xCC\f\x03" +
		"\x02\x02\x02\xCD\xCE\x07n\x02\x02\xCE\xCF\x07q\x02\x02\xCF\xD0\x07q\x02" +
		"\x02\xD0\xD1\x07r\x02\x02\xD1\x0E\x03\x02\x02\x02\xD2\xD3\x07k\x02\x02" +
		"\xD3\xD4\x07p\x02\x02\xD4\x10\x03\x02\x02\x02\xD5\xD6\x07r\x02\x02\xD6" +
		"\xD7\x07c\x02\x02\xD7\xD8\x07u\x02\x02\xD8\xD9\x07u\x02\x02\xD9\x12\x03" +
		"\x02\x02\x02\xDA\xDB\x07e\x02\x02\xDB\xDC\x07q\x02\x02\xDC\xDD\x07p\x02" +
		"\x02\xDD\xDE\x07v\x02\x02\xDE\xDF\x07k\x02\x02\xDF\xE0\x07p\x02\x02\xE0" +
		"\xE1\x07w\x02\x02\xE1\xE2\x07g\x02\x02\xE2\x14\x03\x02\x02\x02\xE3\xE4" +
		"\x07d\x02\x02\xE4\xE5\x07t\x02\x02\xE5\xE6\x07g\x02\x02\xE6\xE7\x07c\x02" +
		"\x02\xE7\xE8\x07m\x02\x02\xE8\x16\x03\x02\x02\x02\xE9\xEA\x07t\x02\x02" +
		"\xEA\xEB\x07g\x02\x02\xEB\xEC\x07v\x02\x02\xEC\xED\x07w\x02\x02\xED\xEE" +
		"\x07t\x02\x02\xEE\xEF\x07p\x02\x02\xEF\x18\x03\x02\x02\x02\xF0\xF1\x07" +
		"c\x02\x02\xF1\xF2\x07u\x02\x02\xF2\x1A\x03\x02\x02\x02\xF3\xF4\x07x\x02" +
		"\x02\xF4\xF5\x07c\x02\x02\xF5\xF6\x07t\x02\x02\xF6\x1C\x03\x02\x02\x02" +
		"\xF7\xF8\x07u\x02\x02\xF8\xF9\x07g\x02\x02\xF9\xFA\x07n\x02\x02\xFA\xFB" +
		"\x07g\x02\x02\xFB\xFC\x07e\x02\x02\xFC\xFD\x07v\x02\x02\xFD\x1E\x03\x02" +
		"\x02\x02\xFE\xFF\x07k\x02\x02\xFF\u0100\x07p\x02\x02\u0100\u0101\x07k" +
		"\x02\x02\u0101\u0102\x07v\x02\x02\u0102 \x03\x02\x02\x02\u0103\u0104\x07" +
		"%\x02\x02\u0104\u0105\x07<\x02\x02\u0105\u0107\x03\x02\x02\x02\u0106\u0108" +
		"\n\x02\x02\x02\u0107\u0106\x03\x02\x02\x02\u0108\u0109\x03\x02\x02\x02" +
		"\u0109\u0107\x03\x02\x02\x02\u0109\u010A\x03\x02\x02\x02\u010A\"\x03\x02" +
		"\x02\x02\u010B\u010C\x06\x12\x02\x02\u010C\u0118\x05\xA5S\x02\u010D\u010F" +
		"\x07\x0F\x02\x02\u010E\u010D\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02" +
		"\u010F\u0110\x03\x02\x02\x02\u0110\u0113\x07\f\x02\x02\u0111\u0113\x07" +
		"\x0F\x02\x02\u0112\u010E\x03\x02\x02\x02\u0112\u0111\x03\x02\x02\x02\u0113" +
		"\u0115\x03\x02\x02\x02\u0114\u0116\x05\xA5S\x02\u0115\u0114\x03\x02\x02" +
		"\x02\u0115\u0116\x03\x02\x02\x02\u0116\u0118\x03\x02\x02\x02\u0117\u010B" +
		"\x03\x02\x02\x02\u0117\u0112\x03\x02\x02\x02\u0118\u0119\x03\x02\x02\x02" +
		"\u0119\u011A\b\x12\x02\x02\u011A$\x03\x02\x02\x02\u011B\u011C\x07c\x02" +
		"\x02\u011C\u011D\x07p\x02\x02\u011D\u011E\x07f\x02\x02\u011E&\x03\x02" +
		"\x02\x02\u011F\u0120\x07q\x02\x02\u0120\u0121\x07t\x02\x02\u0121(\x03" +
		"\x02\x02\x02\u0122\u0123\x07z\x02\x02\u0123\u0124\x07q\x02\x02\u0124\u0125" +
		"\x07t\x02\x02\u0125*\x03\x02\x02\x02\u0126\u0127\x07@\x02\x02\u0127\u0128" +
		"\x07@\x02\x02\u0128,\x03\x02\x02\x02\u0129\u012A\x07>\x02\x02\u012A\u012B" +
		"\x07>\x02\x02\u012B.\x03\x02\x02\x02\u012C\u012D\x07@\x02\x02\u012D\u012E" +
		"\x07@\x02\x02\u012E\u012F\x07@\x02\x02\u012F0\x03\x02\x02\x02\u0130\u0131" +
		"\x07]\x02\x02\u0131\u0132\b\x19\x03\x02\u01322\x03\x02\x02\x02\u0133\u0134" +
		"\x07_\x02\x02\u0134\u0135\b\x1A\x04\x02\u01354\x03\x02\x02\x02\u0136\u0137" +
		"\x07*\x02\x02\u0137\u0138\b\x1B\x05\x02\u01386\x03\x02\x02\x02\u0139\u013A" +
		"\x07+\x02\x02\u013A\u013B\b\x1C\x06\x02\u013B8\x03\x02\x02\x02\u013C\u013D" +
		"\x07}\x02\x02\u013D\u013E\b\x1D\x07\x02\u013E:\x03\x02\x02\x02\u013F\u0140" +
		"\x07\x7F\x02\x02\u0140\u0141\b\x1E\b\x02\u0141<\x03\x02\x02\x02\u0142" +
		"\u0143\x07B\x02\x02\u0143>\x03\x02\x02\x02\u0144\u0145\x07.\x02\x02\u0145" +
		"@\x03\x02\x02\x02\u0146\u0147\x07?\x02\x02\u0147B\x03\x02\x02\x02\u0148" +
		"\u0149\x07A\x02\x02\u0149D\x03\x02\x02\x02\u014A\u014B\x07<\x02\x02\u014B" +
		"F\x03\x02\x02\x02\u014C\u014D\x07<\x02\x02\u014D\u014E\x07<\x02\x02\u014E" +
		"H\x03\x02\x02\x02\u014F\u0150\x070\x02\x02\u0150J\x03\x02\x02\x02\u0151" +
		"\u0152\x07-\x02\x02\u0152L\x03\x02\x02\x02\u0153\u0154\x07/\x02\x02\u0154" +
		"N\x03\x02\x02\x02\u0155\u0156\x07\x80\x02\x02\u0156P\x03\x02\x02\x02\u0157" +
		"\u0158\x07#\x02\x02\u0158R\x03\x02\x02\x02\u0159\u015A\x07,\x02\x02\u015A" +
		"T\x03\x02\x02\x02\u015B\u015C\x071\x02\x02\u015CV\x03\x02\x02\x02\u015D" +
		"\u015E\x07\'\x02\x02\u015EX\x03\x02\x02\x02\u015F\u0160\x07`\x02\x02\u0160" +
		"Z\x03\x02\x02\x02\u0161\u0162\x07%\x02\x02\u0162\\\x03\x02\x02\x02\u0163" +
		"\u0164\x07>\x02\x02\u0164^\x03\x02\x02\x02\u0165\u0166\x07@\x02\x02\u0166" +
		"`\x03\x02\x02\x02\u0167\u0168\x07>\x02\x02\u0168\u0169\x07?\x02\x02\u0169" +
		"b\x03\x02\x02\x02\u016A\u016B\x07@\x02\x02\u016B\u016C\x07?\x02\x02\u016C" +
		"d\x03\x02\x02\x02\u016D\u016E\x07?\x02\x02\u016E\u016F\x07?\x02\x02\u016F" +
		"f\x03\x02\x02\x02\u0170\u0171\x07#\x02\x02\u0171\u0172\x07?\x02\x02\u0172" +
		"h\x03\x02\x02\x02\u0173\u0174\x07(\x02\x02\u0174\u0175\x07(\x02\x02\u0175" +
		"j\x03\x02\x02\x02\u0176\u0177\x07~\x02\x02\u0177\u0178\x07~\x02\x02\u0178" +
		"l\x03\x02\x02\x02\u0179\u017A\x07,\x02\x02\u017A\u017B\x07?\x02\x02\u017B" +
		"n\x03\x02\x02\x02\u017C\u017D\x071\x02\x02\u017D\u017E\x07?\x02\x02\u017E" +
		"p\x03\x02\x02\x02\u017F\u0180\x07\'\x02\x02\u0180\u0181\x07?\x02\x02\u0181" +
		"r\x03\x02\x02\x02\u0182\u0183\x07-\x02\x02\u0183\u0184\x07?\x02\x02\u0184" +
		"t\x03\x02\x02\x02\u0185\u0186\x07/\x02\x02\u0186\u0187\x07?\x02\x02\u0187" +
		"v\x03\x02\x02\x02\u0188\u0189\x07>\x02\x02\u0189\u018A\x07>\x02\x02\u018A" +
		"\u018B\x07?\x02\x02\u018Bx\x03\x02\x02\x02\u018C\u018D\x07@\x02\x02\u018D" +
		"\u018E\x07@\x02\x02\u018E\u018F\x07?\x02\x02\u018Fz\x03\x02\x02\x02\u0190" +
		"\u0191\x07@\x02\x02\u0191\u0192\x07@\x02\x02\u0192\u0193\x07@\x02\x02" +
		"\u0193\u0194\x07?\x02\x02\u0194|\x03\x02\x02\x02\u0195\u0196\x07(\x02" +
		"\x02\u0196\u0197\x07?\x02\x02\u0197~\x03\x02\x02\x02\u0198\u0199\x07`" +
		"\x02\x02\u0199\u019A\x07?\x02\x02\u019A\x80\x03\x02\x02\x02\u019B\u019C" +
		"\x07~\x02\x02\u019C\u019D\x07?\x02\x02\u019D\x82\x03\x02\x02\x02\u019E" +
		"\u019F\x07^\x02\x02\u019F\x84\x03\x02\x02\x02\u01A0\u01A1\x07~\x02\x02" +
		"\u01A1\x86\x03\x02\x02\x02\u01A2\u01A3\x07a\x02\x02\u01A3\x88\x03\x02" +
		"\x02\x02\u01A4\u01A5\x07<\x02\x02\u01A5\u01A6\x07?\x02\x02\u01A6\x8A\x03" +
		"\x02\x02\x02\u01A7\u01A8\x07<\x02\x02\u01A8\u01A9\x07<\x02\x02\u01A9\u01AA" +
		"\x07?\x02\x02\u01AA\x8C\x03\x02\x02\x02\u01AB\u01AC\x070\x02\x02\u01AC" +
		"\u01AD\x070\x02\x02\u01AD\u01AE\x070\x02\x02\u01AE\x8E\x03\x02\x02\x02" +
		"\u01AF\u01B0\x07p\x02\x02\u01B0\u01B1\x07w\x02\x02\u01B1\u01B2\x07n\x02" +
		"\x02\u01B2\u01B3\x07n\x02\x02\u01B3\x90\x03\x02\x02\x02\u01B4\u01B5\x07" +
		"v\x02\x02\u01B5\u01B6\x07t\x02\x02\u01B6\u01B7\x07w\x02\x02\u01B7\u01BE" +
		"\x07g\x02\x02\u01B8\u01B9\x07h\x02\x02\u01B9\u01BA\x07c\x02\x02\u01BA" +
		"\u01BB\x07n\x02\x02\u01BB\u01BC\x07u\x02\x02\u01BC\u01BE\x07g\x02\x02" +
		"\u01BD\u01B4\x03\x02\x02\x02\u01BD\u01B8\x03\x02\x02\x02\u01BE\x92\x03" +
		"\x02\x02\x02\u01BF\u01C0\x05\xADW\x02\u01C0\x94\x03\x02\x02\x02\u01C1" +
		"\u01C2\x05\xADW\x02\u01C2\u01C3\x070\x02\x02\u01C3\u01C4\x05\xADW\x02" +
		"\u01C4\x96\x03\x02\x02\x02\u01C5\u01C9\x07)\x02\x02\u01C6\u01C8\x05\xB1" +
		"Y\x02\u01C7\u01C6\x03\x02\x02\x02\u01C8\u01CB\x03\x02\x02\x02\u01C9\u01C7" +
		"\x03\x02\x02\x02\u01C9\u01CA\x03\x02\x02\x02\u01CA\u01CC\x03\x02\x02\x02" +
		"\u01CB\u01C9\x03\x02\x02\x02\u01CC\u01CD\x07)\x02\x02\u01CD\x98\x03\x02" +
		"\x02\x02\u01CE\u01CF\x07h\x02\x02\u01CF\u01D0\x07)\x02\x02\u01D0\u01D4" +
		"\x03\x02\x02\x02\u01D1\u01D3\x05\xB1Y\x02\u01D2\u01D1\x03\x02\x02\x02" +
		"\u01D3\u01D6\x03\x02\x02\x02\u01D4\u01D2\x03\x02\x02\x02\u01D4\u01D5\x03" +
		"\x02\x02\x02\u01D5\u01D7\x03\x02\x02\x02\u01D6\u01D4\x03\x02\x02\x02\u01D7" +
		"\u01D8\x07}\x02\x02\u01D8\x9A\x03\x02\x02\x02\u01D9\u01DD\x07\x7F\x02" +
		"\x02\u01DA\u01DC\x05\xB1Y\x02\u01DB\u01DA\x03\x02\x02\x02\u01DC\u01DF" +
		"\x03\x02\x02\x02\u01DD\u01DB\x03\x02\x02\x02\u01DD\u01DE\x03\x02\x02\x02" +
		"\u01DE\u01E0\x03\x02\x02\x02\u01DF\u01DD\x03\x02\x02\x02\u01E0\u01E1\x07" +
		"}\x02\x02\u01E1\x9C\x03\x02\x02\x02\u01E2\u01E6\x07\x7F\x02\x02\u01E3" +
		"\u01E5\x05\xB1Y\x02\u01E4\u01E3\x03\x02\x02\x02\u01E5\u01E8\x03\x02\x02" +
		"\x02\u01E6\u01E4\x03\x02\x02\x02\u01E6\u01E7\x03\x02\x02\x02\u01E7\u01E9" +
		"\x03\x02\x02\x02\u01E8\u01E6\x03\x02\x02\x02\u01E9\u01EA\x07)\x02\x02" +
		"\u01EA\x9E\x03\x02\x02\x02\u01EB\u01EF\t\x03\x02\x02\u01EC\u01EE\t\x04" +
		"\x02\x02\u01ED\u01EC\x03\x02\x02\x02\u01EE\u01F1\x03\x02\x02\x02\u01EF" +
		"\u01ED\x03\x02\x02\x02\u01EF\u01F0\x03\x02\x02\x02\u01F0\xA0\x03\x02\x02" +
		"\x02\u01F1\u01EF\x03\x02\x02\x02\u01F2\u01F7\x05\xA5S\x02\u01F3\u01F7" +
		"\x05\xA9U\x02\u01F4\u01F7\x05\xA7T\x02\u01F5\u01F7\x05\xABV\x02\u01F6" +
		"\u01F2\x03\x02\x02\x02\u01F6\u01F3\x03\x02\x02\x02\u01F6\u01F4\x03\x02" +
		"\x02\x02\u01F6\u01F5\x03\x02\x02\x02\u01F7\u01F8\x03\x02\x02\x02\u01F8" +
		"\u01F9\bQ\t\x02\u01F9\xA2\x03\x02\x02\x02\u01FA\u01FB\v\x02\x02\x02\u01FB" +
		"\u01FC\x03\x02\x02\x02\u01FC\u01FD\bR\n\x02\u01FD\xA4\x03\x02\x02\x02" +
		"\u01FE\u0200\t\x05\x02\x02\u01FF\u01FE\x03\x02\x02\x02\u0200\u0201\x03" +
		"\x02\x02\x02\u0201\u01FF\x03\x02\x02\x02\u0201\u0202\x03\x02\x02\x02\u0202" +
		"\xA6\x03\x02\x02\x02\u0203\u0204\x071\x02\x02\u0204\u0205\x07,\x02\x02" +
		"\u0205\u0209\x03\x02\x02\x02\u0206\u0208\v\x02\x02\x02\u0207\u0206\x03" +
		"\x02\x02\x02\u0208\u020B\x03\x02\x02\x02\u0209\u020A\x03\x02\x02\x02\u0209" +
		"\u0207\x03\x02\x02\x02\u020A\u020C\x03\x02\x02\x02\u020B\u0209\x03\x02" +
		"\x02\x02\u020C\u020D\x07,\x02\x02\u020D\u020E\x071\x02\x02\u020E\xA8\x03" +
		"\x02\x02\x02\u020F\u0210\x071\x02\x02\u0210\u0211\x071\x02\x02\u0211\u0215" +
		"\x03\x02\x02\x02\u0212\u0214\n\x02\x02\x02\u0213\u0212\x03\x02\x02\x02" +
		"\u0214\u0217\x03\x02\x02\x02\u0215\u0213\x03\x02\x02\x02\u0215\u0216\x03" +
		"\x02\x02\x02\u0216\xAA\x03\x02\x02\x02\u0217\u0215\x03\x02\x02\x02\u0218" +
		"\u021A\x07^\x02\x02\u0219\u021B\x05\xA5S\x02\u021A\u0219\x03\x02\x02\x02" +
		"\u021A\u021B\x03\x02\x02\x02\u021B\u0221\x03\x02\x02\x02\u021C\u021E\x07" +
		"\x0F\x02\x02\u021D\u021C\x03\x02\x02\x02\u021D\u021E\x03\x02\x02\x02\u021E" +
		"\u021F\x03\x02\x02\x02\u021F\u0222\x07\f\x02\x02\u0220\u0222\x07\x0F\x02" +
		"\x02\u0221\u021D\x03\x02\x02\x02\u0221\u0220\x03\x02\x02\x02\u0222\xAC" +
		"\x03\x02\x02\x02\u0223\u0225\x05\xAFX\x02\u0224\u0223\x03\x02\x02\x02" +
		"\u0225\u0226\x03\x02\x02\x02\u0226\u0224\x03\x02\x02\x02\u0226\u0227\x03" +
		"\x02\x02\x02\u0227\u0230\x03\x02\x02\x02\u0228\u022A\x07a\x02\x02\u0229" +
		"\u022B\x05\xAFX\x02\u022A\u0229\x03\x02\x02\x02\u022B\u022C\x03\x02\x02" +
		"\x02\u022C\u022A\x03\x02\x02\x02\u022C\u022D\x03\x02\x02\x02\u022D\u022F" +
		"\x03\x02\x02\x02\u022E\u0228\x03\x02\x02\x02\u022F\u0232\x03\x02\x02\x02" +
		"\u0230\u022E\x03\x02\x02\x02\u0230\u0231\x03\x02\x02\x02\u0231\xAE\x03" +
		"\x02\x02\x02\u0232\u0230\x03\x02\x02\x02\u0233\u0234\t\x06\x02\x02\u0234" +
		"\xB0\x03\x02\x02\x02\u0235\u0239\n\x07\x02\x02\u0236\u0237\x07^\x02\x02" +
		"\u0237\u0239\t\b\x02\x02";
	private static readonly _serializedATNSegment1: string =
		"\u0238\u0235\x03\x02\x02\x02\u0238\u0236\x03\x02\x02\x02\u0239\xB2\x03" +
		"\x02\x02\x02\x19\x02\u0109\u010E\u0112\u0115\u0117\u01BD\u01C9\u01D4\u01DD" +
		"\u01E6\u01EF\u01F6\u0201\u0209\u0215\u021A\u021D\u0221\u0226\u022C\u0230" +
		"\u0238\v\x03\x12\x02\x03\x19\x03\x03\x1A\x04\x03\x1B\x05\x03\x1C\x06\x03" +
		"\x1D\x07\x03\x1E\b\b\x02\x02\x02\x04\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			XonLexer._serializedATNSegment0,
			XonLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

