// Generated from XonLexer.g4 by ANTLR 4.9.0-SNAPSHOT

 
    import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly OPEN = 3;
	public static readonly CLOSE = 4;
	public static readonly BREAK = 5;
	public static readonly CONTINUE = 6;
	public static readonly DO = 7;
	public static readonly ELSE = 8;
	public static readonly EXPORT = 9;
	public static readonly FOR = 10;
	public static readonly IF = 11;
	public static readonly IMPORT = 12;
	public static readonly IN = 13;
	public static readonly RETURN = 14;
	public static readonly WHILE = 15;
	public static readonly LAMBDA = 16;
	public static readonly FLOAT = 17;
	public static readonly INTEGER = 18;
	public static readonly STRING = 19;
	public static readonly PREPROCESSOR = 20;
	public static readonly OP = 21;
	public static readonly DOT = 22;
	public static readonly META = 23;
	public static readonly COMMA = 24;
	public static readonly ASSIGN = 25;
	public static readonly COLON = 26;
	public static readonly ID = 27;
	public static readonly NL = 28;
	public static readonly LINE_COMMENT = 29;
	public static readonly WS = 30;
	public static readonly BLOCK_COMMENT = 31;
	public static readonly LINE_JOINING = 32;
	public static readonly UNEXPECTED = 33;
	public static readonly ERROR = 2;
	public static readonly WHITESPACE = 3;
	public static readonly COMMENT_CHANNEL = 4;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR", "WHITESPACE", "COMMENT_CHANNEL",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"OPEN", "CLOSE", "BREAK", "CONTINUE", "DO", "ELSE", "EXPORT", "FOR", "IF", 
		"IMPORT", "IN", "RETURN", "WHILE", "LAMBDA", "FLOAT", "INTEGER", "STRING", 
		"PREPROCESSOR", "OP", "DOT", "META", "COMMA", "ASSIGN", "COLON", "ID", 
		"NL", "LINE_COMMENT", "WS", "BLOCK_COMMENT", "LINE_JOINING", "UNEXPECTED", 
		"Radix", "DigitNumber", "AlphabetNumber",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "'break'", "'continue'", 
		"'do'", "'else'", "'export'", "'for'", "'if'", "'import'", "'in'", "'return'", 
		"'while'", undefined, undefined, undefined, undefined, undefined, undefined, 
		"'.'", "'::'", "','", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "OPEN", "CLOSE", "BREAK", "CONTINUE", "DO", 
		"ELSE", "EXPORT", "FOR", "IF", "IMPORT", "IN", "RETURN", "WHILE", "LAMBDA", 
		"FLOAT", "INTEGER", "STRING", "PREPROCESSOR", "OP", "DOT", "META", "COMMA", 
		"ASSIGN", "COLON", "ID", "NL", "LINE_COMMENT", "WS", "BLOCK_COMMENT", 
		"LINE_JOINING", "UNEXPECTED",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 0:
			this.OPEN_action(_localctx, actionIndex);
			break;

		case 1:
			this.CLOSE_action(_localctx, actionIndex);
			break;

		case 25:
			this.NL_action(_localctx, actionIndex);
			break;
		}
	}
	private OPEN_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.opened++;
			break;
		}
	}
	private CLOSE_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened--;
			break;
		}
	}
	private NL_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.handleLineBreak()
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02#\u0147\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x05" +
		"\x0F\x8C\n\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0F\x93\n\x0F" +
		"\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10" +
		"\x05\x10\x9E\n\x10\x03\x11\x03\x11\x03\x11\x03\x11\x05\x11\xA4\n\x11\x03" +
		"\x12\x03\x12\x03\x12\x03\x12\x07\x12\xAA\n\x12\f\x12\x0E\x12\xAD\v\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x07\x13" +
		"\xB7\n\x13\f\x13\x0E\x13\xBA\v\x13\x03\x13\x03\x13\x07\x13\xBE\n\x13\f" +
		"\x13\x0E\x13\xC1\v\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x05\x14\xD9\n" +
		"\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x05\x19\xE6\n\x19\x03\x19\x03\x19\x03\x19\x05\x19" +
		"\xEB\n\x19\x03\x1A\x03\x1A\x07\x1A\xEF\n\x1A\f\x1A\x0E\x1A\xF2\v\x1A\x03" +
		"\x1B\x03\x1B\x07\x1B\xF6\n\x1B\f\x1B\x0E\x1B\xF9\v\x1B\x06\x1B\xFB\n\x1B" +
		"\r\x1B\x0E\x1B\xFC\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x07" +
		"\x1C\u0105\n\x1C\f\x1C\x0E\x1C\u0108\v\x1C\x03\x1D\x06\x1D\u010B\n\x1D" +
		"\r\x1D\x0E\x1D\u010C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x07\x1E\u0116\n\x1E\f\x1E\x0E\x1E\u0119\v\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x07\x1F\u0122\n\x1F\f\x1F\x0E\x1F" +
		"\u0125\v\x1F\x03\x1F\x05\x1F\u0128\n\x1F\x03\x1F\x03\x1F\x05\x1F\u012C" +
		"\n\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03!\x03!\x05!\u0136\n!\x03" +
		"!\x03!\x03\"\x03\"\x07\"\u013C\n\"\f\"\x0E\"\u013F\v\"\x03#\x03#\x07#" +
		"\u0143\n#\f#\x0E#\u0146\v#\x05\xB8\xBF\u0117\x02\x02$\x03\x02\x05\x05" +
		"\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r\x02\n\x0F\x02\v\x11\x02\f\x13\x02" +
		"\r\x15\x02\x0E\x17\x02\x0F\x19\x02\x10\x1B\x02\x11\x1D\x02\x12\x1F\x02" +
		"\x13!\x02\x14#\x02\x15%\x02\x16\'\x02\x17)\x02\x18+\x02\x19-\x02\x1A/" +
		"\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E7\x02\x1F9\x02 ;\x02!=\x02\"?\x02#" +
		"A\x02\x02C\x02\x02E\x02\x02\x03\x02\x0F\x05\x02**]]}}\x05\x02++__\x7F" +
		"\x7F\x03\x02))\n\x02))^^ddhhppttvvxx\n\x02##\'(,-//11AA``~~\x05\x02C\\" +
		"aac|\x06\x022;C\\aac|\x04\x02\f\f\x0F\x0F\x04\x02\v\v\"\"\x03\x022;\x04" +
		"\x02ZZzz\x04\x022;aa\x05\x022;C\\c|\x02\u016A\x02\x03\x03\x02\x02\x02" +
		"\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02" +
		"\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02" +
		"\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02" +
		"\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02" +
		"\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02" +
		"#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03" +
		"\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02" +
		"\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02" +
		"7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02" +
		"\x02\x02\x02?\x03\x02\x02\x02\x03G\x03\x02\x02\x02\x05J\x03\x02\x02\x02" +
		"\x07M\x03\x02\x02\x02\tS\x03\x02\x02\x02\v\\\x03\x02\x02\x02\r_\x03\x02" +
		"\x02\x02\x0Fd\x03\x02\x02\x02\x11k\x03\x02\x02\x02\x13o\x03\x02\x02\x02" +
		"\x15r\x03\x02\x02\x02\x17y\x03\x02\x02\x02\x19|\x03\x02\x02\x02\x1B\x83" +
		"\x03\x02\x02\x02\x1D\x8B\x03\x02\x02\x02\x1F\x9D\x03\x02\x02\x02!\xA3" +
		"\x03\x02\x02\x02#\xA5\x03\x02\x02\x02%\xB0\x03\x02\x02\x02\'\xD8\x03\x02" +
		"\x02\x02)\xDA\x03\x02\x02\x02+\xDC\x03\x02\x02\x02-\xDF\x03\x02\x02\x02" +
		"/\xE1\x03\x02\x02\x021\xE5\x03\x02\x02\x023\xEC\x03\x02\x02\x025\xFA\x03" +
		"\x02\x02\x027\u0100\x03\x02\x02\x029\u010A\x03\x02\x02\x02;\u0110\x03" +
		"\x02\x02\x02=\u011F\x03\x02\x02\x02?\u012F\x03\x02\x02\x02A\u0133\x03" +
		"\x02\x02\x02C\u0139\x03\x02\x02\x02E\u0140\x03\x02\x02\x02GH\t\x02\x02" +
		"\x02HI\b\x02\x02\x02I\x04\x03\x02\x02\x02JK\t\x03\x02\x02KL\b\x03\x03" +
		"\x02L\x06\x03\x02\x02\x02MN\x07d\x02\x02NO\x07t\x02\x02OP\x07g\x02\x02" +
		"PQ\x07c\x02\x02QR\x07m\x02\x02R\b\x03\x02\x02\x02ST\x07e\x02\x02TU\x07" +
		"q\x02\x02UV\x07p\x02\x02VW\x07v\x02\x02WX\x07k\x02\x02XY\x07p\x02\x02" +
		"YZ\x07w\x02\x02Z[\x07g\x02\x02[\n\x03\x02\x02\x02\\]\x07f\x02\x02]^\x07" +
		"q\x02\x02^\f\x03\x02\x02\x02_`\x07g\x02\x02`a\x07n\x02\x02ab\x07u\x02" +
		"\x02bc\x07g\x02\x02c\x0E\x03\x02\x02\x02de\x07g\x02\x02ef\x07z\x02\x02" +
		"fg\x07r\x02\x02gh\x07q\x02\x02hi\x07t\x02\x02ij\x07v\x02\x02j\x10\x03" +
		"\x02\x02\x02kl\x07h\x02\x02lm\x07q\x02\x02mn\x07t\x02\x02n\x12\x03\x02" +
		"\x02\x02op\x07k\x02\x02pq\x07h\x02\x02q\x14\x03\x02\x02\x02rs\x07k\x02" +
		"\x02st\x07o\x02\x02tu\x07r\x02\x02uv\x07q\x02\x02vw\x07t\x02\x02wx\x07" +
		"v\x02\x02x\x16\x03\x02\x02\x02yz\x07k\x02\x02z{\x07p\x02\x02{\x18\x03" +
		"\x02\x02\x02|}\x07t\x02\x02}~\x07g\x02\x02~\x7F\x07v\x02\x02\x7F\x80\x07" +
		"w\x02\x02\x80\x81\x07t\x02\x02\x81\x82\x07p\x02\x02\x82\x1A\x03\x02\x02" +
		"\x02\x83\x84\x07y\x02\x02\x84\x85\x07j\x02\x02\x85\x86\x07k\x02\x02\x86" +
		"\x87\x07n\x02\x02\x87\x88\x07g\x02\x02\x88\x1C\x03\x02\x02\x02\x89\x8C" +
		"\x055\x1B\x02\x8A\x8C\x059\x1D\x02\x8B\x89\x03\x02\x02\x02\x8B\x8A\x03" +
		"\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8E\x07" +
		"?\x02\x02\x8E\x8F\x07@\x02\x02\x8F\x92\x03\x02\x02\x02\x90\x93\x055\x1B" +
		"\x02\x91\x93\x059\x1D\x02\x92\x90\x03\x02\x02\x02\x92\x91\x03\x02\x02" +
		"\x02\x92\x93\x03\x02\x02\x02\x93\x1E\x03\x02\x02\x02\x94\x95\x05A!\x02" +
		"\x95\x96\x05E#\x02\x96\x97\x070\x02\x02\x97\x98\x05E#\x02\x98\x9E\x03" +
		"\x02\x02\x02\x99\x9A\x05C\"\x02\x9A\x9B\x070\x02\x02\x9B\x9C\x05C\"\x02" +
		"\x9C\x9E\x03\x02\x02\x02\x9D\x94\x03\x02\x02\x02\x9D\x99\x03\x02\x02\x02" +
		"\x9E \x03\x02\x02\x02\x9F\xA0\x05A!\x02\xA0\xA1\x05E#\x02\xA1\xA4\x03" +
		"\x02\x02\x02\xA2\xA4\x05C\"\x02\xA3\x9F\x03\x02\x02\x02\xA3\xA2\x03\x02" +
		"\x02\x02\xA4\"\x03\x02\x02\x02\xA5\xAB\x07)\x02\x02\xA6\xAA\n\x04\x02" +
		"\x02\xA7\xA8\x07^\x02\x02\xA8\xAA\t\x05\x02\x02\xA9\xA6\x03\x02\x02\x02" +
		"\xA9\xA7\x03\x02\x02\x02\xAA\xAD\x03\x02\x02\x02\xAB\xA9\x03\x02\x02\x02" +
		"\xAB\xAC\x03\x02\x02\x02\xAC\xAE\x03\x02\x02\x02\xAD\xAB\x03\x02\x02\x02" +
		"\xAE\xAF\x07)\x02\x02\xAF$\x03\x02\x02\x02\xB0\xB1\x07%\x02\x02\xB1\xB2" +
		"\x07}\x02\x02\xB2\xBF\x03\x02\x02\x02\xB3\xBE\x05%\x13\x02\xB4\xB8\x07" +
		"}\x02\x02\xB5\xB7\v\x02\x02\x02\xB6\xB5\x03\x02\x02\x02\xB7\xBA\x03\x02" +
		"\x02\x02\xB8\xB9\x03\x02\x02\x02\xB8\xB6\x03\x02\x02\x02\xB9\xBB\x03\x02" +
		"\x02\x02\xBA\xB8\x03\x02\x02\x02\xBB\xBE\x07\x7F\x02\x02\xBC\xBE\v\x02" +
		"\x02\x02\xBD\xB3\x03\x02\x02\x02\xBD\xB4\x03\x02\x02\x02\xBD\xBC\x03\x02" +
		"\x02\x02\xBE\xC1\x03\x02\x02\x02\xBF\xC0\x03\x02\x02\x02\xBF\xBD\x03\x02" +
		"\x02\x02\xC0\xC2\x03\x02\x02\x02\xC1\xBF\x03\x02\x02\x02\xC2\xC3\x07\x7F" +
		"\x02\x02\xC3&\x03\x02\x02\x02\xC4\xD9\t\x06\x02\x02\xC5\xC6\x070\x02\x02" +
		"\xC6\xD9\x070\x02\x02\xC7\xC8\x070\x02\x02\xC8\xC9\x070\x02\x02\xC9\xD9" +
		"\x070\x02\x02\xCA\xD9\x07>\x02\x02\xCB\xCC\x07>\x02\x02\xCC\xD9\x07?\x02" +
		"\x02\xCD\xCE\x07@\x02\x02\xCE\xD9\x07?\x02\x02\xCF\xD9\x07@\x02\x02\xD0" +
		"\xD1\x07?\x02\x02\xD1\xD9\x07?\x02\x02\xD2\xD3\x07#\x02\x02\xD3\xD9\x07" +
		"?\x02\x02\xD4\xD5\x07k\x02\x02\xD5\xD9\x07u\x02\x02\xD6\xD7\x07c\x02\x02" +
		"\xD7\xD9\x07u\x02\x02\xD8\xC4\x03\x02\x02\x02\xD8\xC5\x03\x02\x02\x02" +
		"\xD8\xC7\x03\x02\x02\x02\xD8\xCA\x03\x02\x02\x02\xD8\xCB\x03\x02\x02\x02" +
		"\xD8\xCD\x03\x02\x02\x02\xD8\xCF\x03\x02\x02\x02\xD8\xD0\x03\x02\x02\x02" +
		"\xD8\xD2\x03\x02\x02\x02\xD8\xD4\x03\x02\x02\x02\xD8\xD6\x03\x02\x02\x02" +
		"\xD9(\x03\x02\x02\x02\xDA\xDB\x070\x02\x02\xDB*\x03\x02\x02\x02\xDC\xDD" +
		"\x07<\x02\x02\xDD\xDE\x07<\x02\x02\xDE,\x03\x02\x02\x02\xDF\xE0\x07.\x02" +
		"\x02\xE0.\x03\x02\x02\x02\xE1\xE2\x07?\x02\x02\xE20\x03\x02\x02\x02\xE3" +
		"\xE6\x055\x1B\x02\xE4\xE6\x059\x1D\x02\xE5\xE3\x03\x02\x02\x02\xE5\xE4" +
		"\x03\x02\x02\x02\xE5\xE6\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xEA" +
		"\x07<\x02\x02\xE8\xEB\x055\x1B\x02\xE9\xEB\x059\x1D\x02\xEA\xE8\x03\x02" +
		"\x02\x02\xEA\xE9\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB2\x03\x02" +
		"\x02\x02\xEC\xF0\t\x07\x02\x02\xED\xEF\t\b\x02\x02\xEE\xED\x03\x02\x02" +
		"\x02\xEF\xF2\x03\x02\x02\x02\xF0\xEE\x03\x02\x02\x02\xF0\xF1\x03\x02\x02" +
		"\x02\xF14\x03\x02\x02\x02\xF2\xF0\x03\x02\x02\x02\xF3\xF7\t\t\x02\x02" +
		"\xF4\xF6\x059\x1D\x02\xF5\xF4\x03\x02\x02\x02\xF6\xF9\x03\x02\x02\x02" +
		"\xF7\xF5\x03\x02\x02\x02\xF7\xF8\x03\x02\x02\x02\xF8\xFB\x03\x02\x02\x02" +
		"\xF9\xF7\x03\x02\x02\x02\xFA\xF3\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02" +
		"\xFC\xFA\x03\x02\x02\x02\xFC\xFD\x03\x02\x02\x02\xFD\xFE\x03\x02\x02\x02" +
		"\xFE\xFF\b\x1B\x04\x02\xFF6\x03\x02\x02\x02\u0100\u0101\x07/\x02\x02\u0101" +
		"\u0102\x07/\x02\x02\u0102\u0106\x03\x02\x02\x02\u0103\u0105\n\t\x02\x02" +
		"\u0104\u0103\x03\x02\x02\x02\u0105\u0108\x03\x02\x02\x02\u0106\u0104\x03" +
		"\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u01078\x03\x02\x02\x02\u0108" +
		"\u0106\x03\x02\x02\x02\u0109\u010B\t\n\x02\x02\u010A\u0109\x03\x02\x02" +
		"\x02\u010B\u010C\x03\x02\x02\x02\u010C\u010A\x03\x02\x02\x02\u010C\u010D" +
		"\x03\x02\x02\x02\u010D\u010E\x03\x02\x02\x02\u010E\u010F\b\x1D\x05\x02" +
		"\u010F:\x03\x02\x02\x02\u0110\u0111\x071\x02\x02\u0111\u0112\x07,\x02" +
		"\x02\u0112\u0117\x03\x02\x02\x02\u0113\u0116\x05;\x1E\x02\u0114\u0116" +
		"\v\x02\x02\x02\u0115\u0113\x03\x02\x02\x02\u0115\u0114\x03\x02\x02\x02" +
		"\u0116\u0119\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0117\u0115\x03" +
		"\x02\x02\x02\u0118\u011A\x03\x02\x02\x02\u0119\u0117\x03\x02\x02\x02\u011A" +
		"\u011B\x07,\x02\x02\u011B\u011C\x071\x02\x02\u011C\u011D\x03\x02\x02\x02" +
		"\u011D\u011E\b\x1E\x06\x02\u011E<\x03\x02\x02\x02\u011F\u0123\x07^\x02" +
		"\x02\u0120\u0122\t\n\x02\x02\u0121\u0120\x03\x02\x02\x02\u0122\u0125\x03" +
		"\x02\x02\x02\u0123\u0121\x03\x02\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124" +
		"\u012B\x03\x02\x02\x02\u0125\u0123\x03\x02\x02\x02\u0126\u0128\x07\x0F" +
		"\x02\x02\u0127\u0126\x03\x02\x02\x02\u0127\u0128\x03\x02\x02\x02\u0128" +
		"\u0129\x03\x02\x02\x02\u0129\u012C\x07\f\x02\x02\u012A\u012C\x04\x0E\x0F" +
		"\x02\u012B\u0127\x03\x02\x02\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012D" +
		"\x03\x02\x02\x02\u012D\u012E\b\x1F\x07\x02\u012E>\x03\x02\x02\x02\u012F" +
		"\u0130\v\x02\x02\x02\u0130\u0131\x03\x02\x02\x02\u0131\u0132\b \b\x02" +
		"\u0132@\x03\x02\x02\x02\u0133\u0135\t\v\x02\x02\u0134\u0136\t\v\x02\x02" +
		"\u0135\u0134\x03\x02\x02\x02\u0135\u0136\x03\x02\x02\x02\u0136\u0137\x03" +
		"\x02\x02\x02\u0137\u0138\t\f\x02\x02\u0138B\x03\x02\x02\x02\u0139\u013D" +
		"\t\v\x02\x02\u013A\u013C\t\r\x02\x02\u013B\u013A\x03\x02\x02\x02\u013C" +
		"\u013F\x03\x02\x02\x02\u013D\u013B\x03\x02\x02\x02\u013D\u013E\x03\x02" +
		"\x02\x02\u013ED\x03\x02\x02\x02\u013F\u013D\x03\x02\x02\x02\u0140\u0144" +
		"\t\x0E\x02\x02\u0141\u0143\t\b\x02\x02\u0142\u0141\x03\x02\x02\x02\u0143" +
		"\u0146\x03\x02\x02\x02\u0144\u0142\x03\x02\x02\x02\u0144\u0145\x03\x02" +
		"\x02\x02\u0145F\x03\x02\x02\x02\u0146\u0144\x03\x02\x02\x02\x1E\x02\x8B" +
		"\x92\x9D\xA3\xA9\xAB\xB8\xBD\xBF\xD8\xE5\xEA\xF0\xF7\xFC\u0106\u010C\u0115" +
		"\u0117\u0123\u0127\u012B\u0135\u013B\u013D\u0142\u0144\t\x03\x02\x02\x03" +
		"\x03\x03\x03\x1B\x04\x02\x05\x02\x02\x06\x02\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

