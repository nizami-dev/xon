// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT

 
// @ts-nocheck
import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly As = 3;
	public static readonly If = 4;
	public static readonly Else = 5;
	public static readonly ElseIf = 6;
	public static readonly Loop = 7;
	public static readonly In = 8;
	public static readonly Pass = 9;
	public static readonly Continue = 10;
	public static readonly Break = 11;
	public static readonly Return = 12;
	public static readonly Select = 13;
	public static readonly Infix = 14;
	public static readonly Prefix = 15;
	public static readonly Postfix = 16;
	public static readonly Preprocessor = 17;
	public static readonly LineBreak = 18;
	public static readonly BitAnd = 19;
	public static readonly BitOr = 20;
	public static readonly BitXor = 21;
	public static readonly BitNot = 22;
	public static readonly RightShiftArithmetic = 23;
	public static readonly LeftShiftArithmetic = 24;
	public static readonly OpenBracket = 25;
	public static readonly CloseBracket = 26;
	public static readonly OpenParen = 27;
	public static readonly CloseParen = 28;
	public static readonly OpenBrace = 29;
	public static readonly CloseBrace = 30;
	public static readonly Ad = 31;
	public static readonly Comma = 32;
	public static readonly Assign = 33;
	public static readonly Question = 34;
	public static readonly Colon = 35;
	public static readonly Dot = 36;
	public static readonly Plus = 37;
	public static readonly Minus = 38;
	public static readonly Exclamation = 39;
	public static readonly Asterisk = 40;
	public static readonly Slash = 41;
	public static readonly Modulo = 42;
	public static readonly Caret = 43;
	public static readonly Hash = 44;
	public static readonly LessThan = 45;
	public static readonly MoreThan = 46;
	public static readonly LessThanEquals = 47;
	public static readonly MoreThanEquals = 48;
	public static readonly Equals = 49;
	public static readonly NotEquals = 50;
	public static readonly And = 51;
	public static readonly Or = 52;
	public static readonly AsteriskAssign = 53;
	public static readonly SlashAssign = 54;
	public static readonly PercentAssign = 55;
	public static readonly PlusAssign = 56;
	public static readonly MinusAssign = 57;
	public static readonly LeftShiftArithmeticAssign = 58;
	public static readonly RightShiftArithmeticAssign = 59;
	public static readonly BitAndAssign = 60;
	public static readonly BitXorAssign = 61;
	public static readonly BitOrAssign = 62;
	public static readonly Pipe = 63;
	public static readonly Underscore = 64;
	public static readonly Elipsis = 65;
	public static readonly LambdaStart = 66;
	public static readonly NullLiteral = 67;
	public static readonly BooleanLiteral = 68;
	public static readonly NumberLiteral = 69;
	public static readonly StringLiteral = 70;
	public static readonly StringFormatStart = 71;
	public static readonly StringFormatMiddle = 72;
	public static readonly StringFormatEnd = 73;
	public static readonly ID = 74;
	public static readonly Skip = 75;
	public static readonly UnexpectedCharacter = 76;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"As", "If", "Else", "ElseIf", "Loop", "In", "Pass", "Continue", "Break", 
		"Return", "Select", "Infix", "Prefix", "Postfix", "Preprocessor", "LineBreak", 
		"BitAnd", "BitOr", "BitXor", "BitNot", "RightShiftArithmetic", "LeftShiftArithmetic", 
		"OpenBracket", "CloseBracket", "OpenParen", "CloseParen", "OpenBrace", 
		"CloseBrace", "Ad", "Comma", "Assign", "Question", "Colon", "Dot", "Plus", 
		"Minus", "Exclamation", "Asterisk", "Slash", "Modulo", "Caret", "Hash", 
		"LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", "Equals", 
		"NotEquals", "And", "Or", "AsteriskAssign", "SlashAssign", "PercentAssign", 
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "Pipe", "Underscore", "Elipsis", 
		"LambdaStart", "NullLiteral", "BooleanLiteral", "NumberLiteral", "StringLiteral", 
		"StringFormatStart", "StringFormatMiddle", "StringFormatEnd", "ID", "Skip", 
		"UnexpectedCharacter", "SPACES", "MULTI_LINE_COMMENT", "SINGLE_LINE_COMMENT", 
		"LINE_JOINING", "NUMBER", "CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'as'", "'if'", "'else'", "'elif'", "'loop'", 
		"'in'", "'pass'", "'continue'", "'break'", "'return'", "'select'", "'infix'", 
		"'prefix'", "'postfix'", undefined, undefined, "'and'", "'or'", "'xor'", 
		"'not'", "'>>'", "'<<'", "'['", "']'", "'('", "')'", "'{'", "'}'", "'@'", 
		"','", "'='", "'?'", "':'", "'.'", "'+'", "'-'", "'!'", "'*'", "'/'", 
		"'%'", "'^'", "'#'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", 
		"'||'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", undefined, 
		undefined, undefined, "'|'", "'_'", "'...'", "'\\'", "'null'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "As", "If", "Else", "ElseIf", "Loop", "In", 
		"Pass", "Continue", "Break", "Return", "Select", "Infix", "Prefix", "Postfix", 
		"Preprocessor", "LineBreak", "BitAnd", "BitOr", "BitXor", "BitNot", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"OpenBrace", "CloseBrace", "Ad", "Comma", "Assign", "Question", "Colon", 
		"Dot", "Plus", "Minus", "Exclamation", "Asterisk", "Slash", "Modulo", 
		"Caret", "Hash", "LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", 
		"Equals", "NotEquals", "And", "Or", "AsteriskAssign", "SlashAssign", "PercentAssign", 
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "Pipe", "Underscore", "Elipsis", 
		"LambdaStart", "NullLiteral", "BooleanLiteral", "NumberLiteral", "StringLiteral", 
		"StringFormatStart", "StringFormatMiddle", "StringFormatEnd", "ID", "Skip", 
		"UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 15:
			this.LineBreak_action(_localctx, actionIndex);
			break;

		case 22:
			this.OpenBracket_action(_localctx, actionIndex);
			break;

		case 23:
			this.CloseBracket_action(_localctx, actionIndex);
			break;

		case 24:
			this.OpenParen_action(_localctx, actionIndex);
			break;

		case 25:
			this.CloseParen_action(_localctx, actionIndex);
			break;

		case 26:
			this.OpenBrace_action(_localctx, actionIndex);
			break;

		case 27:
			this.CloseBrace_action(_localctx, actionIndex);
			break;
		}
	}
	private LineBreak_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.handleLineBreak()
			break;
		}
	}
	private OpenBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened++;
			break;
		}
	}
	private CloseBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.opened--;
			break;
		}
	}
	private OpenParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 3:
			this.opened++;
			break;
		}
	}
	private CloseParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 4:
			this.opened--;
			break;
		}
	}
	private OpenBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 5:
			this.opened++;
			break;
		}
	}
	private CloseBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 6:
			this.opened--;
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 15:
			return this.LineBreak_sempred(_localctx, predIndex);
		}
		return true;
	}
	private LineBreak_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atStartOfInput();
		}
		return true;
	}

	private static readonly _serializedATNSegments: number = 2;
	private static readonly _serializedATNSegment0: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02N\u023A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03" +
		"\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x07\x10\xF7\n\x10\f\x10\x0E\x10\xFA\v\x10" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x05\x11\u0101\n\x11\x03\x11\x03" +
		"\x11\x05\x11\u0105\n\x11\x03\x11\x05\x11\u0108\n\x11\x05\x11\u010A\n\x11" +
		"\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x19" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F" +
		"\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03" +
		"&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03" +
		"-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x031\x031\x032\x03" +
		"2\x032\x033\x033\x033\x034\x034\x034\x035\x035\x035\x036\x036\x036\x03" +
		"7\x037\x037\x038\x038\x038\x039\x039\x039\x039\x03:\x03:\x03:\x03:\x03" +
		";\x03;\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03<\x03=\x03=\x03" +
		"=\x03=\x03=\x03>\x03>\x03?\x03?\x03@\x03@\x03@\x03@\x03A\x03A\x03B\x03" +
		"B\x03B\x03B\x03B\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x05C\u01A7" +
		"\nC\x03D\x03D\x05D\u01AB\nD\x03D\x03D\x05D\u01AF\nD\x03E\x03E\x07E\u01B3" +
		"\nE\fE\x0EE\u01B6\vE\x03E\x03E\x03F\x03F\x03F\x03F\x07F\u01BE\nF\fF\x0E" +
		"F\u01C1\vF\x03F\x03F\x03G\x03G\x07G\u01C7\nG\fG\x0EG\u01CA\vG\x03G\x03" +
		"G\x03H\x03H\x07H\u01D0\nH\fH\x0EH\u01D3\vH\x03H\x03H\x03I\x03I\x07I\u01D9" +
		"\nI\fI\x0EI\u01DC\vI\x03J\x03J\x03J\x03J\x05J\u01E2\nJ\x03J\x03J\x03K" +
		"\x03K\x03K\x03K\x03L\x06L\u01EB\nL\rL\x0EL\u01EC\x03M\x03M\x03M\x03M\x07" +
		"M\u01F3\nM\fM\x0EM\u01F6\vM\x03M\x03M\x03M\x03N\x03N\x03N\x03N\x07N\u01FF" +
		"\nN\fN\x0EN\u0202\vN\x03O\x03O\x05O\u0206\nO\x03O\x05O\u0209\nO\x03O\x03" +
		"O\x05O\u020D\nO\x03P\x03P\x05P\u0211\nP\x03P\x03P\x06P\u0215\nP\rP\x0E" +
		"P\u0216\x03P\x03P\x06P\u021B\nP\rP\x0EP\u021C\x07P\u021F\nP\fP\x0EP\u0222" +
		"\vP\x03P\x06P\u0225\nP\rP\x0EP\u0226\x03P\x03P\x06P\u022B\nP\rP\x0EP\u022C" +
		"\x07P\u022F\nP\fP\x0EP\u0232\vP\x05P\u0234\nP\x03Q\x03Q\x03Q\x05Q\u0239" +
		"\nQ\x04\xF8\u01F4\x02\x02R\x03\x02\x05\x05\x02\x06\x07\x02\x07\t\x02\b" +
		"\v\x02\t\r\x02\n\x0F\x02\v\x11\x02\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F" +
		"\x19\x02\x10\x1B\x02\x11\x1D\x02\x12\x1F\x02\x13!\x02\x14#\x02\x15%\x02" +
		"\x16\'\x02\x17)\x02\x18+\x02\x19-\x02\x1A/\x02\x1B1\x02\x1C3\x02\x1D5" +
		"\x02\x1E7\x02\x1F9\x02 ;\x02!=\x02\"?\x02#A\x02$C\x02%E\x02&G\x02\'I\x02" +
		"(K\x02)M\x02*O\x02+Q\x02,S\x02-U\x02.W\x02/Y\x020[\x021]\x022_\x023a\x02" +
		"4c\x025e\x026g\x027i\x028k\x029m\x02:o\x02;q\x02<s\x02=u\x02>w\x02?y\x02" +
		"@{\x02A}\x02B\x7F\x02C\x81\x02D\x83\x02E\x85\x02F\x87\x02G\x89\x02H\x8B" +
		"\x02I\x8D\x02J\x8F\x02K\x91\x02L\x93\x02M\x95\x02N\x97\x02\x02\x99\x02" +
		"\x02\x9B\x02\x02\x9D\x02\x02\x9F\x02\x02\xA1\x02\x02\x03\x02\n\x05\x02" +
		"C\\aac|\x06\x022;C\\aac|\x04\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x03\x022" +
		";\x05\x022;C\\c|\x03\x02))\v\x02$$))^^ddhhppttvvxx\x02\u0252\x02\x03\x03" +
		"\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03" +
		"\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02" +
		"\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02" +
		"\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02" +
		"\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02" +
		"\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02" +
		"\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03" +
		"\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02" +
		"\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02" +
		"=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02" +
		"\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02" +
		"\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03" +
		"\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02" +
		"\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02" +
		"_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02" +
		"\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02" +
		"\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03" +
		"\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02" +
		"\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02" +
		"\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02" +
		"\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02" +
		"\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x02\x91\x03\x02\x02\x02" +
		"\x02\x93\x03\x02\x02\x02\x02\x95\x03\x02\x02\x02\x03\xA3\x03\x02\x02\x02" +
		"\x05\xA6\x03\x02\x02\x02\x07\xA9\x03\x02\x02\x02\t\xAE\x03\x02\x02\x02" +
		"\v\xB3\x03\x02\x02\x02\r\xB8\x03\x02\x02\x02\x0F\xBB\x03\x02\x02\x02\x11" +
		"\xC0\x03\x02\x02\x02\x13\xC9\x03\x02\x02\x02\x15\xCF\x03\x02\x02\x02\x17" +
		"\xD6\x03\x02\x02\x02\x19\xDD\x03\x02\x02\x02\x1B\xE3\x03\x02\x02\x02\x1D" +
		"\xEA\x03\x02\x02\x02\x1F\xF2\x03\x02\x02\x02!\u0109\x03\x02\x02\x02#\u010D" +
		"\x03\x02\x02\x02%\u0111\x03\x02\x02\x02\'\u0114\x03\x02\x02\x02)\u0118" +
		"\x03\x02\x02\x02+\u011C\x03\x02\x02\x02-\u011F\x03\x02\x02\x02/\u0122" +
		"\x03\x02\x02\x021\u0125\x03\x02\x02\x023\u0128\x03\x02\x02\x025\u012B" +
		"\x03\x02\x02\x027\u012E\x03\x02\x02\x029\u0131\x03\x02\x02\x02;\u0134" +
		"\x03\x02\x02\x02=\u0136\x03\x02\x02\x02?\u0138\x03\x02\x02\x02A\u013A" +
		"\x03\x02\x02\x02C\u013C\x03\x02\x02\x02E\u013E\x03\x02\x02\x02G\u0140" +
		"\x03\x02\x02\x02I\u0142\x03\x02\x02\x02K\u0144\x03\x02\x02\x02M\u0146" +
		"\x03\x02\x02\x02O\u0148\x03\x02\x02\x02Q\u014A\x03\x02\x02\x02S\u014C" +
		"\x03\x02\x02\x02U\u014E\x03\x02\x02\x02W\u0150\x03\x02\x02\x02Y\u0152" +
		"\x03\x02\x02\x02[\u0154\x03\x02\x02\x02]\u0157\x03\x02\x02\x02_\u015A" +
		"\x03\x02\x02\x02a\u015D\x03\x02\x02\x02c\u0160\x03\x02\x02\x02e\u0163" +
		"\x03\x02\x02\x02g\u0166\x03\x02\x02\x02i\u0169\x03\x02\x02\x02k\u016C" +
		"\x03\x02\x02\x02m\u016F\x03\x02\x02\x02o\u0172\x03\x02\x02\x02q\u0175" +
		"\x03\x02\x02\x02s\u0179\x03\x02\x02\x02u\u017D\x03\x02\x02\x02w\u0183" +
		"\x03\x02\x02\x02y\u0189\x03\x02\x02\x02{\u018E\x03\x02\x02\x02}\u0190" +
		"\x03\x02\x02\x02\x7F\u0192\x03\x02\x02\x02\x81\u0196\x03\x02\x02\x02\x83" +
		"\u0198\x03\x02\x02\x02\x85\u01A6\x03\x02\x02\x02\x87\u01AE\x03\x02\x02" +
		"\x02\x89\u01B0\x03\x02\x02\x02\x8B\u01B9\x03\x02\x02\x02\x8D\u01C4\x03" +
		"\x02\x02\x02\x8F\u01CD\x03\x02\x02\x02\x91\u01D6\x03\x02\x02\x02\x93\u01E1" +
		"\x03\x02\x02\x02\x95\u01E5\x03\x02\x02\x02\x97\u01EA\x03\x02\x02\x02\x99" +
		"\u01EE\x03\x02\x02\x02\x9B\u01FA\x03\x02\x02\x02\x9D\u0203\x03\x02\x02" +
		"\x02\x9F\u0233\x03\x02\x02\x02\xA1\u0238\x03\x02\x02\x02\xA3\xA4\x07c" +
		"\x02\x02\xA4\xA5\x07u\x02\x02\xA5\x04\x03\x02\x02\x02\xA6\xA7\x07k\x02" +
		"\x02\xA7\xA8\x07h\x02\x02\xA8\x06\x03\x02\x02\x02\xA9\xAA\x07g\x02\x02" +
		"\xAA\xAB\x07n\x02\x02\xAB\xAC\x07u\x02\x02\xAC\xAD\x07g\x02\x02\xAD\b" +
		"\x03\x02\x02\x02\xAE\xAF\x07g\x02\x02\xAF\xB0\x07n\x02\x02\xB0\xB1\x07" +
		"k\x02\x02\xB1\xB2\x07h\x02\x02\xB2\n\x03\x02\x02\x02\xB3\xB4\x07n\x02" +
		"\x02\xB4\xB5\x07q\x02\x02\xB5\xB6\x07q\x02\x02\xB6\xB7\x07r\x02\x02\xB7" +
		"\f\x03\x02\x02\x02\xB8\xB9\x07k\x02\x02\xB9\xBA\x07p\x02\x02\xBA\x0E\x03" +
		"\x02\x02\x02\xBB\xBC\x07r\x02\x02\xBC\xBD\x07c\x02\x02\xBD\xBE\x07u\x02" +
		"\x02\xBE\xBF\x07u\x02\x02\xBF\x10\x03\x02\x02\x02\xC0\xC1\x07e\x02\x02" +
		"\xC1\xC2\x07q\x02\x02\xC2\xC3\x07p\x02\x02\xC3\xC4\x07v\x02\x02\xC4\xC5" +
		"\x07k\x02\x02\xC5\xC6\x07p\x02\x02\xC6\xC7\x07w\x02\x02\xC7\xC8\x07g\x02" +
		"\x02\xC8\x12\x03\x02\x02\x02\xC9\xCA\x07d\x02\x02\xCA\xCB\x07t\x02\x02" +
		"\xCB\xCC\x07g\x02\x02\xCC\xCD\x07c\x02\x02\xCD\xCE\x07m\x02\x02\xCE\x14" +
		"\x03\x02\x02\x02\xCF\xD0\x07t\x02\x02\xD0\xD1\x07g\x02\x02\xD1\xD2\x07" +
		"v\x02\x02\xD2\xD3\x07w\x02\x02\xD3\xD4\x07t\x02\x02\xD4\xD5\x07p\x02\x02" +
		"\xD5\x16\x03\x02\x02\x02\xD6\xD7\x07u\x02\x02\xD7\xD8\x07g\x02\x02\xD8" +
		"\xD9\x07n\x02\x02\xD9\xDA\x07g\x02\x02\xDA\xDB\x07e\x02\x02\xDB\xDC\x07" +
		"v\x02\x02\xDC\x18\x03\x02\x02\x02\xDD\xDE\x07k\x02\x02\xDE\xDF\x07p\x02" +
		"\x02\xDF\xE0\x07h\x02\x02\xE0\xE1\x07k\x02\x02\xE1\xE2\x07z\x02\x02\xE2" +
		"\x1A\x03\x02\x02\x02\xE3\xE4\x07r\x02\x02\xE4\xE5\x07t\x02\x02\xE5\xE6" +
		"\x07g\x02\x02\xE6\xE7\x07h\x02\x02\xE7\xE8\x07k\x02\x02\xE8\xE9\x07z\x02" +
		"\x02\xE9\x1C\x03\x02\x02\x02\xEA\xEB\x07r\x02\x02\xEB\xEC\x07q\x02\x02" +
		"\xEC\xED\x07u\x02\x02\xED\xEE\x07v\x02\x02\xEE\xEF\x07h\x02\x02\xEF\xF0" +
		"\x07k\x02\x02\xF0\xF1\x07z\x02\x02\xF1\x1E\x03\x02\x02\x02\xF2\xF3\x07" +
		"%\x02\x02\xF3\xF4\x07}\x02\x02\xF4\xF8\x03\x02\x02\x02\xF5\xF7\v\x02\x02" +
		"\x02\xF6\xF5\x03\x02\x02\x02\xF7\xFA\x03\x02\x02\x02\xF8\xF9\x03\x02\x02" +
		"\x02\xF8\xF6\x03\x02\x02\x02\xF9\xFB\x03\x02\x02\x02\xFA\xF8\x03\x02\x02" +
		"\x02\xFB\xFC\x07\x7F\x02\x02\xFC \x03\x02\x02\x02\xFD\xFE\x06\x11\x02" +
		"\x02\xFE\u010A\x05\x97L\x02\xFF\u0101\x07\x0F\x02\x02\u0100\xFF\x03\x02" +
		"\x02\x02\u0100\u0101\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02\u0102" +
		"\u0105\x07\f\x02\x02\u0103\u0105\x07\x0F\x02\x02\u0104\u0100\x03\x02\x02" +
		"\x02\u0104\u0103\x03\x02\x02\x02\u0105\u0107\x03\x02\x02\x02\u0106\u0108" +
		"\x05\x97L\x02\u0107\u0106\x03\x02\x02\x02\u0107\u0108\x03\x02\x02\x02" +
		"\u0108\u010A\x03\x02\x02\x02\u0109\xFD\x03\x02\x02\x02\u0109\u0104\x03" +
		"\x02\x02\x02\u010A\u010B\x03\x02\x02\x02\u010B\u010C\b\x11\x02\x02\u010C" +
		"\"\x03\x02\x02\x02\u010D\u010E\x07c\x02\x02\u010E\u010F\x07p\x02\x02\u010F" +
		"\u0110\x07f\x02\x02\u0110$\x03\x02\x02\x02\u0111\u0112\x07q\x02\x02\u0112" +
		"\u0113\x07t\x02\x02\u0113&\x03\x02\x02\x02\u0114\u0115\x07z\x02\x02\u0115" +
		"\u0116\x07q\x02\x02\u0116\u0117\x07t\x02\x02\u0117(\x03\x02\x02\x02\u0118" +
		"\u0119\x07p\x02\x02\u0119\u011A\x07q\x02\x02\u011A\u011B\x07v\x02\x02" +
		"\u011B*\x03\x02\x02\x02\u011C\u011D\x07@\x02\x02\u011D\u011E\x07@\x02" +
		"\x02\u011E,\x03\x02\x02\x02\u011F\u0120\x07>\x02\x02\u0120\u0121\x07>" +
		"\x02\x02\u0121.\x03\x02\x02\x02\u0122\u0123\x07]\x02\x02\u0123\u0124\b" +
		"\x18\x03\x02\u01240\x03\x02\x02\x02\u0125\u0126\x07_\x02\x02\u0126\u0127" +
		"\b\x19\x04\x02\u01272\x03\x02\x02\x02\u0128\u0129\x07*\x02\x02\u0129\u012A" +
		"\b\x1A\x05\x02\u012A4\x03\x02\x02\x02\u012B\u012C\x07+\x02\x02\u012C\u012D" +
		"\b\x1B\x06\x02\u012D6\x03\x02\x02\x02\u012E\u012F\x07}\x02\x02\u012F\u0130" +
		"\b\x1C\x07\x02\u01308\x03\x02\x02\x02\u0131\u0132\x07\x7F\x02\x02\u0132" +
		"\u0133\b\x1D\b\x02\u0133:\x03\x02\x02\x02\u0134\u0135\x07B\x02\x02\u0135" +
		"<\x03\x02\x02\x02\u0136\u0137\x07.\x02\x02\u0137>\x03\x02\x02\x02\u0138" +
		"\u0139\x07?\x02\x02\u0139@\x03\x02\x02\x02\u013A\u013B\x07A\x02\x02\u013B" +
		"B\x03\x02\x02\x02\u013C\u013D\x07<\x02\x02\u013DD\x03\x02\x02\x02\u013E" +
		"\u013F\x070\x02\x02\u013FF\x03\x02\x02\x02\u0140\u0141\x07-\x02\x02\u0141" +
		"H\x03\x02\x02\x02\u0142\u0143\x07/\x02\x02\u0143J\x03\x02\x02\x02\u0144" +
		"\u0145\x07#\x02\x02\u0145L\x03\x02\x02\x02\u0146\u0147\x07,\x02\x02\u0147" +
		"N\x03\x02\x02\x02\u0148\u0149\x071\x02\x02\u0149P\x03\x02\x02\x02\u014A" +
		"\u014B\x07\'\x02\x02\u014BR\x03\x02\x02\x02\u014C\u014D\x07`\x02\x02\u014D" +
		"T\x03\x02\x02\x02\u014E\u014F\x07%\x02\x02\u014FV\x03\x02\x02\x02\u0150" +
		"\u0151\x07>\x02\x02\u0151X\x03\x02\x02\x02\u0152\u0153\x07@\x02\x02\u0153" +
		"Z\x03\x02\x02\x02\u0154\u0155\x07>\x02\x02\u0155\u0156\x07?\x02\x02\u0156" +
		"\\\x03\x02\x02\x02\u0157\u0158\x07@\x02\x02\u0158\u0159\x07?\x02\x02\u0159" +
		"^\x03\x02\x02\x02\u015A\u015B\x07?\x02\x02\u015B\u015C\x07?\x02\x02\u015C" +
		"`\x03\x02\x02\x02\u015D\u015E\x07#\x02\x02\u015E\u015F\x07?\x02\x02\u015F" +
		"b\x03\x02\x02\x02\u0160\u0161\x07(\x02\x02\u0161\u0162\x07(\x02\x02\u0162" +
		"d\x03\x02\x02\x02\u0163\u0164\x07~\x02\x02\u0164\u0165\x07~\x02\x02\u0165" +
		"f\x03\x02\x02\x02\u0166\u0167\x07,\x02\x02\u0167\u0168\x07?\x02\x02\u0168" +
		"h\x03\x02\x02\x02\u0169\u016A\x071\x02\x02\u016A\u016B\x07?\x02\x02\u016B" +
		"j\x03\x02\x02\x02\u016C\u016D\x07\'\x02\x02\u016D\u016E\x07?\x02\x02\u016E" +
		"l\x03\x02\x02\x02\u016F\u0170\x07-\x02\x02\u0170\u0171\x07?\x02\x02\u0171" +
		"n\x03\x02\x02\x02\u0172\u0173\x07/\x02\x02\u0173\u0174\x07?\x02\x02\u0174" +
		"p\x03\x02\x02\x02\u0175\u0176\x07>\x02\x02\u0176\u0177\x07>\x02\x02\u0177" +
		"\u0178\x07?\x02\x02\u0178r\x03\x02\x02\x02\u0179\u017A\x07@\x02\x02\u017A" +
		"\u017B\x07@\x02\x02\u017B\u017C\x07?\x02\x02\u017Ct\x03\x02\x02\x02\u017D" +
		"\u017E\x07c\x02\x02\u017E\u017F\x07p\x02\x02\u017F\u0180\x07f\x02\x02" +
		"\u0180\u0181\x03\x02\x02\x02\u0181\u0182\x07?\x02\x02\u0182v\x03\x02\x02" +
		"\x02\u0183\u0184\x07z\x02\x02\u0184\u0185\x07q\x02\x02\u0185\u0186\x07" +
		"t\x02\x02\u0186\u0187\x03\x02\x02\x02\u0187\u0188\x07?\x02\x02\u0188x" +
		"\x03\x02\x02\x02\u0189\u018A\x07q\x02\x02\u018A\u018B\x07t\x02\x02\u018B" +
		"\u018C\x03\x02\x02\x02\u018C\u018D\x07?\x02\x02\u018Dz\x03\x02\x02\x02" +
		"\u018E\u018F\x07~\x02\x02\u018F|\x03\x02\x02\x02\u0190\u0191\x07a\x02" +
		"\x02\u0191~\x03\x02\x02\x02\u0192\u0193\x070\x02\x02\u0193\u0194\x070" +
		"\x02\x02\u0194\u0195\x070\x02\x02\u0195\x80\x03\x02\x02\x02\u0196\u0197" +
		"\x07^\x02\x02\u0197\x82\x03\x02\x02\x02\u0198\u0199\x07p\x02\x02\u0199" +
		"\u019A\x07w\x02\x02\u019A\u019B\x07n\x02\x02\u019B\u019C\x07n\x02\x02" +
		"\u019C\x84\x03\x02\x02\x02\u019D\u019E\x07v\x02\x02\u019E\u019F\x07t\x02" +
		"\x02\u019F\u01A0\x07w\x02\x02\u01A0\u01A7\x07g\x02\x02\u01A1\u01A2\x07" +
		"h\x02\x02\u01A2\u01A3\x07c\x02\x02\u01A3\u01A4\x07n\x02\x02\u01A4\u01A5" +
		"\x07u\x02\x02\u01A5\u01A7\x07g\x02\x02\u01A6\u019D\x03\x02\x02\x02\u01A6" +
		"\u01A1\x03\x02\x02\x02\u01A7\x86\x03\x02\x02\x02\u01A8\u01AF\x05\x9FP" +
		"\x02\u01A9\u01AB\x05\x9FP\x02\u01AA\u01A9\x03\x02\x02\x02\u01AA\u01AB" +
		"\x03\x02\x02\x02\u01AB\u01AC\x03\x02\x02\x02\u01AC\u01AD\x070\x02\x02" +
		"\u01AD\u01AF\x05\x9FP\x02\u01AE\u01A8\x03\x02\x02\x02\u01AE\u01AA\x03" +
		"\x02\x02\x02\u01AF\x88\x03\x02\x02\x02\u01B0\u01B4\x07)\x02\x02\u01B1" +
		"\u01B3\x05\xA1Q\x02\u01B2\u01B1\x03\x02\x02\x02\u01B3\u01B6\x03\x02\x02" +
		"\x02\u01B4\u01B2\x03\x02\x02\x02\u01B4\u01B5\x03\x02\x02\x02\u01B5\u01B7" +
		"\x03\x02\x02\x02\u01B6\u01B4\x03\x02\x02\x02\u01B7\u01B8\x07)\x02\x02" +
		"\u01B8\x8A\x03\x02\x02\x02\u01B9\u01BA\x07h\x02\x02\u01BA\u01BB\x07)\x02" +
		"\x02\u01BB\u01BF\x03\x02\x02\x02\u01BC\u01BE\x05\xA1Q\x02\u01BD\u01BC" +
		"\x03\x02\x02\x02\u01BE\u01C1\x03\x02\x02\x02\u01BF\u01BD\x03\x02\x02\x02" +
		"\u01BF\u01C0\x03\x02\x02\x02\u01C0\u01C2\x03\x02\x02\x02\u01C1\u01BF\x03" +
		"\x02\x02\x02\u01C2\u01C3\x07}\x02\x02\u01C3\x8C\x03\x02\x02\x02\u01C4" +
		"\u01C8\x07\x7F\x02\x02\u01C5\u01C7\x05\xA1Q\x02\u01C6\u01C5\x03\x02\x02" +
		"\x02\u01C7\u01CA\x03\x02\x02\x02\u01C8\u01C6\x03\x02\x02\x02\u01C8\u01C9" +
		"\x03\x02\x02\x02\u01C9\u01CB\x03\x02\x02\x02\u01CA\u01C8\x03\x02\x02\x02" +
		"\u01CB\u01CC\x07}\x02\x02\u01CC\x8E\x03\x02\x02\x02\u01CD\u01D1\x07\x7F" +
		"\x02\x02\u01CE\u01D0\x05\xA1Q\x02\u01CF\u01CE\x03\x02\x02\x02\u01D0\u01D3" +
		"\x03\x02\x02\x02\u01D1\u01CF\x03\x02\x02\x02\u01D1\u01D2\x03\x02\x02\x02" +
		"\u01D2\u01D4\x03\x02\x02\x02\u01D3\u01D1\x03\x02\x02\x02\u01D4\u01D5\x07" +
		")\x02\x02\u01D5\x90\x03\x02\x02\x02\u01D6\u01DA\t\x02\x02\x02\u01D7\u01D9" +
		"\t\x03\x02\x02\u01D8\u01D7\x03\x02\x02\x02\u01D9\u01DC\x03\x02\x02\x02" +
		"\u01DA\u01D8\x03\x02\x02\x02\u01DA\u01DB\x03\x02\x02\x02\u01DB\x92\x03" +
		"\x02\x02\x02\u01DC\u01DA\x03\x02\x02\x02\u01DD\u01E2\x05\x97L\x02\u01DE" +
		"\u01E2\x05\x9BN\x02\u01DF\u01E2\x05\x99M\x02\u01E0\u01E2\x05\x9DO\x02" +
		"\u01E1\u01DD\x03\x02\x02\x02\u01E1\u01DE\x03\x02\x02\x02\u01E1\u01DF\x03" +
		"\x02\x02\x02\u01E1\u01E0\x03\x02\x02\x02\u01E2\u01E3\x03\x02\x02\x02\u01E3" +
		"\u01E4\bJ\t\x02\u01E4\x94\x03\x02\x02\x02\u01E5\u01E6\v\x02\x02\x02\u01E6" +
		"\u01E7\x03\x02\x02\x02\u01E7\u01E8\bK\n\x02\u01E8\x96\x03\x02\x02\x02" +
		"\u01E9\u01EB\t\x04\x02\x02\u01EA\u01E9\x03\x02\x02\x02\u01EB\u01EC\x03" +
		"\x02\x02\x02\u01EC\u01EA\x03\x02\x02\x02\u01EC\u01ED\x03\x02\x02\x02\u01ED" +
		"\x98\x03\x02\x02\x02\u01EE\u01EF\x071\x02\x02\u01EF\u01F0\x07,\x02\x02" +
		"\u01F0\u01F4\x03\x02\x02\x02\u01F1\u01F3\v\x02\x02\x02\u01F2\u01F1\x03" +
		"\x02\x02\x02\u01F3\u01F6\x03\x02\x02\x02\u01F4\u01F5\x03\x02\x02\x02\u01F4" +
		"\u01F2\x03\x02\x02\x02\u01F5\u01F7\x03\x02\x02\x02\u01F6\u01F4\x03\x02" +
		"\x02\x02\u01F7\u01F8\x07,\x02\x02\u01F8\u01F9\x071\x02\x02\u01F9\x9A\x03" +
		"\x02\x02\x02\u01FA\u01FB\x071\x02\x02\u01FB\u01FC\x071\x02\x02\u01FC\u0200" +
		"\x03\x02\x02\x02\u01FD\u01FF\n\x05\x02\x02\u01FE\u01FD\x03\x02\x02\x02" +
		"\u01FF\u0202\x03\x02\x02\x02\u0200\u01FE\x03\x02\x02\x02\u0200\u0201\x03" +
		"\x02\x02\x02\u0201\x9C\x03\x02\x02\x02\u0202\u0200\x03\x02\x02\x02\u0203" +
		"\u0205\x07^\x02\x02\u0204\u0206\x05\x97L\x02\u0205\u0204\x03\x02\x02\x02" +
		"\u0205\u0206\x03\x02\x02\x02\u0206\u020C\x03\x02\x02\x02\u0207\u0209\x07" +
		"\x0F\x02\x02\u0208\u0207\x03\x02\x02\x02\u0208\u0209\x03\x02\x02\x02\u0209" +
		"\u020A\x03\x02\x02\x02\u020A\u020D\x07\f\x02\x02\u020B\u020D\x07\x0F\x02" +
		"\x02\u020C\u0208\x03\x02\x02\x02\u020C\u020B\x03\x02\x02\x02\u020D\x9E" +
		"\x03\x02\x02\x02\u020E\u0210\t\x06\x02\x02\u020F\u0211\t\x06\x02\x02\u0210" +
		"\u020F\x03\x02\x02\x02\u0210\u0211\x03\x02\x02\x02\u0211\u0212\x03\x02" +
		"\x02\x02\u0212\u0214\x07z\x02\x02\u0213\u0215\t\x07\x02\x02\u0214\u0213" +
		"\x03\x02\x02\x02\u0215\u0216\x03\x02\x02\x02\u0216\u0214\x03\x02\x02\x02" +
		"\u0216\u0217\x03\x02\x02\x02\u0217\u0220\x03\x02\x02\x02\u0218\u021A\x07" +
		"a\x02\x02\u0219\u021B\t\x07\x02\x02\u021A\u0219\x03\x02\x02\x02\u021B" +
		"\u021C\x03\x02\x02\x02\u021C\u021A\x03\x02\x02\x02\u021C\u021D\x03\x02" +
		"\x02\x02\u021D\u021F\x03\x02\x02\x02\u021E\u0218\x03\x02\x02\x02\u021F" +
		"\u0222\x03\x02\x02\x02\u0220\u021E\x03\x02\x02\x02\u0220\u0221\x03\x02" +
		"\x02\x02\u0221\u0234\x03\x02\x02\x02\u0222\u0220\x03\x02\x02\x02\u0223" +
		"\u0225\t\x06\x02\x02\u0224\u0223\x03\x02\x02\x02\u0225\u0226\x03\x02\x02" +
		"\x02\u0226\u0224\x03\x02\x02\x02\u0226\u0227\x03\x02\x02\x02\u0227\u0230" +
		"\x03\x02\x02\x02\u0228\u022A\x07a\x02\x02\u0229\u022B\t\x06\x02\x02\u022A" +
		"\u0229\x03\x02\x02\x02\u022B\u022C\x03\x02\x02\x02\u022C\u022A\x03\x02" +
		"\x02\x02\u022C\u022D\x03\x02\x02\x02\u022D\u022F\x03\x02\x02\x02\u022E" +
		"\u0228\x03\x02\x02\x02\u022F\u0232\x03\x02\x02\x02\u0230\u022E\x03\x02" +
		"\x02\x02\u0230\u0231\x03\x02\x02\x02\u0231\u0234\x03\x02\x02";
	private static readonly _serializedATNSegment1: string =
		"\x02\u0232\u0230\x03\x02\x02\x02\u0233\u020E\x03\x02\x02\x02\u0233\u0224" +
		"\x03\x02\x02\x02\u0234\xA0\x03\x02\x02\x02\u0235\u0239\n\b\x02\x02\u0236" +
		"\u0237\x07^\x02\x02\u0237\u0239\t\t\x02\x02\u0238\u0235\x03\x02\x02\x02" +
		"\u0238\u0236\x03\x02\x02\x02\u0239\xA2\x03\x02\x02\x02 \x02\xF8\u0100" +
		"\u0104\u0107\u0109\u01A6\u01AA\u01AE\u01B4\u01BF\u01C8\u01D1\u01DA\u01E1" +
		"\u01EC\u01F4\u0200\u0205\u0208\u020C\u0210\u0216\u021C\u0220\u0226\u022C" +
		"\u0230\u0233\u0238\v\x03\x11\x02\x03\x18\x03\x03\x19\x04\x03\x1A\x05\x03" +
		"\x1B\x06\x03\x1C\x07\x03\x1D\b\b\x02\x02\x02\x04\x02";
	public static readonly _serializedATN: string = Utils.join(
		[
			XonLexer._serializedATNSegment0,
			XonLexer._serializedATNSegment1,
		],
		"",
	);
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

