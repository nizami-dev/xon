// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends Lexer {
	public static readonly MultiLineComment = 1;
	public static readonly SingleLineComment = 2;
	public static readonly If = 3;
	public static readonly Else = 4;
	public static readonly Loop = 5;
	public static readonly In = 6;
	public static readonly Continue = 7;
	public static readonly Break = 8;
	public static readonly Return = 9;
	public static readonly As = 10;
	public static readonly Var = 11;
	public static readonly BitAnd = 12;
	public static readonly BitOr = 13;
	public static readonly BitXor = 14;
	public static readonly RightShiftArithmetic = 15;
	public static readonly LeftShiftArithmetic = 16;
	public static readonly RightShiftLogical = 17;
	public static readonly OpenBracket = 18;
	public static readonly CloseBracket = 19;
	public static readonly OpenParen = 20;
	public static readonly CloseParen = 21;
	public static readonly OpenBrace = 22;
	public static readonly CloseBrace = 23;
	public static readonly Comma = 24;
	public static readonly Assign = 25;
	public static readonly QuestionMark = 26;
	public static readonly Colon = 27;
	public static readonly Ellipsis = 28;
	public static readonly Dot = 29;
	public static readonly Plus = 30;
	public static readonly Minus = 31;
	public static readonly BitNot = 32;
	public static readonly Not = 33;
	public static readonly Multiply = 34;
	public static readonly Divide = 35;
	public static readonly Modulus = 36;
	public static readonly Pow = 37;
	public static readonly Sharp = 38;
	public static readonly LessThan = 39;
	public static readonly MoreThan = 40;
	public static readonly LessThanEquals = 41;
	public static readonly MoreThanEquals = 42;
	public static readonly Equals = 43;
	public static readonly NotEquals = 44;
	public static readonly And = 45;
	public static readonly Or = 46;
	public static readonly MultiplyAssign = 47;
	public static readonly DivideAssign = 48;
	public static readonly ModulusAssign = 49;
	public static readonly PlusAssign = 50;
	public static readonly MinusAssign = 51;
	public static readonly LeftShiftArithmeticAssign = 52;
	public static readonly RightShiftArithmeticAssign = 53;
	public static readonly RightShiftLogicalAssign = 54;
	public static readonly BitAndAssign = 55;
	public static readonly BitXorAssign = 56;
	public static readonly BitOrAssign = 57;
	public static readonly LambdaStart = 58;
	public static readonly Pipe = 59;
	public static readonly Underscore = 60;
	public static readonly BooleanLiteral = 61;
	public static readonly DecimalLiteral = 62;
	public static readonly FloatLiteral = 63;
	public static readonly StringLiteral = 64;
	public static readonly StringFormat = 65;
	public static readonly ID = 66;
	public static readonly Preprocessor = 67;
	public static readonly LineBreak = 68;
	public static readonly Documentation = 69;
	public static readonly WhiteSpaces = 70;
	public static readonly UnexpectedCharacter = 71;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"MultiLineComment", "SingleLineComment", "If", "Else", "Loop", "In", "Continue", 
		"Break", "Return", "As", "Var", "BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "Comma", "Assign", 
		"QuestionMark", "Colon", "Ellipsis", "Dot", "Plus", "Minus", "BitNot", 
		"Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", "LessThan", "MoreThan", 
		"LessThanEquals", "MoreThanEquals", "Equals", "NotEquals", "And", "Or", 
		"MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", 
		"LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", "RightShiftLogicalAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", 
		"Underscore", "BooleanLiteral", "DecimalLiteral", "FloatLiteral", "StringLiteral", 
		"StringFormat", "ID", "Preprocessor", "LineBreak", "Documentation", "WhiteSpaces", 
		"UnexpectedCharacter", "DECIMAL_NUMBER", "DECIMAL_DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'if'", "'else'", "'loop'", "'in'", "'continue'", 
		"'break'", "'return'", "'as'", "'var'", "'and'", "'or'", "'xor'", "'>>'", 
		"'<<'", "'>>>'", "'['", "']'", "'('", "')'", "'{'", "'}'", "','", "'='", 
		"'?'", "':'", "'...'", "'.'", "'+'", "'-'", "'~'", "'!'", "'*'", "'/'", 
		"'%'", "'^'", "'#'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", 
		"'||'", "'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", "'>>>='", 
		"'&='", "'^='", "'|='", "'\\'", "'|'", "'_'", undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "'\n'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "MultiLineComment", "SingleLineComment", "If", "Else", "Loop", 
		"In", "Continue", "Break", "Return", "As", "Var", "BitAnd", "BitOr", "BitXor", 
		"RightShiftArithmetic", "LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "OpenBrace", "CloseBrace", 
		"Comma", "Assign", "QuestionMark", "Colon", "Ellipsis", "Dot", "Plus", 
		"Minus", "BitNot", "Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", 
		"LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", "Equals", 
		"NotEquals", "And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", 
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign", 
		"LambdaStart", "Pipe", "Underscore", "BooleanLiteral", "DecimalLiteral", 
		"FloatLiteral", "StringLiteral", "StringFormat", "ID", "Preprocessor", 
		"LineBreak", "Documentation", "WhiteSpaces", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02I\u01C4\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x03\x02\x03\x02\x03\x02\x03\x02\x07" +
		"\x02\x9A\n\x02\f\x02\x0E\x02\x9D\v\x02\x03\x02\x03\x02\x03\x02\x03\x02" +
		"\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03\xA8\n\x03\f\x03\x0E\x03" +
		"\xAB\v\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03" +
		"\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03" +
		"\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03" +
		"\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03" +
		"\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		" \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03" +
		"\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03" +
		",\x03-\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x03" +
		"1\x031\x032\x032\x032\x033\x033\x033\x034\x034\x034\x035\x035\x035\x03" +
		"5\x036\x036\x036\x036\x037\x037\x037\x037\x037\x038\x038\x038\x039\x03" +
		"9\x039\x03:\x03:\x03:\x03;\x03;\x03<\x03<\x03=\x03=\x03>\x03>\x03>\x03" +
		">\x03>\x03>\x03>\x03>\x03>\x05>\u0167\n>\x03?\x03?\x03@\x03@\x03@\x03" +
		"@\x03A\x03A\x07A\u0171\nA\fA\x0EA\u0174\vA\x03A\x03A\x03B\x03B\x03B\x03" +
		"B\x07B\u017C\nB\fB\x0EB\u017F\vB\x03B\x03B\x03C\x03C\x07C\u0185\nC\fC" +
		"\x0EC\u0188\vC\x03C\x03C\x06C\u018C\nC\rC\x0EC\u018D\x05C\u0190\nC\x03" +
		"D\x03D\x03D\x03D\x07D\u0196\nD\fD\x0ED\u0199\vD\x03D\x03D\x03E\x03E\x03" +
		"F\x03F\x07F\u01A1\nF\fF\x0EF\u01A4\vF\x03F\x03F\x03G\x06G\u01A9\nG\rG" +
		"\x0EG\u01AA\x03G\x03G\x03H\x03H\x03H\x03H\x03I\x06I\u01B4\nI\rI\x0EI\u01B5" +
		"\x03I\x03I\x06I\u01BA\nI\rI\x0EI\u01BB\x07I\u01BE\nI\fI\x0EI\u01C1\vI" +
		"\x03J\x03J\x05\x9B\u0197\u01A2\x02\x02K\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
		"\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C" +
		"\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02" +
		".[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02" +
		":s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02C\x85\x02" +
		"D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02H\x8F\x02I\x91\x02\x02\x93\x02\x02" +
		"\x03\x02\t\x05\x02\f\f\x0F\x0F\u202A\u202B\x03\x02))\x04\x02C\\c|\x06" +
		"\x022;C\\aac|\x05\x02C\\aac|\x05\x02\v\v\x0F\x0F\"\"\x03\x022;\x02\u01CF" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03" +
		"\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02" +
		"\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x02" +
		"5\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02" +
		"\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02" +
		"\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03" +
		"\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02" +
		"\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02\x02\x02\x02" +
		"W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02\x02]\x03\x02" +
		"\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03\x02\x02\x02" +
		"\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02\x02\x02k\x03" +
		"\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02q\x03\x02\x02" +
		"\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02\x02\x02\x02" +
		"y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02\x02\x7F\x03" +
		"\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03" +
		"\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02\x02\x8B\x03" +
		"\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02\x03\x95\x03" +
		"\x02\x02\x02\x05\xA3\x03\x02\x02\x02\x07\xAE\x03\x02\x02\x02\t\xB1\x03" +
		"\x02\x02\x02\v\xB6\x03\x02\x02\x02\r\xBB\x03\x02\x02\x02\x0F\xBE\x03\x02" +
		"\x02\x02\x11\xC7\x03\x02\x02\x02\x13\xCD\x03\x02\x02\x02\x15\xD4\x03\x02" +
		"\x02\x02\x17\xD7\x03\x02\x02\x02\x19\xDB\x03\x02\x02\x02\x1B\xDF\x03\x02" +
		"\x02\x02\x1D\xE2\x03\x02\x02\x02\x1F\xE6\x03\x02\x02\x02!\xE9\x03\x02" +
		"\x02\x02#\xEC\x03\x02\x02\x02%\xF0\x03\x02\x02\x02\'\xF2\x03\x02\x02\x02" +
		")\xF4\x03\x02\x02\x02+\xF6\x03\x02\x02\x02-\xF8\x03\x02\x02\x02/\xFA\x03" +
		"\x02\x02\x021\xFC\x03\x02\x02\x023\xFE\x03\x02\x02\x025\u0100\x03\x02" +
		"\x02\x027\u0102\x03\x02\x02\x029\u0104\x03\x02\x02\x02;\u0108\x03\x02" +
		"\x02\x02=\u010A\x03\x02\x02\x02?\u010C\x03\x02\x02\x02A\u010E\x03\x02" +
		"\x02\x02C\u0110\x03\x02\x02\x02E\u0112\x03\x02\x02\x02G\u0114\x03\x02" +
		"\x02\x02I\u0116\x03\x02\x02\x02K\u0118\x03\x02\x02\x02M\u011A\x03\x02" +
		"\x02\x02O\u011C\x03\x02\x02\x02Q\u011E\x03\x02\x02\x02S\u0120\x03\x02" +
		"\x02\x02U\u0123\x03\x02\x02\x02W\u0126\x03\x02\x02\x02Y\u0129\x03\x02" +
		"\x02\x02[\u012C\x03\x02\x02\x02]\u012F\x03\x02\x02\x02_\u0132\x03\x02" +
		"\x02\x02a\u0135\x03\x02\x02\x02c\u0138\x03\x02\x02\x02e\u013B\x03\x02" +
		"\x02\x02g\u013E\x03\x02\x02\x02i\u0141\x03\x02\x02\x02k\u0145\x03\x02" +
		"\x02\x02m\u0149\x03\x02\x02\x02o\u014E\x03\x02\x02\x02q\u0151\x03\x02" +
		"\x02\x02s\u0154\x03\x02\x02\x02u\u0157\x03\x02\x02\x02w\u0159\x03\x02" +
		"\x02\x02y\u015B\x03\x02\x02\x02{\u0166\x03\x02\x02\x02}\u0168\x03\x02" +
		"\x02\x02\x7F\u016A\x03\x02\x02\x02\x81\u016E\x03\x02\x02\x02\x83\u0177" +
		"\x03\x02\x02\x02\x85\u018F\x03\x02\x02\x02\x87\u0191\x03\x02\x02\x02\x89" +
		"\u019C\x03\x02\x02\x02\x8B\u019E\x03\x02\x02\x02\x8D\u01A8\x03\x02\x02" +
		"\x02\x8F\u01AE\x03\x02\x02\x02\x91\u01B3\x03\x02\x02\x02\x93\u01C2\x03" +
		"\x02\x02\x02\x95\x96\x071\x02\x02\x96\x97\x07,\x02\x02\x97\x9B\x03\x02" +
		"\x02\x02\x98\x9A\v\x02\x02\x02\x99\x98\x03\x02\x02\x02\x9A\x9D\x03\x02" +
		"\x02\x02\x9B\x9C\x03\x02\x02\x02\x9B\x99\x03\x02\x02\x02\x9C\x9E\x03\x02" +
		"\x02\x02\x9D\x9B\x03\x02\x02\x02\x9E\x9F\x07,\x02\x02\x9F\xA0\x071\x02" +
		"\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA2\b\x02\x02\x02\xA2\x04\x03\x02\x02" +
		"\x02\xA3\xA4\x071\x02\x02\xA4\xA5\x071\x02\x02\xA5\xA9\x03\x02\x02\x02" +
		"\xA6\xA8\n\x02\x02\x02\xA7\xA6\x03\x02\x02\x02\xA8\xAB\x03\x02\x02\x02" +
		"\xA9\xA7\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xAA\xAC\x03\x02\x02\x02" +
		"\xAB\xA9\x03\x02\x02\x02\xAC\xAD\b\x03\x02\x02\xAD\x06\x03\x02\x02\x02" +
		"\xAE\xAF\x07k\x02\x02\xAF\xB0\x07h\x02\x02\xB0\b\x03\x02\x02\x02\xB1\xB2" +
		"\x07g\x02\x02\xB2\xB3\x07n\x02\x02\xB3\xB4\x07u\x02\x02\xB4\xB5\x07g\x02" +
		"\x02\xB5\n\x03\x02\x02\x02\xB6\xB7\x07n\x02\x02\xB7\xB8\x07q\x02\x02\xB8" +
		"\xB9\x07q\x02\x02\xB9\xBA\x07r\x02\x02\xBA\f\x03\x02\x02\x02\xBB\xBC\x07" +
		"k\x02\x02\xBC\xBD\x07p\x02\x02\xBD\x0E\x03\x02\x02\x02\xBE\xBF\x07e\x02" +
		"\x02\xBF\xC0\x07q\x02\x02\xC0\xC1\x07p\x02\x02\xC1\xC2\x07v\x02\x02\xC2" +
		"\xC3\x07k\x02\x02\xC3\xC4\x07p\x02\x02\xC4\xC5\x07w\x02\x02\xC5\xC6\x07" +
		"g\x02\x02\xC6\x10\x03\x02\x02\x02\xC7\xC8\x07d\x02\x02\xC8\xC9\x07t\x02" +
		"\x02\xC9\xCA\x07g\x02\x02\xCA\xCB\x07c\x02\x02\xCB\xCC\x07m\x02\x02\xCC" +
		"\x12\x03\x02\x02\x02\xCD\xCE\x07t\x02\x02\xCE\xCF\x07g\x02\x02\xCF\xD0" +
		"\x07v\x02\x02\xD0\xD1\x07w\x02\x02\xD1\xD2\x07t\x02\x02\xD2\xD3\x07p\x02" +
		"\x02\xD3\x14\x03\x02\x02\x02\xD4\xD5\x07c\x02\x02\xD5\xD6\x07u\x02\x02" +
		"\xD6\x16\x03\x02\x02\x02\xD7\xD8\x07x\x02\x02\xD8\xD9\x07c\x02\x02\xD9" +
		"\xDA\x07t\x02\x02\xDA\x18\x03\x02\x02\x02\xDB\xDC\x07c\x02\x02\xDC\xDD" +
		"\x07p\x02\x02\xDD\xDE\x07f\x02\x02\xDE\x1A\x03\x02\x02\x02\xDF\xE0\x07" +
		"q\x02\x02\xE0\xE1\x07t\x02\x02\xE1\x1C\x03\x02\x02\x02\xE2\xE3\x07z\x02" +
		"\x02\xE3\xE4\x07q\x02\x02\xE4\xE5\x07t\x02\x02\xE5\x1E\x03\x02\x02\x02" +
		"\xE6\xE7\x07@\x02\x02\xE7\xE8\x07@\x02\x02\xE8 \x03\x02\x02\x02\xE9\xEA" +
		"\x07>\x02\x02\xEA\xEB\x07>\x02\x02\xEB\"\x03\x02\x02\x02\xEC\xED\x07@" +
		"\x02\x02\xED\xEE\x07@\x02\x02\xEE\xEF\x07@\x02\x02\xEF$\x03\x02\x02\x02" +
		"\xF0\xF1\x07]\x02\x02\xF1&\x03\x02\x02\x02\xF2\xF3\x07_\x02\x02\xF3(\x03" +
		"\x02\x02\x02\xF4\xF5\x07*\x02\x02\xF5*\x03\x02\x02\x02\xF6\xF7\x07+\x02" +
		"\x02\xF7,\x03\x02\x02\x02\xF8\xF9\x07}\x02\x02\xF9.\x03\x02\x02\x02\xFA" +
		"\xFB\x07\x7F\x02\x02\xFB0\x03\x02\x02\x02\xFC\xFD\x07.\x02\x02\xFD2\x03" +
		"\x02\x02\x02\xFE\xFF\x07?\x02\x02\xFF4\x03\x02\x02\x02\u0100\u0101\x07" +
		"A\x02\x02\u01016\x03\x02\x02\x02\u0102\u0103\x07<\x02\x02\u01038\x03\x02" +
		"\x02\x02\u0104\u0105\x070\x02\x02\u0105\u0106\x070\x02\x02\u0106\u0107" +
		"\x070\x02\x02\u0107:\x03\x02\x02\x02\u0108\u0109\x070\x02\x02\u0109<\x03" +
		"\x02\x02\x02\u010A\u010B\x07-\x02\x02\u010B>\x03\x02\x02\x02\u010C\u010D" +
		"\x07/\x02\x02\u010D@\x03\x02\x02\x02\u010E\u010F\x07\x80\x02\x02\u010F" +
		"B\x03\x02\x02\x02\u0110\u0111\x07#\x02\x02\u0111D\x03\x02\x02\x02\u0112" +
		"\u0113\x07,\x02\x02\u0113F\x03\x02\x02\x02\u0114\u0115\x071\x02\x02\u0115" +
		"H\x03\x02\x02\x02\u0116\u0117\x07\'\x02\x02\u0117J\x03\x02\x02\x02\u0118" +
		"\u0119\x07`\x02\x02\u0119L\x03\x02\x02\x02\u011A\u011B\x07%\x02\x02\u011B" +
		"N\x03\x02\x02\x02\u011C\u011D\x07>\x02\x02\u011DP\x03\x02\x02\x02\u011E" +
		"\u011F\x07@\x02\x02\u011FR\x03\x02\x02\x02\u0120\u0121\x07>\x02\x02\u0121" +
		"\u0122\x07?\x02\x02\u0122T\x03\x02\x02\x02\u0123\u0124\x07@\x02\x02\u0124" +
		"\u0125\x07?\x02\x02\u0125V\x03\x02\x02\x02\u0126\u0127\x07?\x02\x02\u0127" +
		"\u0128\x07?\x02\x02\u0128X\x03\x02\x02\x02\u0129\u012A\x07#\x02\x02\u012A" +
		"\u012B\x07?\x02\x02\u012BZ\x03\x02\x02\x02\u012C\u012D\x07(\x02\x02\u012D" +
		"\u012E\x07(\x02\x02\u012E\\\x03\x02\x02\x02\u012F\u0130\x07~\x02\x02\u0130" +
		"\u0131\x07~\x02\x02\u0131^\x03\x02\x02\x02\u0132\u0133\x07,\x02\x02\u0133" +
		"\u0134\x07?\x02\x02\u0134`\x03\x02\x02\x02\u0135\u0136\x071\x02\x02\u0136" +
		"\u0137\x07?\x02\x02\u0137b\x03\x02\x02\x02\u0138\u0139\x07\'\x02\x02\u0139" +
		"\u013A\x07?\x02\x02\u013Ad\x03\x02\x02\x02\u013B\u013C\x07-\x02\x02\u013C" +
		"\u013D\x07?\x02\x02\u013Df\x03\x02\x02\x02\u013E\u013F\x07/\x02\x02\u013F" +
		"\u0140\x07?\x02\x02\u0140h\x03\x02\x02\x02\u0141\u0142\x07>\x02\x02\u0142" +
		"\u0143\x07>\x02\x02\u0143\u0144\x07?\x02\x02\u0144j\x03\x02\x02\x02\u0145" +
		"\u0146\x07@\x02\x02\u0146\u0147\x07@\x02\x02\u0147\u0148\x07?\x02\x02" +
		"\u0148l\x03\x02\x02\x02\u0149\u014A\x07@\x02\x02\u014A\u014B\x07@\x02" +
		"\x02\u014B\u014C\x07@\x02\x02\u014C\u014D\x07?\x02\x02\u014Dn\x03\x02" +
		"\x02\x02\u014E\u014F\x07(\x02\x02\u014F\u0150\x07?\x02\x02\u0150p\x03" +
		"\x02\x02\x02\u0151\u0152\x07`\x02\x02\u0152\u0153\x07?\x02\x02\u0153r" +
		"\x03\x02\x02\x02\u0154\u0155\x07~\x02\x02\u0155\u0156\x07?\x02\x02\u0156" +
		"t\x03\x02\x02\x02\u0157\u0158\x07^\x02\x02\u0158v\x03\x02\x02\x02\u0159" +
		"\u015A\x07~\x02\x02\u015Ax\x03\x02\x02\x02\u015B\u015C\x07a\x02\x02\u015C" +
		"z\x03\x02\x02\x02\u015D\u015E\x07v\x02\x02\u015E\u015F\x07t\x02\x02\u015F" +
		"\u0160\x07w\x02\x02\u0160\u0167\x07g\x02\x02\u0161\u0162\x07h\x02\x02" +
		"\u0162\u0163\x07c\x02\x02\u0163\u0164\x07n\x02\x02\u0164\u0165\x07u\x02" +
		"\x02\u0165\u0167\x07g\x02\x02\u0166\u015D\x03\x02\x02\x02\u0166\u0161" +
		"\x03\x02\x02\x02\u0167|\x03\x02\x02\x02\u0168\u0169\x05\x91I\x02\u0169" +
		"~\x03\x02\x02\x02\u016A\u016B\x05\x91I\x02\u016B\u016C\x070\x02\x02\u016C" +
		"\u016D\x05\x91I\x02\u016D\x80\x03\x02\x02\x02\u016E\u0172\x07)\x02\x02" +
		"\u016F\u0171\n\x03\x02\x02\u0170\u016F\x03\x02\x02\x02\u0171\u0174\x03" +
		"\x02\x02\x02\u0172\u0170\x03\x02\x02\x02\u0172\u0173\x03\x02\x02\x02\u0173" +
		"\u0175\x03\x02\x02\x02\u0174\u0172\x03\x02\x02\x02\u0175\u0176\x07)\x02" +
		"\x02\u0176\x82\x03\x02\x02\x02\u0177\u0178\x07h\x02\x02\u0178\u0179\x07" +
		")\x02\x02\u0179\u017D\x03\x02\x02\x02\u017A\u017C\n\x03\x02\x02\u017B" +
		"\u017A\x03\x02\x02\x02\u017C\u017F\x03\x02\x02\x02\u017D\u017B\x03\x02" +
		"\x02\x02\u017D\u017E\x03\x02\x02\x02\u017E\u0180\x03\x02\x02\x02\u017F" +
		"\u017D\x03\x02\x02\x02\u0180\u0181\x07)\x02\x02\u0181\x84\x03\x02\x02" +
		"\x02\u0182\u0186\t\x04\x02\x02\u0183\u0185\t\x05\x02\x02\u0184\u0183\x03" +
		"\x02\x02\x02\u0185\u0188\x03\x02\x02\x02\u0186\u0184\x03\x02\x02\x02\u0186" +
		"\u0187\x03\x02\x02\x02\u0187\u0190\x03\x02\x02\x02\u0188\u0186\x03\x02" +
		"\x02\x02\u0189\u018B\t\x06\x02\x02\u018A\u018C\t\x05\x02\x02\u018B\u018A" +
		"\x03\x02\x02\x02\u018C\u018D\x03\x02\x02\x02\u018D\u018B\x03\x02\x02\x02" +
		"\u018D\u018E\x03\x02\x02\x02\u018E\u0190\x03\x02\x02\x02\u018F\u0182\x03" +
		"\x02\x02\x02\u018F\u0189\x03\x02\x02\x02\u0190\x86\x03\x02\x02\x02\u0191" +
		"\u0192\x07%\x02\x02\u0192\u0193\x07}\x02\x02\u0193\u0197\x03\x02\x02\x02" +
		"\u0194\u0196\v\x02\x02\x02\u0195\u0194\x03\x02\x02\x02\u0196\u0199\x03" +
		"\x02\x02\x02\u0197\u0198\x03\x02\x02\x02\u0197\u0195\x03\x02\x02\x02\u0198" +
		"\u019A\x03\x02\x02\x02\u0199\u0197\x03\x02\x02\x02\u019A\u019B\x07\x7F" +
		"\x02\x02\u019B\x88\x03\x02\x02\x02\u019C\u019D\x07\f\x02\x02\u019D\x8A" +
		"\x03\x02\x02\x02\u019E\u01A2\x07a\x02\x02\u019F\u01A1\v\x02\x02\x02\u01A0" +
		"\u019F\x03\x02\x02\x02\u01A1\u01A4\x03\x02\x02\x02\u01A2\u01A3\x03\x02" +
		"\x02\x02\u01A2\u01A0\x03\x02\x02\x02\u01A3\u01A5\x03\x02\x02\x02\u01A4" +
		"\u01A2\x03\x02\x02\x02\u01A5\u01A6\x07a\x02\x02\u01A6\x8C\x03\x02\x02" +
		"\x02\u01A7\u01A9\t\x07\x02\x02\u01A8\u01A7\x03\x02\x02\x02\u01A9\u01AA" +
		"\x03\x02\x02\x02\u01AA\u01A8\x03\x02\x02\x02\u01AA\u01AB\x03\x02\x02\x02" +
		"\u01AB\u01AC\x03\x02\x02\x02\u01AC\u01AD\bG\x02\x02\u01AD\x8E\x03\x02" +
		"\x02\x02\u01AE\u01AF\v\x02\x02\x02\u01AF\u01B0\x03\x02\x02\x02\u01B0\u01B1" +
		"\bH\x03\x02\u01B1\x90\x03\x02\x02\x02\u01B2\u01B4\x05\x93J\x02\u01B3\u01B2" +
		"\x03\x02\x02\x02\u01B4\u01B5\x03\x02\x02\x02\u01B5\u01B3\x03\x02\x02\x02" +
		"\u01B5\u01B6\x03\x02\x02\x02\u01B6\u01BF\x03\x02\x02\x02\u01B7\u01B9\x07" +
		"a\x02\x02\u01B8\u01BA\x05\x93J\x02\u01B9\u01B8\x03\x02\x02\x02\u01BA\u01BB" +
		"\x03\x02\x02\x02\u01BB\u01B9\x03\x02\x02\x02\u01BB\u01BC\x03\x02\x02\x02" +
		"\u01BC\u01BE\x03\x02\x02\x02\u01BD\u01B7\x03\x02\x02\x02\u01BE\u01C1\x03" +
		"\x02\x02\x02\u01BF\u01BD\x03\x02\x02\x02\u01BF\u01C0\x03\x02\x02\x02\u01C0" +
		"\x92\x03\x02\x02\x02\u01C1\u01BF\x03\x02\x02\x02\u01C2\u01C3\t\b\x02\x02" +
		"\u01C3\x94\x03\x02\x02\x02\x11\x02\x9B\xA9\u0166\u0172\u017D\u0186\u018D" +
		"\u018F\u0197\u01A2\u01AA\u01B5\u01BB\u01BF\x04\x02\x03\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

