// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends Lexer {
	public static readonly MultiLineComment = 1;
	public static readonly SingleLineComment = 2;
	public static readonly If = 3;
	public static readonly Else = 4;
	public static readonly Loop = 5;
	public static readonly In = 6;
	public static readonly Continue = 7;
	public static readonly Break = 8;
	public static readonly Return = 9;
	public static readonly As = 10;
	public static readonly BitAnd = 11;
	public static readonly BitOr = 12;
	public static readonly BitXor = 13;
	public static readonly RightShiftArithmetic = 14;
	public static readonly LeftShiftArithmetic = 15;
	public static readonly RightShiftLogical = 16;
	public static readonly OpenBracket = 17;
	public static readonly CloseBracket = 18;
	public static readonly OpenParen = 19;
	public static readonly CloseParen = 20;
	public static readonly OpenBrace = 21;
	public static readonly CloseBrace = 22;
	public static readonly Comma = 23;
	public static readonly Assign = 24;
	public static readonly QuestionMark = 25;
	public static readonly Colon = 26;
	public static readonly Ellipsis = 27;
	public static readonly Dot = 28;
	public static readonly Plus = 29;
	public static readonly Minus = 30;
	public static readonly BitNot = 31;
	public static readonly Not = 32;
	public static readonly Multiply = 33;
	public static readonly Divide = 34;
	public static readonly Modulus = 35;
	public static readonly Pow = 36;
	public static readonly Sharp = 37;
	public static readonly LessThan = 38;
	public static readonly MoreThan = 39;
	public static readonly LessThanEquals = 40;
	public static readonly MoreThanEquals = 41;
	public static readonly Equals = 42;
	public static readonly NotEquals = 43;
	public static readonly And = 44;
	public static readonly Or = 45;
	public static readonly MultiplyAssign = 46;
	public static readonly DivideAssign = 47;
	public static readonly ModulusAssign = 48;
	public static readonly PlusAssign = 49;
	public static readonly MinusAssign = 50;
	public static readonly LeftShiftArithmeticAssign = 51;
	public static readonly RightShiftArithmeticAssign = 52;
	public static readonly RightShiftLogicalAssign = 53;
	public static readonly BitAndAssign = 54;
	public static readonly BitXorAssign = 55;
	public static readonly BitOrAssign = 56;
	public static readonly LambdaStart = 57;
	public static readonly Pipe = 58;
	public static readonly BooleanLiteral = 59;
	public static readonly DecimalLiteral = 60;
	public static readonly FloatLiteral = 61;
	public static readonly StringLiteral = 62;
	public static readonly StringFormat = 63;
	public static readonly ID = 64;
	public static readonly Preprocessor = 65;
	public static readonly LineBreak = 66;
	public static readonly WhiteSpaces = 67;
	public static readonly UnexpectedCharacter = 68;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"MultiLineComment", "SingleLineComment", "If", "Else", "Loop", "In", "Continue", 
		"Break", "Return", "As", "BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", 
		"LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", "CloseBracket", 
		"OpenParen", "CloseParen", "OpenBrace", "CloseBrace", "Comma", "Assign", 
		"QuestionMark", "Colon", "Ellipsis", "Dot", "Plus", "Minus", "BitNot", 
		"Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", "LessThan", "MoreThan", 
		"LessThanEquals", "MoreThanEquals", "Equals", "NotEquals", "And", "Or", 
		"MultiplyAssign", "DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", 
		"LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", "RightShiftLogicalAssign", 
		"BitAndAssign", "BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", 
		"BooleanLiteral", "DecimalLiteral", "FloatLiteral", "StringLiteral", "StringFormat", 
		"ID", "Preprocessor", "LineBreak", "WhiteSpaces", "UnexpectedCharacter", 
		"DECIMAL_NUMBER", "DECIMAL_DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'if'", "'else'", "'loop'", "'in'", "'continue'", 
		"'break'", "'return'", "'as'", "'and'", "'or'", "'xor'", "'>>'", "'<<'", 
		"'>>>'", "'['", "']'", "'('", "')'", "'{'", "'}'", "','", "'='", "'?'", 
		"':'", "'...'", "'.'", "'+'", "'-'", "'~'", "'!'", "'*'", "'/'", "'%'", 
		"'^'", "'#'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", 
		"'*='", "'/='", "'%='", "'+='", "'-='", "'<<='", "'>>='", "'>>>='", "'&='", 
		"'^='", "'|='", "'\\'", "'|'", undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "'\n'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "MultiLineComment", "SingleLineComment", "If", "Else", "Loop", 
		"In", "Continue", "Break", "Return", "As", "BitAnd", "BitOr", "BitXor", 
		"RightShiftArithmetic", "LeftShiftArithmetic", "RightShiftLogical", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "OpenBrace", "CloseBrace", 
		"Comma", "Assign", "QuestionMark", "Colon", "Ellipsis", "Dot", "Plus", 
		"Minus", "BitNot", "Not", "Multiply", "Divide", "Modulus", "Pow", "Sharp", 
		"LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", "Equals", 
		"NotEquals", "And", "Or", "MultiplyAssign", "DivideAssign", "ModulusAssign", 
		"PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", "RightShiftArithmeticAssign", 
		"RightShiftLogicalAssign", "BitAndAssign", "BitXorAssign", "BitOrAssign", 
		"LambdaStart", "Pipe", "BooleanLiteral", "DecimalLiteral", "FloatLiteral", 
		"StringLiteral", "StringFormat", "ID", "Preprocessor", "LineBreak", "WhiteSpaces", 
		"UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02F\u01A7\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x03\x02\x03\x02\x03\x02\x03\x02\x07\x02\x94\n\x02\f\x02\x0E" +
		"\x02\x97\v\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x07\x03\xA2\n\x03\f\x03\x0E\x03\xA5\v\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#" +
		"\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03" +
		")\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03" +
		".\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x031\x031\x032\x032\x032\x03" +
		"3\x033\x033\x034\x034\x034\x034\x035\x035\x035\x035\x036\x036\x036\x03" +
		"6\x036\x037\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03;\x03" +
		";\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x05<\u015B\n<\x03=\x03" +
		"=\x03>\x03>\x03>\x03>\x03?\x03?\x07?\u0165\n?\f?\x0E?\u0168\v?\x03?\x03" +
		"?\x03@\x03@\x03@\x03@\x07@\u0170\n@\f@\x0E@\u0173\v@\x03@\x03@\x03A\x03" +
		"A\x07A\u0179\nA\fA\x0EA\u017C\vA\x03B\x03B\x03B\x03B\x07B\u0182\nB\fB" +
		"\x0EB\u0185\vB\x03B\x03B\x03C\x03C\x03D\x06D\u018C\nD\rD\x0ED\u018D\x03" +
		"D\x03D\x03E\x03E\x03E\x03E\x03F\x06F\u0197\nF\rF\x0EF\u0198\x03F\x03F" +
		"\x06F\u019D\nF\rF\x0EF\u019E\x07F\u01A1\nF\fF\x0EF\u01A4\vF\x03G\x03G" +
		"\x04\x95\u0183\x02\x02H\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02" +
		"\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I" +
		"\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x02" +
		"1a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02" +
		"=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02" +
		"F\x8B\x02\x02\x8D\x02\x02\x03\x02\b\x05\x02\f\f\x0F\x0F\u202A\u202B\x03" +
		"\x02))\x05\x02C\\aac|\x06\x022;C\\aac|\x05\x02\v\v\x0F\x0F\"\"\x03\x02" +
		"2;\x02\u01AF\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03" +
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02" +
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02" +
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-" +
		"\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02" +
		"q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02" +
		"\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02" +
		"\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02" +
		"\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02" +
		"\x03\x8F\x03\x02\x02\x02\x05\x9D\x03\x02\x02\x02\x07\xA8\x03\x02\x02\x02" +
		"\t\xAB\x03\x02\x02\x02\v\xB0\x03\x02\x02\x02\r\xB5\x03\x02\x02\x02\x0F" +
		"\xB8\x03\x02\x02\x02\x11\xC1\x03\x02\x02\x02\x13\xC7\x03\x02\x02\x02\x15" +
		"\xCE\x03\x02\x02\x02\x17\xD1\x03\x02\x02\x02\x19\xD5\x03\x02\x02\x02\x1B" +
		"\xD8\x03\x02\x02\x02\x1D\xDC\x03\x02\x02\x02\x1F\xDF\x03\x02\x02\x02!" +
		"\xE2\x03\x02\x02\x02#\xE6\x03\x02\x02\x02%\xE8\x03\x02\x02\x02\'\xEA\x03" +
		"\x02\x02\x02)\xEC\x03\x02\x02\x02+\xEE\x03\x02\x02\x02-\xF0\x03\x02\x02" +
		"\x02/\xF2\x03\x02\x02\x021\xF4\x03\x02\x02\x023\xF6\x03\x02\x02\x025\xF8" +
		"\x03\x02\x02\x027\xFA\x03\x02\x02\x029\xFE\x03\x02\x02\x02;\u0100\x03" +
		"\x02\x02\x02=\u0102\x03\x02\x02\x02?\u0104\x03\x02\x02\x02A\u0106\x03" +
		"\x02\x02\x02C\u0108\x03\x02\x02\x02E\u010A\x03\x02\x02\x02G\u010C\x03" +
		"\x02\x02\x02I\u010E\x03\x02\x02\x02K\u0110\x03\x02\x02\x02M\u0112\x03" +
		"\x02\x02\x02O\u0114\x03\x02\x02\x02Q\u0116\x03\x02\x02\x02S\u0119\x03" +
		"\x02\x02\x02U\u011C\x03\x02\x02\x02W\u011F\x03\x02\x02\x02Y\u0122\x03" +
		"\x02\x02\x02[\u0125\x03\x02\x02\x02]\u0128\x03\x02\x02\x02_\u012B\x03" +
		"\x02\x02\x02a\u012E\x03\x02\x02\x02c\u0131\x03\x02\x02\x02e\u0134\x03" +
		"\x02\x02\x02g\u0137\x03\x02\x02\x02i\u013B\x03\x02\x02\x02k\u013F\x03" +
		"\x02\x02\x02m\u0144\x03\x02\x02\x02o\u0147\x03\x02\x02\x02q\u014A\x03" +
		"\x02\x02\x02s\u014D\x03\x02\x02\x02u\u014F\x03\x02\x02\x02w\u015A\x03" +
		"\x02\x02\x02y\u015C\x03\x02\x02\x02{\u015E\x03\x02\x02\x02}\u0162\x03" +
		"\x02\x02\x02\x7F\u016B\x03\x02\x02\x02\x81\u0176\x03\x02\x02\x02\x83\u017D" +
		"\x03\x02\x02\x02\x85\u0188\x03\x02\x02\x02\x87\u018B\x03\x02\x02\x02\x89" +
		"\u0191\x03\x02\x02\x02\x8B\u0196\x03\x02\x02\x02\x8D\u01A5\x03\x02\x02" +
		"\x02\x8F\x90\x071\x02\x02\x90\x91\x07,\x02\x02\x91\x95\x03\x02\x02\x02" +
		"\x92\x94\v\x02\x02\x02\x93\x92\x03\x02\x02\x02\x94\x97\x03\x02\x02\x02" +
		"\x95\x96\x03\x02\x02\x02\x95\x93\x03\x02\x02\x02\x96\x98\x03\x02\x02\x02" +
		"\x97\x95\x03\x02\x02\x02\x98\x99\x07,\x02\x02\x99\x9A\x071\x02\x02\x9A" +
		"\x9B\x03\x02\x02\x02\x9B\x9C\b\x02\x02\x02\x9C\x04\x03\x02\x02\x02\x9D" +
		"\x9E\x071\x02\x02\x9E\x9F\x071\x02\x02\x9F\xA3\x03\x02\x02\x02\xA0\xA2" +
		"\n\x02\x02\x02\xA1\xA0\x03\x02\x02\x02\xA2\xA5\x03\x02\x02\x02\xA3\xA1" +
		"\x03\x02\x02\x02\xA3\xA4\x03\x02\x02\x02\xA4\xA6\x03\x02\x02\x02\xA5\xA3" +
		"\x03\x02\x02\x02\xA6\xA7\b\x03\x02\x02\xA7\x06\x03\x02\x02\x02\xA8\xA9" +
		"\x07k\x02\x02\xA9\xAA\x07h\x02\x02\xAA\b\x03\x02\x02\x02\xAB\xAC\x07g" +
		"\x02\x02\xAC\xAD\x07n\x02\x02\xAD\xAE\x07u\x02\x02\xAE\xAF\x07g\x02\x02" +
		"\xAF\n\x03\x02\x02\x02\xB0\xB1\x07n\x02\x02\xB1\xB2\x07q\x02\x02\xB2\xB3" +
		"\x07q\x02\x02\xB3\xB4\x07r\x02\x02\xB4\f\x03\x02\x02\x02\xB5\xB6\x07k" +
		"\x02\x02\xB6\xB7\x07p\x02\x02\xB7\x0E\x03\x02\x02\x02\xB8\xB9\x07e\x02" +
		"\x02\xB9\xBA\x07q\x02\x02\xBA\xBB\x07p\x02\x02\xBB\xBC\x07v\x02\x02\xBC" +
		"\xBD\x07k\x02\x02\xBD\xBE\x07p\x02\x02\xBE\xBF\x07w\x02\x02\xBF\xC0\x07" +
		"g\x02\x02\xC0\x10\x03\x02\x02\x02\xC1\xC2\x07d\x02\x02\xC2\xC3\x07t\x02" +
		"\x02\xC3\xC4\x07g\x02\x02\xC4\xC5\x07c\x02\x02\xC5\xC6\x07m\x02\x02\xC6" +
		"\x12\x03\x02\x02\x02\xC7\xC8\x07t\x02\x02\xC8\xC9\x07g\x02\x02\xC9\xCA" +
		"\x07v\x02\x02\xCA\xCB\x07w\x02\x02\xCB\xCC\x07t\x02\x02\xCC\xCD\x07p\x02" +
		"\x02\xCD\x14\x03\x02\x02\x02\xCE\xCF\x07c\x02\x02\xCF\xD0\x07u\x02\x02" +
		"\xD0\x16\x03\x02\x02\x02\xD1\xD2\x07c\x02\x02\xD2\xD3\x07p\x02\x02\xD3" +
		"\xD4\x07f\x02\x02\xD4\x18\x03\x02\x02\x02\xD5\xD6\x07q\x02\x02\xD6\xD7" +
		"\x07t\x02\x02\xD7\x1A\x03\x02\x02\x02\xD8\xD9\x07z\x02\x02\xD9\xDA\x07" +
		"q\x02\x02\xDA\xDB\x07t\x02\x02\xDB\x1C\x03\x02\x02\x02\xDC\xDD\x07@\x02" +
		"\x02\xDD\xDE\x07@\x02\x02\xDE\x1E\x03\x02\x02\x02\xDF\xE0\x07>\x02\x02" +
		"\xE0\xE1\x07>\x02\x02\xE1 \x03\x02\x02\x02\xE2\xE3\x07@\x02\x02\xE3\xE4" +
		"\x07@\x02\x02\xE4\xE5\x07@\x02\x02\xE5\"\x03\x02\x02\x02\xE6\xE7\x07]" +
		"\x02\x02\xE7$\x03\x02\x02\x02\xE8\xE9\x07_\x02\x02\xE9&\x03\x02\x02\x02" +
		"\xEA\xEB\x07*\x02\x02\xEB(\x03\x02\x02\x02\xEC\xED\x07+\x02\x02\xED*\x03" +
		"\x02\x02\x02\xEE\xEF\x07}\x02\x02\xEF,\x03\x02\x02\x02\xF0\xF1\x07\x7F" +
		"\x02\x02\xF1.\x03\x02\x02\x02\xF2\xF3\x07.\x02\x02\xF30\x03\x02\x02\x02" +
		"\xF4\xF5\x07?\x02\x02\xF52\x03\x02\x02\x02\xF6\xF7\x07A\x02\x02\xF74\x03" +
		"\x02\x02\x02\xF8\xF9\x07<\x02\x02\xF96\x03\x02\x02\x02\xFA\xFB\x070\x02" +
		"\x02\xFB\xFC\x070\x02\x02\xFC\xFD\x070\x02\x02\xFD8\x03\x02\x02\x02\xFE" +
		"\xFF\x070\x02\x02\xFF:\x03\x02\x02\x02\u0100\u0101\x07-\x02\x02\u0101" +
		"<\x03\x02\x02\x02\u0102\u0103\x07/\x02\x02\u0103>\x03\x02\x02\x02\u0104" +
		"\u0105\x07\x80\x02\x02\u0105@\x03\x02\x02\x02\u0106\u0107\x07#\x02\x02" +
		"\u0107B\x03\x02\x02\x02\u0108\u0109\x07,\x02\x02\u0109D\x03\x02\x02\x02" +
		"\u010A\u010B\x071\x02\x02\u010BF\x03\x02\x02\x02\u010C\u010D\x07\'\x02" +
		"\x02\u010DH\x03\x02\x02\x02\u010E\u010F\x07`\x02\x02\u010FJ\x03\x02\x02" +
		"\x02\u0110\u0111\x07%\x02\x02\u0111L\x03\x02\x02\x02\u0112\u0113\x07>" +
		"\x02\x02\u0113N\x03\x02\x02\x02\u0114\u0115\x07@\x02\x02\u0115P\x03\x02" +
		"\x02\x02\u0116\u0117\x07>\x02\x02\u0117\u0118\x07?\x02\x02\u0118R\x03" +
		"\x02\x02\x02\u0119\u011A\x07@\x02\x02\u011A\u011B\x07?\x02\x02\u011BT" +
		"\x03\x02\x02\x02\u011C\u011D\x07?\x02\x02\u011D\u011E\x07?\x02\x02\u011E" +
		"V\x03\x02\x02\x02\u011F\u0120\x07#\x02\x02\u0120\u0121\x07?\x02\x02\u0121" +
		"X\x03\x02\x02\x02\u0122\u0123\x07(\x02\x02\u0123\u0124\x07(\x02\x02\u0124" +
		"Z\x03\x02\x02\x02\u0125\u0126\x07~\x02\x02\u0126\u0127\x07~\x02\x02\u0127" +
		"\\\x03\x02\x02\x02\u0128\u0129\x07,\x02\x02\u0129\u012A\x07?\x02\x02\u012A" +
		"^\x03\x02\x02\x02\u012B\u012C\x071\x02\x02\u012C\u012D\x07?\x02\x02\u012D" +
		"`\x03\x02\x02\x02\u012E\u012F\x07\'\x02\x02\u012F\u0130\x07?\x02\x02\u0130" +
		"b\x03\x02\x02\x02\u0131\u0132\x07-\x02\x02\u0132\u0133\x07?\x02\x02\u0133" +
		"d\x03\x02\x02\x02\u0134\u0135\x07/\x02\x02\u0135\u0136\x07?\x02\x02\u0136" +
		"f\x03\x02\x02\x02\u0137\u0138\x07>\x02\x02\u0138\u0139\x07>\x02\x02\u0139" +
		"\u013A\x07?\x02\x02\u013Ah\x03\x02\x02\x02\u013B\u013C\x07@\x02\x02\u013C" +
		"\u013D\x07@\x02\x02\u013D\u013E\x07?\x02\x02\u013Ej\x03\x02\x02\x02\u013F" +
		"\u0140\x07@\x02\x02\u0140\u0141\x07@\x02\x02\u0141\u0142\x07@\x02\x02" +
		"\u0142\u0143\x07?\x02\x02\u0143l\x03\x02\x02\x02\u0144\u0145\x07(\x02" +
		"\x02\u0145\u0146\x07?\x02\x02\u0146n\x03\x02\x02\x02\u0147\u0148\x07`" +
		"\x02\x02\u0148\u0149\x07?\x02\x02\u0149p\x03\x02\x02\x02\u014A\u014B\x07" +
		"~\x02\x02\u014B\u014C\x07?\x02\x02\u014Cr\x03\x02\x02\x02\u014D\u014E" +
		"\x07^\x02\x02\u014Et\x03\x02\x02\x02\u014F\u0150\x07~\x02\x02\u0150v\x03" +
		"\x02\x02\x02\u0151\u0152\x07v\x02\x02\u0152\u0153\x07t\x02\x02\u0153\u0154" +
		"\x07w\x02\x02\u0154\u015B\x07g\x02\x02\u0155\u0156\x07h\x02\x02\u0156" +
		"\u0157\x07c\x02\x02\u0157\u0158\x07n\x02\x02\u0158\u0159\x07u\x02\x02" +
		"\u0159\u015B\x07g\x02\x02\u015A\u0151\x03\x02\x02\x02\u015A\u0155\x03" +
		"\x02\x02\x02\u015Bx\x03\x02\x02\x02\u015C\u015D\x05\x8BF\x02\u015Dz\x03" +
		"\x02\x02\x02\u015E\u015F\x05\x8BF\x02\u015F\u0160\x070\x02\x02\u0160\u0161" +
		"\x05\x8BF\x02\u0161|\x03\x02\x02\x02\u0162\u0166\x07)\x02\x02\u0163\u0165" +
		"\n\x03\x02\x02\u0164\u0163\x03\x02\x02\x02\u0165\u0168\x03\x02\x02\x02" +
		"\u0166\u0164\x03\x02\x02\x02\u0166\u0167\x03\x02\x02\x02\u0167\u0169\x03" +
		"\x02\x02\x02\u0168\u0166\x03\x02\x02\x02\u0169\u016A\x07)\x02\x02\u016A" +
		"~\x03\x02\x02\x02\u016B\u016C\x07h\x02\x02\u016C\u016D\x07)\x02\x02\u016D" +
		"\u0171\x03\x02\x02\x02\u016E\u0170\n\x03\x02\x02\u016F\u016E\x03\x02\x02" +
		"\x02\u0170\u0173\x03\x02\x02\x02\u0171\u016F\x03\x02\x02\x02\u0171\u0172" +
		"\x03\x02\x02\x02\u0172\u0174\x03\x02\x02\x02\u0173\u0171\x03\x02\x02\x02" +
		"\u0174\u0175\x07)\x02\x02\u0175\x80\x03\x02\x02\x02\u0176\u017A\t\x04" +
		"\x02\x02\u0177\u0179\t\x05\x02\x02\u0178\u0177\x03\x02\x02\x02\u0179\u017C" +
		"\x03\x02\x02\x02\u017A\u0178\x03\x02\x02\x02\u017A\u017B\x03\x02\x02\x02" +
		"\u017B\x82\x03\x02\x02\x02\u017C\u017A\x03\x02\x02\x02\u017D\u017E\x07" +
		"%\x02\x02\u017E\u017F\x07}\x02\x02\u017F\u0183\x03\x02\x02\x02\u0180\u0182" +
		"\v\x02\x02\x02\u0181\u0180\x03\x02\x02\x02\u0182\u0185\x03\x02\x02\x02" +
		"\u0183\u0184\x03\x02\x02\x02\u0183\u0181\x03\x02\x02\x02\u0184\u0186\x03" +
		"\x02\x02\x02\u0185\u0183\x03\x02\x02\x02\u0186\u0187\x07\x7F\x02\x02\u0187" +
		"\x84\x03\x02\x02\x02\u0188\u0189\x07\f\x02\x02\u0189\x86\x03\x02\x02\x02" +
		"\u018A\u018C\t\x06\x02\x02\u018B\u018A\x03\x02\x02\x02\u018C\u018D\x03" +
		"\x02\x02\x02\u018D\u018B\x03\x02\x02\x02\u018D\u018E\x03\x02\x02\x02\u018E" +
		"\u018F\x03\x02\x02\x02\u018F\u0190\bD\x02\x02\u0190\x88\x03\x02\x02\x02" +
		"\u0191\u0192\v\x02\x02\x02\u0192\u0193\x03\x02\x02\x02\u0193\u0194\bE" +
		"\x03\x02\u0194\x8A\x03\x02\x02\x02\u0195\u0197\x05\x8DG\x02\u0196\u0195" +
		"\x03\x02\x02\x02\u0197\u0198\x03\x02\x02\x02\u0198\u0196\x03\x02\x02\x02" +
		"\u0198\u0199\x03\x02\x02\x02\u0199\u01A2\x03\x02\x02\x02\u019A\u019C\x07" +
		"a\x02\x02\u019B\u019D\x05\x8DG\x02\u019C\u019B\x03\x02\x02\x02\u019D\u019E" +
		"\x03\x02\x02\x02\u019E\u019C\x03\x02\x02\x02\u019E\u019F\x03\x02\x02\x02" +
		"\u019F\u01A1\x03\x02\x02\x02\u01A0\u019A\x03\x02\x02\x02\u01A1\u01A4\x03" +
		"\x02\x02\x02\u01A2\u01A0\x03\x02\x02\x02\u01A2\u01A3\x03\x02\x02\x02\u01A3" +
		"\x8C\x03\x02\x02\x02\u01A4\u01A2\x03\x02\x02\x02\u01A5\u01A6\t\x07\x02" +
		"\x02\u01A6\x8E\x03\x02\x02\x02\x0E\x02\x95\xA3\u015A\u0166\u0171\u017A" +
		"\u0183\u018D\u0198\u019E\u01A2\x04\x02\x03\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

