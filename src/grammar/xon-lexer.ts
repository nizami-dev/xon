// Generated from XonLexer.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends Lexer {
	public static readonly MultiLineComment = 1;
	public static readonly SingleLineComment = 2;
	public static readonly If = 3;
	public static readonly Else = 4;
	public static readonly Loop = 5;
	public static readonly In = 6;
	public static readonly BitAnd = 7;
	public static readonly BitOr = 8;
	public static readonly BitXor = 9;
	public static readonly RightShiftArithmetic = 10;
	public static readonly LeftShiftArithmetic = 11;
	public static readonly RightShiftLogical = 12;
	public static readonly OpenBracket = 13;
	public static readonly CloseBracket = 14;
	public static readonly OpenParen = 15;
	public static readonly CloseParen = 16;
	public static readonly OpenBrace = 17;
	public static readonly CloseBrace = 18;
	public static readonly SemiColon = 19;
	public static readonly Comma = 20;
	public static readonly Assign = 21;
	public static readonly QuestionMark = 22;
	public static readonly Colon = 23;
	public static readonly Ellipsis = 24;
	public static readonly Dot = 25;
	public static readonly Plus = 26;
	public static readonly Minus = 27;
	public static readonly BitNot = 28;
	public static readonly Not = 29;
	public static readonly Multiply = 30;
	public static readonly Divide = 31;
	public static readonly Modulus = 32;
	public static readonly Pow = 33;
	public static readonly Sharp = 34;
	public static readonly LessThan = 35;
	public static readonly MoreThan = 36;
	public static readonly LessThanEquals = 37;
	public static readonly MoreThanEquals = 38;
	public static readonly Equals = 39;
	public static readonly NotEquals = 40;
	public static readonly And = 41;
	public static readonly Or = 42;
	public static readonly MultiplyAssign = 43;
	public static readonly DivideAssign = 44;
	public static readonly ModulusAssign = 45;
	public static readonly PlusAssign = 46;
	public static readonly MinusAssign = 47;
	public static readonly LeftShiftArithmeticAssign = 48;
	public static readonly RightShiftArithmeticAssign = 49;
	public static readonly RightShiftLogicalAssign = 50;
	public static readonly BitAndAssign = 51;
	public static readonly BitXorAssign = 52;
	public static readonly BitOrAssign = 53;
	public static readonly LambdaStart = 54;
	public static readonly Pipe = 55;
	public static readonly BooleanLiteral = 56;
	public static readonly DecimalLiteral = 57;
	public static readonly FloatLiteral = 58;
	public static readonly StringLiteral = 59;
	public static readonly CharacterLiteral = 60;
	public static readonly Preprocessor = 61;
	public static readonly LambdaParam = 62;
	public static readonly ID = 63;
	public static readonly WhiteSpaces = 64;
	public static readonly UnexpectedCharacter = 65;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"MultiLineComment", "SingleLineComment", "If", "Else", "Loop", "In", "BitAnd", 
		"BitOr", "BitXor", "RightShiftArithmetic", "LeftShiftArithmetic", "RightShiftLogical", 
		"OpenBracket", "CloseBracket", "OpenParen", "CloseParen", "OpenBrace", 
		"CloseBrace", "SemiColon", "Comma", "Assign", "QuestionMark", "Colon", 
		"Ellipsis", "Dot", "Plus", "Minus", "BitNot", "Not", "Multiply", "Divide", 
		"Modulus", "Pow", "Sharp", "LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", 
		"Equals", "NotEquals", "And", "Or", "MultiplyAssign", "DivideAssign", 
		"ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", 
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign", 
		"BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", "BooleanLiteral", 
		"DecimalLiteral", "FloatLiteral", "StringLiteral", "CharacterLiteral", 
		"Preprocessor", "LambdaParam", "ID", "WhiteSpaces", "UnexpectedCharacter", 
		"DECIMAL_NUMBER", "DECIMAL_DIGIT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'if'", "'else'", "'loop'", "'in'", "'and'", 
		"'or'", "'xor'", "'>>'", "'<<'", "'>>>'", "'['", "']'", "'('", "')'", 
		"'{'", "'}'", "';'", "','", "'='", "'?'", "':'", "'...'", "'.'", "'+'", 
		"'-'", "'~'", "'!'", "'*'", "'/'", "'%'", "'^'", "'#'", "'<'", "'>'", 
		"'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'*='", "'/='", "'%='", 
		"'+='", "'-='", "'<<='", "'>>='", "'>>>='", "'&='", "'^='", "'|='", "'\\'", 
		"'|'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "MultiLineComment", "SingleLineComment", "If", "Else", "Loop", 
		"In", "BitAnd", "BitOr", "BitXor", "RightShiftArithmetic", "LeftShiftArithmetic", 
		"RightShiftLogical", "OpenBracket", "CloseBracket", "OpenParen", "CloseParen", 
		"OpenBrace", "CloseBrace", "SemiColon", "Comma", "Assign", "QuestionMark", 
		"Colon", "Ellipsis", "Dot", "Plus", "Minus", "BitNot", "Not", "Multiply", 
		"Divide", "Modulus", "Pow", "Sharp", "LessThan", "MoreThan", "LessThanEquals", 
		"MoreThanEquals", "Equals", "NotEquals", "And", "Or", "MultiplyAssign", 
		"DivideAssign", "ModulusAssign", "PlusAssign", "MinusAssign", "LeftShiftArithmeticAssign", 
		"RightShiftArithmeticAssign", "RightShiftLogicalAssign", "BitAndAssign", 
		"BitXorAssign", "BitOrAssign", "LambdaStart", "Pipe", "BooleanLiteral", 
		"DecimalLiteral", "FloatLiteral", "StringLiteral", "CharacterLiteral", 
		"Preprocessor", "LambdaParam", "ID", "WhiteSpaces", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02C\u0184\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x07\x02\x8E\n\x02\f\x02\x0E\x02\x91\v\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03" +
		"\x9C\n\x03\f\x03\x0E\x03\x9F\v\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03" +
		"\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03" +
		"\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03" +
		"\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03" +
		"\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03" +
		"#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(" +
		"\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03" +
		"-\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x031\x03" +
		"1\x031\x032\x032\x032\x032\x033\x033\x033\x033\x033\x034\x034\x034\x03" +
		"5\x035\x035\x036\x036\x036\x037\x037\x038\x038\x039\x039\x039\x039\x03" +
		"9\x039\x039\x039\x039\x059\u013E\n9\x03:\x03:\x03;\x03;\x03;\x03;\x03" +
		"<\x03<\x07<\u0148\n<\f<\x0E<\u014B\v<\x03<\x03<\x03=\x03=\x03=\x03=\x03" +
		">\x03>\x03>\x03>\x07>\u0157\n>\f>\x0E>\u015A\v>\x03>\x03>\x03?\x03?\x03" +
		"?\x03@\x03@\x07@\u0163\n@\f@\x0E@\u0166\v@\x03A\x06A\u0169\nA\rA\x0EA" +
		"\u016A\x03A\x03A\x03B\x03B\x03B\x03B\x03C\x06C\u0174\nC\rC\x0EC\u0175" +
		"\x03C\x03C\x06C\u017A\nC\rC\x0EC\u017B\x07C\u017E\nC\fC\x0EC\u0181\vC" +
		"\x03D\x03D\x04\x8F\u0158\x02\x02E\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
		"\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
		"$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]" +
		"\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02" +
		";u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02C\x85\x02\x02" +
		"\x87\x02\x02\x03\x02\t\x05\x02\f\f\x0F\x0F\u202A\u202B\x05\x02\f\f\x0F" +
		"\x0F$$\x05\x02\f\f\x0F\x0F))\x05\x02C\\aac|\x06\x022;C\\aac|\x05\x02\v" +
		"\f\x0F\x0F\"\"\x03\x022;\x02\u018B\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02" +
		"+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02" +
		"\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02" +
		"o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02" +
		"\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02" +
		"\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02" +
		"\x02\x83\x03\x02\x02\x02\x03\x89\x03\x02\x02\x02\x05\x97\x03\x02\x02\x02" +
		"\x07\xA2\x03\x02\x02\x02\t\xA5\x03\x02\x02\x02\v\xAA\x03\x02\x02\x02\r" +
		"\xAF\x03\x02\x02\x02\x0F\xB2\x03\x02\x02\x02\x11\xB6\x03\x02\x02\x02\x13" +
		"\xB9\x03\x02\x02\x02\x15\xBD\x03\x02\x02\x02\x17\xC0\x03\x02\x02\x02\x19" +
		"\xC3\x03\x02\x02\x02\x1B\xC7\x03\x02\x02\x02\x1D\xC9\x03\x02\x02\x02\x1F" +
		"\xCB\x03\x02\x02\x02!\xCD\x03\x02\x02\x02#\xCF\x03\x02\x02\x02%\xD1\x03" +
		"\x02\x02\x02\'\xD3\x03\x02\x02\x02)\xD5\x03\x02\x02\x02+\xD7\x03\x02\x02" +
		"\x02-\xD9\x03\x02\x02\x02/\xDB\x03\x02\x02\x021\xDD\x03\x02\x02\x023\xE1" +
		"\x03\x02\x02\x025\xE3\x03\x02\x02\x027\xE5\x03\x02\x02\x029\xE7\x03\x02" +
		"\x02\x02;\xE9\x03\x02\x02\x02=\xEB\x03\x02\x02\x02?\xED\x03\x02\x02\x02" +
		"A\xEF\x03\x02\x02\x02C\xF1\x03\x02\x02\x02E\xF3\x03\x02\x02\x02G\xF5\x03" +
		"\x02\x02\x02I\xF7\x03\x02\x02\x02K\xF9\x03\x02\x02\x02M\xFC\x03\x02\x02" +
		"\x02O\xFF\x03\x02\x02\x02Q\u0102\x03\x02\x02\x02S\u0105\x03\x02\x02\x02" +
		"U\u0108\x03\x02\x02\x02W\u010B\x03\x02\x02\x02Y\u010E\x03\x02\x02\x02" +
		"[\u0111\x03\x02\x02\x02]\u0114\x03\x02\x02\x02_\u0117\x03\x02\x02\x02" +
		"a\u011A\x03\x02\x02\x02c\u011E\x03\x02\x02\x02e\u0122\x03\x02\x02\x02" +
		"g\u0127\x03\x02\x02\x02i\u012A\x03\x02\x02\x02k\u012D\x03\x02\x02\x02" +
		"m\u0130\x03\x02\x02\x02o\u0132\x03\x02\x02\x02q\u013D\x03\x02\x02\x02" +
		"s\u013F\x03\x02\x02\x02u\u0141\x03\x02\x02\x02w\u0145\x03\x02\x02\x02" +
		"y\u014E\x03\x02\x02\x02{\u0152\x03\x02\x02\x02}\u015D\x03\x02\x02\x02" +
		"\x7F\u0160\x03\x02\x02\x02\x81\u0168\x03\x02\x02\x02\x83\u016E\x03\x02" +
		"\x02\x02\x85\u0173\x03\x02\x02\x02\x87\u0182\x03\x02\x02\x02\x89\x8A\x07" +
		"1\x02\x02\x8A\x8B\x07,\x02\x02\x8B\x8F\x03\x02\x02\x02\x8C\x8E\v\x02\x02" +
		"\x02\x8D\x8C\x03\x02\x02\x02\x8E\x91\x03\x02\x02\x02\x8F\x90\x03\x02\x02" +
		"\x02\x8F\x8D\x03\x02\x02\x02\x90\x92\x03\x02\x02\x02\x91\x8F\x03\x02\x02" +
		"\x02\x92\x93\x07,\x02\x02\x93\x94\x071\x02\x02\x94\x95\x03\x02\x02\x02" +
		"\x95\x96\b\x02\x02\x02\x96\x04\x03\x02\x02\x02\x97\x98\x071\x02\x02\x98" +
		"\x99\x071\x02\x02\x99\x9D\x03\x02\x02\x02\x9A\x9C\n\x02\x02\x02\x9B\x9A" +
		"\x03\x02\x02\x02\x9C\x9F\x03\x02\x02\x02\x9D\x9B\x03\x02\x02\x02\x9D\x9E" +
		"\x03\x02\x02\x02\x9E\xA0\x03\x02\x02\x02\x9F\x9D\x03\x02\x02\x02\xA0\xA1" +
		"\b\x03\x02\x02\xA1\x06\x03\x02\x02\x02\xA2\xA3\x07k\x02\x02\xA3\xA4\x07" +
		"h\x02\x02\xA4\b\x03\x02\x02\x02\xA5\xA6\x07g\x02\x02\xA6\xA7\x07n\x02" +
		"\x02\xA7\xA8\x07u\x02\x02\xA8\xA9\x07g\x02\x02\xA9\n\x03\x02\x02\x02\xAA" +
		"\xAB\x07n\x02\x02\xAB\xAC\x07q\x02\x02\xAC\xAD\x07q\x02\x02\xAD\xAE\x07" +
		"r\x02\x02\xAE\f\x03\x02\x02\x02\xAF\xB0\x07k\x02\x02\xB0\xB1\x07p\x02" +
		"\x02\xB1\x0E\x03\x02\x02\x02\xB2\xB3\x07c\x02\x02\xB3\xB4\x07p\x02\x02" +
		"\xB4\xB5\x07f\x02\x02\xB5\x10\x03\x02\x02\x02\xB6\xB7\x07q\x02\x02\xB7" +
		"\xB8\x07t\x02\x02\xB8\x12\x03\x02\x02\x02\xB9\xBA\x07z\x02\x02\xBA\xBB" +
		"\x07q\x02\x02\xBB\xBC\x07t\x02\x02\xBC\x14\x03\x02\x02\x02\xBD\xBE\x07" +
		"@\x02\x02\xBE\xBF\x07@\x02\x02\xBF\x16\x03\x02\x02\x02\xC0\xC1\x07>\x02" +
		"\x02\xC1\xC2\x07>\x02\x02\xC2\x18\x03\x02\x02\x02\xC3\xC4\x07@\x02\x02" +
		"\xC4\xC5\x07@\x02\x02\xC5\xC6\x07@\x02\x02\xC6\x1A\x03\x02\x02\x02\xC7" +
		"\xC8\x07]\x02\x02\xC8\x1C\x03\x02\x02\x02\xC9\xCA\x07_\x02\x02\xCA\x1E" +
		"\x03\x02\x02\x02\xCB\xCC\x07*\x02\x02\xCC \x03\x02\x02\x02\xCD\xCE\x07" +
		"+\x02\x02\xCE\"\x03\x02\x02\x02\xCF\xD0\x07}\x02\x02\xD0$\x03\x02\x02" +
		"\x02\xD1\xD2\x07\x7F\x02\x02\xD2&\x03\x02\x02\x02\xD3\xD4\x07=\x02\x02" +
		"\xD4(\x03\x02\x02\x02\xD5\xD6\x07.\x02\x02\xD6*\x03\x02\x02\x02\xD7\xD8" +
		"\x07?\x02\x02\xD8,\x03\x02\x02\x02\xD9\xDA\x07A\x02\x02\xDA.\x03\x02\x02" +
		"\x02\xDB\xDC\x07<\x02\x02\xDC0\x03\x02\x02\x02\xDD\xDE\x070\x02\x02\xDE" +
		"\xDF\x070\x02\x02\xDF\xE0\x070\x02\x02\xE02\x03\x02\x02\x02\xE1\xE2\x07" +
		"0\x02\x02\xE24\x03\x02\x02\x02\xE3\xE4\x07-\x02\x02\xE46\x03\x02\x02\x02" +
		"\xE5\xE6\x07/\x02\x02\xE68\x03\x02\x02\x02\xE7\xE8\x07\x80\x02\x02\xE8" +
		":\x03\x02\x02\x02\xE9\xEA\x07#\x02\x02\xEA<\x03\x02\x02\x02\xEB\xEC\x07" +
		",\x02\x02\xEC>\x03\x02\x02\x02\xED\xEE\x071\x02\x02\xEE@\x03\x02\x02\x02" +
		"\xEF\xF0\x07\'\x02\x02\xF0B\x03\x02\x02\x02\xF1\xF2\x07`\x02\x02\xF2D" +
		"\x03\x02\x02\x02\xF3\xF4\x07%\x02\x02\xF4F\x03\x02\x02\x02\xF5\xF6\x07" +
		">\x02\x02\xF6H\x03\x02\x02\x02\xF7\xF8\x07@\x02\x02\xF8J\x03\x02\x02\x02" +
		"\xF9\xFA\x07>\x02\x02\xFA\xFB\x07?\x02\x02\xFBL\x03\x02\x02\x02\xFC\xFD" +
		"\x07@\x02\x02\xFD\xFE\x07?\x02\x02\xFEN\x03\x02\x02\x02\xFF\u0100\x07" +
		"?\x02\x02\u0100\u0101\x07?\x02\x02\u0101P\x03\x02\x02\x02\u0102\u0103" +
		"\x07#\x02\x02\u0103\u0104\x07?\x02\x02\u0104R\x03\x02\x02\x02\u0105\u0106" +
		"\x07(\x02\x02\u0106\u0107\x07(\x02\x02\u0107T\x03\x02\x02\x02\u0108\u0109" +
		"\x07~\x02\x02\u0109\u010A\x07~\x02\x02\u010AV\x03\x02\x02\x02\u010B\u010C" +
		"\x07,\x02\x02\u010C\u010D\x07?\x02\x02\u010DX\x03\x02\x02\x02\u010E\u010F" +
		"\x071\x02\x02\u010F\u0110\x07?\x02\x02\u0110Z\x03\x02\x02\x02\u0111\u0112" +
		"\x07\'\x02\x02\u0112\u0113\x07?\x02\x02\u0113\\\x03\x02\x02\x02\u0114" +
		"\u0115\x07-\x02\x02\u0115\u0116\x07?\x02\x02\u0116^\x03\x02\x02\x02\u0117" +
		"\u0118\x07/\x02\x02\u0118\u0119\x07?\x02\x02\u0119`\x03\x02\x02\x02\u011A" +
		"\u011B\x07>\x02\x02\u011B\u011C\x07>\x02\x02\u011C\u011D\x07?\x02\x02" +
		"\u011Db\x03\x02\x02\x02\u011E\u011F\x07@\x02\x02\u011F\u0120\x07@\x02" +
		"\x02\u0120\u0121\x07?\x02\x02\u0121d\x03\x02\x02\x02\u0122\u0123\x07@" +
		"\x02\x02\u0123\u0124\x07@\x02\x02\u0124\u0125\x07@\x02\x02\u0125\u0126" +
		"\x07?\x02\x02\u0126f\x03\x02\x02\x02\u0127\u0128\x07(\x02\x02\u0128\u0129" +
		"\x07?\x02\x02\u0129h\x03\x02\x02\x02\u012A\u012B\x07`\x02\x02\u012B\u012C" +
		"\x07?\x02\x02\u012Cj\x03\x02\x02\x02\u012D\u012E\x07~\x02\x02\u012E\u012F" +
		"\x07?\x02\x02\u012Fl\x03\x02\x02\x02\u0130\u0131\x07^\x02\x02\u0131n\x03" +
		"\x02\x02\x02\u0132\u0133\x07~\x02\x02\u0133p\x03\x02\x02\x02\u0134\u0135" +
		"\x07v\x02\x02\u0135\u0136\x07t\x02\x02\u0136\u0137\x07w\x02\x02\u0137" +
		"\u013E\x07g\x02\x02\u0138\u0139\x07h\x02\x02\u0139\u013A\x07c\x02\x02" +
		"\u013A\u013B\x07n\x02\x02\u013B\u013C\x07u\x02\x02\u013C\u013E\x07g\x02" +
		"\x02\u013D\u0134\x03\x02\x02\x02\u013D\u0138\x03\x02\x02\x02\u013Er\x03" +
		"\x02\x02\x02\u013F\u0140\x05\x85C\x02\u0140t\x03\x02\x02\x02\u0141\u0142" +
		"\x05\x85C\x02\u0142\u0143\x070\x02\x02\u0143\u0144\x05\x85C\x02\u0144" +
		"v\x03\x02\x02\x02\u0145\u0149\x07$\x02\x02\u0146\u0148\n\x03\x02\x02\u0147" +
		"\u0146\x03\x02\x02\x02\u0148\u014B\x03\x02\x02\x02\u0149\u0147\x03\x02" +
		"\x02\x02\u0149\u014A\x03\x02\x02\x02\u014A\u014C\x03\x02\x02\x02\u014B" +
		"\u0149\x03\x02\x02\x02\u014C\u014D\x07$\x02\x02\u014Dx\x03\x02\x02\x02" +
		"\u014E\u014F\x07)\x02\x02\u014F\u0150\n\x04\x02\x02\u0150\u0151\x07)\x02" +
		"\x02\u0151z\x03\x02\x02\x02\u0152\u0153\x07%\x02\x02\u0153\u0154\x07}" +
		"\x02\x02\u0154\u0158\x03\x02\x02\x02\u0155\u0157\v\x02\x02\x02\u0156\u0155" +
		"\x03\x02\x02\x02\u0157\u015A\x03\x02\x02\x02\u0158\u0159\x03\x02\x02\x02" +
		"\u0158\u0156\x03\x02\x02\x02\u0159\u015B\x03\x02\x02\x02\u015A\u0158\x03" +
		"\x02\x02\x02\u015B\u015C\x07\x7F\x02\x02\u015C|\x03\x02\x02\x02\u015D" +
		"\u015E\x07&\x02\x02\u015E\u015F\x05\x87D\x02\u015F~\x03\x02\x02\x02\u0160" +
		"\u0164\t\x05\x02\x02\u0161\u0163\t\x06\x02\x02\u0162\u0161\x03\x02\x02" +
		"\x02\u0163\u0166\x03\x02\x02\x02\u0164\u0162\x03\x02\x02\x02\u0164\u0165" +
		"\x03\x02\x02\x02\u0165\x80\x03\x02\x02\x02\u0166\u0164\x03\x02\x02\x02" +
		"\u0167\u0169\t\x07\x02\x02\u0168\u0167\x03\x02\x02\x02\u0169\u016A\x03" +
		"\x02\x02\x02\u016A\u0168\x03\x02\x02\x02\u016A\u016B\x03\x02\x02\x02\u016B" +
		"\u016C\x03\x02\x02\x02\u016C\u016D\bA\x02\x02\u016D\x82\x03\x02\x02\x02" +
		"\u016E\u016F\v\x02\x02\x02\u016F\u0170\x03\x02\x02\x02\u0170\u0171\bB" +
		"\x03\x02\u0171\x84\x03\x02\x02\x02\u0172\u0174\x05\x87D\x02\u0173\u0172" +
		"\x03\x02\x02\x02\u0174\u0175\x03\x02\x02\x02\u0175\u0173\x03\x02\x02\x02" +
		"\u0175\u0176\x03\x02\x02\x02\u0176\u017F\x03\x02\x02\x02\u0177\u0179\x07" +
		"a\x02\x02\u0178\u017A\x05\x87D\x02\u0179\u0178\x03\x02\x02\x02\u017A\u017B" +
		"\x03\x02\x02\x02\u017B\u0179\x03\x02\x02\x02\u017B\u017C\x03\x02\x02\x02" +
		"\u017C\u017E\x03\x02\x02\x02\u017D\u0177\x03\x02\x02\x02\u017E\u0181\x03" +
		"\x02\x02\x02\u017F\u017D\x03\x02\x02\x02\u017F\u0180\x03\x02\x02\x02\u0180" +
		"\x86\x03\x02\x02\x02\u0181\u017F\x03\x02\x02\x02\u0182\u0183\t\b\x02\x02" +
		"\u0183\x88\x03\x02\x02\x02\r\x02\x8F\x9D\u013D\u0149\u0158\u0164\u016A" +
		"\u0175\u017B\u017F\x04\x02\x03\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

