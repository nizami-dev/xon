// Generated from XonLexer.g4 by ANTLR 4.9.0-SNAPSHOT

 
    import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly OPEN = 3;
	public static readonly CLOSE = 4;
	public static readonly ACTUAL = 5;
	public static readonly BREAK = 6;
	public static readonly CONTINUE = 7;
	public static readonly DO = 8;
	public static readonly ELSE = 9;
	public static readonly EXPECT = 10;
	public static readonly EXPORT = 11;
	public static readonly FOR = 12;
	public static readonly IF = 13;
	public static readonly RETURN = 14;
	public static readonly WHILE = 15;
	public static readonly COMMA = 16;
	public static readonly ASSIGN = 17;
	public static readonly QUESTION = 18;
	public static readonly COLON = 19;
	public static readonly META = 20;
	public static readonly DOT = 21;
	public static readonly LAMBDA = 22;
	public static readonly FLOAT_LITERAL = 23;
	public static readonly INTEGER_LITERAL = 24;
	public static readonly STRING_LITERAL = 25;
	public static readonly PREPROCESSOR = 26;
	public static readonly ID = 27;
	public static readonly OP = 28;
	public static readonly NL = 29;
	public static readonly LINE_COMMENT = 30;
	public static readonly WS = 31;
	public static readonly BLOCK_COMMENT = 32;
	public static readonly LINE_JOINING = 33;
	public static readonly UNEXPECTED = 34;
	public static readonly ERROR = 2;
	public static readonly WHITESPACE = 3;
	public static readonly COMMENT_CHANNEL = 4;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR", "WHITESPACE", "COMMENT_CHANNEL",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"OPEN", "CLOSE", "ACTUAL", "BREAK", "CONTINUE", "DO", "ELSE", "EXPECT", 
		"EXPORT", "FOR", "IF", "RETURN", "WHILE", "COMMA", "ASSIGN", "QUESTION", 
		"COLON", "META", "DOT", "LAMBDA", "FLOAT_LITERAL", "INTEGER_LITERAL", 
		"STRING_LITERAL", "PREPROCESSOR", "ID", "OP", "NL", "LINE_COMMENT", "WS", 
		"BLOCK_COMMENT", "LINE_JOINING", "UNEXPECTED", "Radix", "DigitNumber", 
		"AlphabetNumber",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "'actual'", "'break'", 
		"'continue'", "'do'", "'else'", "'expect'", "'export'", "'for'", "'if'", 
		"'return'", "'while'", "','", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "OPEN", "CLOSE", "ACTUAL", "BREAK", "CONTINUE", 
		"DO", "ELSE", "EXPECT", "EXPORT", "FOR", "IF", "RETURN", "WHILE", "COMMA", 
		"ASSIGN", "QUESTION", "COLON", "META", "DOT", "LAMBDA", "FLOAT_LITERAL", 
		"INTEGER_LITERAL", "STRING_LITERAL", "PREPROCESSOR", "ID", "OP", "NL", 
		"LINE_COMMENT", "WS", "BLOCK_COMMENT", "LINE_JOINING", "UNEXPECTED",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 0:
			this.OPEN_action(_localctx, actionIndex);
			break;

		case 1:
			this.CLOSE_action(_localctx, actionIndex);
			break;

		case 26:
			this.NL_action(_localctx, actionIndex);
			break;
		}
	}
	private OPEN_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.opened++;
			break;
		}
	}
	private CLOSE_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened--;
			break;
		}
	}
	private NL_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.handleLineBreak()
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\u015E\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x05\x11" +
		"\x96\n\x11\x03\x11\x03\x11\x03\x12\x03\x12\x05\x12\x9C\n\x12\x03\x12\x03" +
		"\x12\x03\x12\x05\x12\xA1\n\x12\x03\x13\x03\x13\x05\x13\xA5\n\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x05\x13\xAC\n\x13\x03\x14\x03\x14\x05" +
		"\x14\xB0\n\x14\x03\x14\x03\x14\x03\x14\x05\x14\xB5\n\x14\x03\x15\x03\x15" +
		"\x05\x15\xB9\n\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x05\x15\xC0" +
		"\n\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x05\x16\xCB\n\x16\x03\x17\x03\x17\x03\x17\x03\x17\x05\x17\xD1" +
		"\n\x17\x03\x18\x03\x18\x03\x18\x03\x18\x07\x18\xD7\n\x18\f\x18\x0E\x18" +
		"\xDA\v\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03" +
		"\x19\x07\x19\xE4\n\x19\f\x19\x0E\x19\xE7\v\x19\x03\x19\x03\x19\x07\x19" +
		"\xEB\n\x19\f\x19\x0E\x19\xEE\v\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x07" +
		"\x1A\xF4\n\x1A\f\x1A\x0E\x1A\xF7\v\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1B\x03\x1B\x05\x1B\u0109\n\x1B\x03\x1C\x03\x1C\x07\x1C\u010D" +
		"\n\x1C\f\x1C\x0E\x1C\u0110\v\x1C\x06\x1C\u0112\n\x1C\r\x1C\x0E\x1C\u0113" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x07\x1D\u011C\n\x1D\f" +
		"\x1D\x0E\x1D\u011F\v\x1D\x03\x1E\x06\x1E\u0122\n\x1E\r\x1E\x0E\x1E\u0123" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x07\x1F\u012D" +
		"\n\x1F\f\x1F\x0E\x1F\u0130\v\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03 \x03 \x07 \u0139\n \f \x0E \u013C\v \x03 \x05 \u013F\n \x03 \x03" +
		" \x05 \u0143\n \x03 \x03 \x03!\x03!\x03!\x03!\x03\"\x03\"\x05\"\u014D" +
		"\n\"\x03\"\x03\"\x03#\x03#\x07#\u0153\n#\f#\x0E#\u0156\v#\x03$\x03$\x07" +
		"$\u015A\n$\f$\x0E$\u015D\v$\x05\xE5\xEC\u012E\x02\x02%\x03\x02\x05\x05" +
		"\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r\x02\n\x0F\x02\v\x11\x02\f\x13\x02" +
		"\r\x15\x02\x0E\x17\x02\x0F\x19\x02\x10\x1B\x02\x11\x1D\x02\x12\x1F\x02" +
		"\x13!\x02\x14#\x02\x15%\x02\x16\'\x02\x17)\x02\x18+\x02\x19-\x02\x1A/" +
		"\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E7\x02\x1F9\x02 ;\x02!=\x02\"?\x02#" +
		"A\x02$C\x02\x02E\x02\x02G\x02\x02\x03\x02\x0F\x05\x02**]]}}\x05\x02++" +
		"__\x7F\x7F\x03\x02))\n\x02))^^ddhhppttvvxx\x05\x02C\\aac|\x06\x022;C\\" +
		"aac|\x06\x02##\'(,`~~\x04\x02\f\f\x0F\x0F\x04\x02\v\v\"\"\x03\x022;\x04" +
		"\x02ZZzz\x04\x022;aa\x05\x022;C\\c|\x02\u0189\x02\x03\x03\x02\x02\x02" +
		"\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02" +
		"\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02" +
		"\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02" +
		"\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02" +
		"\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02" +
		"#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03" +
		"\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02" +
		"\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02" +
		"7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02" +
		"\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x03I\x03\x02\x02\x02" +
		"\x05L\x03\x02\x02\x02\x07O\x03\x02\x02\x02\tV\x03\x02\x02\x02\v\\\x03" +
		"\x02\x02\x02\re\x03\x02\x02\x02\x0Fh\x03\x02\x02\x02\x11m\x03\x02\x02" +
		"\x02\x13t\x03\x02\x02\x02\x15{\x03\x02\x02\x02\x17\x7F\x03\x02\x02\x02" +
		"\x19\x82\x03\x02\x02\x02\x1B\x89\x03\x02\x02\x02\x1D\x8F\x03\x02\x02\x02" +
		"\x1F\x91\x03\x02\x02\x02!\x95\x03\x02\x02\x02#\x9B\x03\x02\x02\x02%\xA4" +
		"\x03\x02\x02\x02\'\xAF\x03\x02\x02\x02)\xB8\x03\x02\x02\x02+\xCA\x03\x02" +
		"\x02\x02-\xD0\x03\x02\x02\x02/\xD2\x03\x02\x02\x021\xDD\x03\x02\x02\x02" +
		"3\xF1\x03\x02\x02\x025\u0108\x03\x02\x02\x027\u0111\x03\x02\x02\x029\u0117" +
		"\x03\x02\x02\x02;\u0121\x03\x02\x02\x02=\u0127\x03\x02\x02\x02?\u0136" +
		"\x03\x02\x02\x02A\u0146\x03\x02\x02\x02C\u014A\x03\x02\x02\x02E\u0150" +
		"\x03\x02\x02\x02G\u0157\x03\x02\x02\x02IJ\t\x02\x02\x02JK\b\x02\x02\x02" +
		"K\x04\x03\x02\x02\x02LM\t\x03\x02\x02MN\b\x03\x03\x02N\x06\x03\x02\x02" +
		"\x02OP\x07c\x02\x02PQ\x07e\x02\x02QR\x07v\x02\x02RS\x07w\x02\x02ST\x07" +
		"c\x02\x02TU\x07n\x02\x02U\b\x03\x02\x02\x02VW\x07d\x02\x02WX\x07t\x02" +
		"\x02XY\x07g\x02\x02YZ\x07c\x02\x02Z[\x07m\x02\x02[\n\x03\x02\x02\x02\\" +
		"]\x07e\x02\x02]^\x07q\x02\x02^_\x07p\x02\x02_`\x07v\x02\x02`a\x07k\x02" +
		"\x02ab\x07p\x02\x02bc\x07w\x02\x02cd\x07g\x02\x02d\f\x03\x02\x02\x02e" +
		"f\x07f\x02\x02fg\x07q\x02\x02g\x0E\x03\x02\x02\x02hi\x07g\x02\x02ij\x07" +
		"n\x02\x02jk\x07u\x02\x02kl\x07g\x02\x02l\x10\x03\x02\x02\x02mn\x07g\x02" +
		"\x02no\x07z\x02\x02op\x07r\x02\x02pq\x07g\x02\x02qr\x07e\x02\x02rs\x07" +
		"v\x02\x02s\x12\x03\x02\x02\x02tu\x07g\x02\x02uv\x07z\x02\x02vw\x07r\x02" +
		"\x02wx\x07q\x02\x02xy\x07t\x02\x02yz\x07v\x02\x02z\x14\x03\x02\x02\x02" +
		"{|\x07h\x02\x02|}\x07q\x02\x02}~\x07t\x02\x02~\x16\x03\x02\x02\x02\x7F" +
		"\x80\x07k\x02\x02\x80\x81\x07h\x02\x02\x81\x18\x03\x02\x02\x02\x82\x83" +
		"\x07t\x02\x02\x83\x84\x07g\x02\x02\x84\x85\x07v\x02\x02\x85\x86\x07w\x02" +
		"\x02\x86\x87\x07t\x02\x02\x87\x88\x07p\x02\x02\x88\x1A\x03\x02\x02\x02" +
		"\x89\x8A\x07y\x02\x02\x8A\x8B\x07j\x02\x02\x8B\x8C\x07k\x02\x02\x8C\x8D" +
		"\x07n\x02\x02\x8D\x8E\x07g\x02\x02\x8E\x1C\x03\x02\x02\x02\x8F\x90\x07" +
		".\x02\x02\x90\x1E\x03\x02\x02\x02\x91\x92\x07?\x02\x02\x92 \x03\x02\x02" +
		"\x02\x93\x96\x057\x1C\x02\x94\x96\x05;\x1E\x02\x95\x93\x03\x02\x02\x02" +
		"\x95\x94\x03\x02\x02\x02\x95\x96\x03\x02\x02\x02\x96\x97\x03\x02\x02\x02" +
		"\x97\x98\x07A\x02\x02\x98\"\x03\x02\x02\x02\x99\x9C\x057\x1C\x02\x9A\x9C" +
		"\x05;\x1E\x02\x9B\x99\x03\x02\x02\x02\x9B\x9A\x03\x02\x02\x02\x9B\x9C" +
		"\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D\xA0\x07<\x02\x02\x9E\xA1" +
		"\x057\x1C\x02\x9F\xA1\x05;\x1E\x02\xA0\x9E\x03\x02\x02\x02\xA0\x9F\x03" +
		"\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1$\x03\x02\x02\x02\xA2\xA5\x05" +
		"7\x1C\x02\xA3\xA5\x05;\x1E\x02\xA4\xA2\x03\x02\x02\x02\xA4\xA3\x03\x02" +
		"\x02\x02\xA4\xA5\x03\x02\x02\x02\xA5\xA6\x03\x02\x02\x02\xA6\xA7\x07<" +
		"\x02\x02\xA7\xA8\x07<\x02\x02\xA8\xAB\x03\x02\x02\x02\xA9\xAC\x057\x1C" +
		"\x02\xAA\xAC\x05;\x1E\x02\xAB\xA9\x03\x02\x02\x02\xAB\xAA\x03\x02\x02" +
		"\x02\xAB\xAC\x03\x02\x02\x02\xAC&\x03\x02\x02\x02\xAD\xB0\x057\x1C\x02" +
		"\xAE\xB0\x05;\x1E\x02\xAF\xAD\x03\x02\x02\x02\xAF\xAE\x03\x02\x02\x02" +
		"\xAF\xB0\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xB4\x070\x02\x02" +
		"\xB2\xB5\x057\x1C\x02\xB3\xB5\x05;\x1E\x02\xB4\xB2\x03\x02\x02\x02\xB4" +
		"\xB3\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5(\x03\x02\x02\x02\xB6" +
		"\xB9\x057\x1C\x02\xB7\xB9\x05;\x1E\x02\xB8\xB6\x03\x02\x02\x02\xB8\xB7" +
		"\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xBA\xBB" +
		"\x07?\x02\x02\xBB\xBC\x07@\x02\x02\xBC\xBF\x03\x02\x02\x02\xBD\xC0\x05" +
		"7\x1C\x02\xBE\xC0\x05;\x1E\x02\xBF\xBD\x03\x02\x02\x02\xBF\xBE\x03\x02" +
		"\x02\x02\xBF\xC0\x03\x02\x02\x02\xC0*\x03\x02\x02\x02\xC1\xC2\x05C\"\x02" +
		"\xC2\xC3\x05G$\x02\xC3\xC4\x070\x02\x02\xC4\xC5\x05G$\x02\xC5\xCB\x03" +
		"\x02\x02\x02\xC6\xC7\x05E#\x02\xC7\xC8\x070\x02\x02\xC8\xC9\x05E#\x02" +
		"\xC9\xCB\x03\x02\x02\x02\xCA\xC1\x03\x02\x02\x02\xCA\xC6\x03\x02\x02\x02" +
		"\xCB,\x03\x02\x02\x02\xCC\xCD\x05C\"\x02\xCD\xCE\x05G$\x02\xCE\xD1\x03" +
		"\x02\x02\x02\xCF\xD1\x05E#\x02\xD0\xCC\x03\x02\x02\x02\xD0\xCF\x03\x02" +
		"\x02\x02\xD1.\x03\x02\x02\x02\xD2\xD8\x07)\x02\x02\xD3\xD7\n\x04\x02\x02" +
		"\xD4\xD5\x07^\x02\x02\xD5\xD7\t\x05\x02\x02\xD6\xD3\x03\x02\x02\x02\xD6" +
		"\xD4\x03\x02\x02\x02\xD7\xDA\x03\x02\x02\x02\xD8\xD6\x03\x02\x02\x02\xD8" +
		"\xD9\x03\x02\x02\x02\xD9\xDB\x03\x02\x02\x02\xDA\xD8\x03\x02\x02\x02\xDB" +
		"\xDC\x07)\x02\x02\xDC0\x03\x02\x02\x02\xDD\xDE\x07%\x02\x02\xDE\xDF\x07" +
		"}\x02\x02\xDF\xEC\x03\x02\x02\x02\xE0\xEB\x051\x19\x02\xE1\xE5\x07}\x02" +
		"\x02\xE2\xE4\v\x02\x02\x02\xE3\xE2\x03\x02\x02\x02\xE4\xE7\x03\x02\x02" +
		"\x02\xE5\xE6\x03\x02\x02\x02\xE5\xE3\x03\x02\x02\x02\xE6\xE8\x03\x02\x02" +
		"\x02\xE7\xE5\x03\x02\x02\x02\xE8\xEB\x07\x7F\x02\x02\xE9\xEB\v\x02\x02" +
		"\x02\xEA\xE0\x03\x02\x02\x02\xEA\xE1\x03\x02\x02\x02\xEA\xE9\x03\x02\x02" +
		"\x02\xEB\xEE\x03\x02\x02\x02\xEC\xED\x03\x02\x02\x02\xEC\xEA\x03\x02\x02" +
		"\x02\xED\xEF\x03\x02\x02\x02\xEE\xEC\x03\x02\x02\x02\xEF\xF0\x07\x7F\x02" +
		"\x02\xF02\x03\x02\x02\x02\xF1\xF5\t\x06\x02\x02\xF2\xF4\t\x07\x02\x02" +
		"\xF3\xF2\x03\x02\x02\x02\xF4\xF7\x03\x02\x02\x02\xF5\xF3\x03\x02\x02\x02" +
		"\xF5\xF6\x03\x02\x02\x02\xF64\x03\x02\x02\x02\xF7\xF5\x03\x02\x02\x02" +
		"\xF8\u0109\t\b\x02\x02\xF9\xFA\x070\x02\x02\xFA\u0109\x070\x02\x02\xFB" +
		"\xFC\x070\x02\x02\xFC\xFD\x070\x02\x02\xFD\u0109\x070\x02\x02\xFE\u0109" +
		"\x07>\x02\x02\xFF\u0100\x07>\x02\x02\u0100\u0109\x07?\x02\x02\u0101\u0102" +
		"\x07@\x02\x02\u0102\u0109\x07?\x02\x02\u0103\u0109\x07@\x02\x02\u0104" +
		"\u0105\x07?\x02\x02\u0105\u0109\x07?\x02\x02\u0106\u0107\x07#\x02\x02" +
		"\u0107\u0109\x07?\x02\x02\u0108\xF8\x03\x02\x02\x02\u0108\xF9\x03\x02" +
		"\x02\x02\u0108\xFB\x03\x02\x02\x02\u0108\xFE\x03\x02\x02\x02\u0108\xFF" +
		"\x03\x02\x02\x02\u0108\u0101\x03\x02\x02\x02\u0108\u0103\x03\x02\x02\x02" +
		"\u0108\u0104\x03\x02\x02\x02\u0108\u0106\x03\x02\x02\x02\u01096\x03\x02" +
		"\x02\x02\u010A\u010E\t\t\x02\x02\u010B\u010D\x05;\x1E\x02\u010C\u010B" +
		"\x03\x02\x02\x02\u010D\u0110\x03\x02\x02\x02\u010E\u010C\x03\x02\x02\x02" +
		"\u010E\u010F\x03\x02\x02\x02\u010F\u0112\x03\x02\x02\x02\u0110\u010E\x03" +
		"\x02\x02\x02\u0111\u010A\x03\x02\x02\x02\u0112\u0113\x03\x02\x02\x02\u0113" +
		"\u0111\x03\x02\x02\x02\u0113\u0114\x03\x02\x02\x02\u0114\u0115\x03\x02" +
		"\x02\x02\u0115\u0116\b\x1C\x04\x02\u01168\x03\x02\x02\x02\u0117\u0118" +
		"\x07/\x02\x02\u0118\u0119\x07/\x02\x02\u0119\u011D\x03\x02\x02\x02\u011A" +
		"\u011C\n\t\x02\x02\u011B\u011A\x03\x02\x02\x02\u011C\u011F\x03\x02\x02" +
		"\x02\u011D\u011B\x03\x02\x02\x02\u011D\u011E\x03\x02\x02\x02\u011E:\x03" +
		"\x02\x02\x02\u011F\u011D\x03\x02\x02\x02\u0120\u0122\t\n\x02\x02\u0121" +
		"\u0120\x03\x02\x02\x02\u0122\u0123\x03\x02\x02\x02\u0123\u0121\x03\x02" +
		"\x02\x02\u0123\u0124\x03\x02\x02\x02\u0124\u0125\x03\x02\x02\x02\u0125" +
		"\u0126\b\x1E\x05\x02\u0126<\x03\x02\x02\x02\u0127\u0128\x071\x02\x02\u0128" +
		"\u0129\x07,\x02\x02\u0129\u012E\x03\x02\x02\x02\u012A\u012D\x05=\x1F\x02" +
		"\u012B\u012D\v\x02\x02\x02\u012C\u012A\x03\x02\x02\x02\u012C\u012B\x03" +
		"\x02\x02\x02\u012D\u0130\x03\x02\x02\x02\u012E\u012F\x03\x02\x02\x02\u012E" +
		"\u012C\x03\x02\x02\x02\u012F\u0131\x03\x02\x02\x02\u0130\u012E\x03\x02" +
		"\x02\x02\u0131\u0132\x07,\x02\x02\u0132\u0133\x071\x02\x02\u0133\u0134" +
		"\x03\x02\x02\x02\u0134\u0135\b\x1F\x06\x02\u0135>\x03\x02\x02\x02\u0136" +
		"\u013A\x07^\x02\x02\u0137\u0139\t\n\x02\x02\u0138\u0137\x03\x02\x02\x02" +
		"\u0139\u013C\x03\x02\x02\x02\u013A\u0138\x03\x02\x02\x02\u013A\u013B\x03" +
		"\x02\x02\x02\u013B\u0142\x03\x02\x02\x02\u013C\u013A\x03\x02\x02\x02\u013D" +
		"\u013F\x07\x0F\x02\x02\u013E\u013D\x03\x02\x02\x02\u013E\u013F\x03\x02" +
		"\x02\x02\u013F\u0140\x03\x02\x02\x02\u0140\u0143\x07\f\x02\x02\u0141\u0143" +
		"\x04\x0E\x0F\x02\u0142\u013E\x03\x02\x02\x02\u0142\u0141\x03\x02\x02\x02" +
		"\u0143\u0144\x03\x02\x02\x02\u0144\u0145\b \x07\x02\u0145@\x03\x02\x02" +
		"\x02\u0146\u0147\v\x02\x02\x02\u0147\u0148\x03\x02\x02\x02\u0148\u0149" +
		"\b!\b\x02\u0149B\x03\x02\x02\x02\u014A\u014C\t\v\x02\x02\u014B\u014D\t" +
		"\v\x02\x02\u014C\u014B\x03\x02\x02\x02\u014C\u014D\x03\x02\x02\x02\u014D" +
		"\u014E\x03\x02\x02\x02\u014E\u014F\t\f\x02\x02\u014FD\x03\x02\x02\x02" +
		"\u0150\u0154\t\v\x02\x02\u0151\u0153\t\r\x02\x02\u0152\u0151\x03\x02\x02" +
		"\x02\u0153\u0156\x03\x02\x02\x02\u0154\u0152\x03\x02\x02\x02\u0154\u0155" +
		"\x03\x02\x02\x02\u0155F\x03\x02\x02\x02\u0156\u0154\x03\x02\x02\x02\u0157" +
		"\u015B\t\x0E\x02\x02\u0158\u015A\t\x07\x02\x02\u0159\u0158\x03\x02\x02" +
		"\x02\u015A\u015D\x03\x02\x02\x02\u015B\u0159\x03\x02\x02\x02\u015B\u015C" +
		"\x03\x02\x02\x02\u015CH\x03\x02\x02\x02\u015D\u015B\x03\x02\x02\x02#\x02" +
		"\x95\x9B\xA0\xA4\xAB\xAF\xB4\xB8\xBF\xCA\xD0\xD6\xD8\xE5\xEA\xEC\xF5\u0108" +
		"\u010E\u0113\u011D\u0123\u012C\u012E\u013A\u013E\u0142\u014C\u0152\u0154" +
		"\u0159\u015B\t\x03\x02\x02\x03\x03\x03\x03\x1C\x04\x02\x05\x02\x02\x06" +
		"\x02\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

