// Generated from XonLexer.g4 by ANTLR 4.9.0-SNAPSHOT

 
    import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly OPEN = 3;
	public static readonly CLOSE = 4;
	public static readonly BREAK = 5;
	public static readonly CONTINUE = 6;
	public static readonly DO = 7;
	public static readonly ELSE = 8;
	public static readonly EXPORT = 9;
	public static readonly FOR = 10;
	public static readonly IF = 11;
	public static readonly IMPORT = 12;
	public static readonly IN = 13;
	public static readonly RETURN = 14;
	public static readonly WHILE = 15;
	public static readonly COMMA = 16;
	public static readonly ASSIGN = 17;
	public static readonly QUESTION = 18;
	public static readonly COLON = 19;
	public static readonly META = 20;
	public static readonly DOT = 21;
	public static readonly LAMBDA = 22;
	public static readonly FLOAT = 23;
	public static readonly INTEGER = 24;
	public static readonly STRING = 25;
	public static readonly PREPROCESSOR = 26;
	public static readonly ID = 27;
	public static readonly OP = 28;
	public static readonly NL = 29;
	public static readonly LINE_COMMENT = 30;
	public static readonly WS = 31;
	public static readonly BLOCK_COMMENT = 32;
	public static readonly LINE_JOINING = 33;
	public static readonly UNEXPECTED = 34;
	public static readonly ERROR = 2;
	public static readonly WHITESPACE = 3;
	public static readonly COMMENT_CHANNEL = 4;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR", "WHITESPACE", "COMMENT_CHANNEL",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"OPEN", "CLOSE", "BREAK", "CONTINUE", "DO", "ELSE", "EXPORT", "FOR", "IF", 
		"IMPORT", "IN", "RETURN", "WHILE", "COMMA", "ASSIGN", "QUESTION", "COLON", 
		"META", "DOT", "LAMBDA", "FLOAT", "INTEGER", "STRING", "PREPROCESSOR", 
		"ID", "OP", "NL", "LINE_COMMENT", "WS", "BLOCK_COMMENT", "LINE_JOINING", 
		"UNEXPECTED", "Radix", "DigitNumber", "AlphabetNumber",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "'break'", "'continue'", 
		"'do'", "'else'", "'export'", "'for'", "'if'", "'import'", "'in'", "'return'", 
		"'while'", "','", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "OPEN", "CLOSE", "BREAK", "CONTINUE", "DO", 
		"ELSE", "EXPORT", "FOR", "IF", "IMPORT", "IN", "RETURN", "WHILE", "COMMA", 
		"ASSIGN", "QUESTION", "COLON", "META", "DOT", "LAMBDA", "FLOAT", "INTEGER", 
		"STRING", "PREPROCESSOR", "ID", "OP", "NL", "LINE_COMMENT", "WS", "BLOCK_COMMENT", 
		"LINE_JOINING", "UNEXPECTED",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 0:
			this.OPEN_action(_localctx, actionIndex);
			break;

		case 1:
			this.CLOSE_action(_localctx, actionIndex);
			break;

		case 26:
			this.NL_action(_localctx, actionIndex);
			break;
		}
	}
	private OPEN_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.opened++;
			break;
		}
	}
	private CLOSE_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened--;
			break;
		}
	}
	private NL_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.handleLineBreak()
			break;
		}
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\u015A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x05\x11\x92\n\x11\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x05\x12\x98\n\x12\x03\x12\x03\x12\x03\x12\x05\x12\x9D\n\x12" +
		"\x03\x13\x03\x13\x05\x13\xA1\n\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03" +
		"\x13\x05\x13\xA8\n\x13\x03\x14\x03\x14\x05\x14\xAC\n\x14\x03\x14\x03\x14" +
		"\x03\x14\x05\x14\xB1\n\x14\x03\x15\x03\x15\x05\x15\xB5\n\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x03\x15\x05\x15\xBC\n\x15\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\xC7\n\x16\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x05\x17\xCD\n\x17\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x07\x18\xD3\n\x18\f\x18\x0E\x18\xD6\v\x18\x03\x18\x03\x18\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x07\x19\xE0\n\x19\f\x19\x0E" +
		"\x19\xE3\v\x19\x03\x19\x03\x19\x07\x19\xE7\n\x19\f\x19\x0E\x19\xEA\v\x19" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x07\x1A\xF0\n\x1A\f\x1A\x0E\x1A\xF3\v" +
		"\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x05\x1B\u0105" +
		"\n\x1B\x03\x1C\x03\x1C\x07\x1C\u0109\n\x1C\f\x1C\x0E\x1C\u010C\v\x1C\x06" +
		"\x1C\u010E\n\x1C\r\x1C\x0E\x1C\u010F\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1D\x07\x1D\u0118\n\x1D\f\x1D\x0E\x1D\u011B\v\x1D\x03\x1E\x06" +
		"\x1E\u011E\n\x1E\r\x1E\x0E\x1E\u011F\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x07\x1F\u0129\n\x1F\f\x1F\x0E\x1F\u012C\v\x1F\x03" +
		"\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x07 \u0135\n \f \x0E \u0138" +
		"\v \x03 \x05 \u013B\n \x03 \x03 \x05 \u013F\n \x03 \x03 \x03!\x03!\x03" +
		"!\x03!\x03\"\x03\"\x05\"\u0149\n\"\x03\"\x03\"\x03#\x03#\x07#\u014F\n" +
		"#\f#\x0E#\u0152\v#\x03$\x03$\x07$\u0156\n$\f$\x0E$\u0159\v$\x05\xE1\xE8" +
		"\u012A\x02\x02%\x03\x02\x05\x05\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r" +
		"\x02\n\x0F\x02\v\x11\x02\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F\x19\x02\x10" +
		"\x1B\x02\x11\x1D\x02\x12\x1F\x02\x13!\x02\x14#\x02\x15%\x02\x16\'\x02" +
		"\x17)\x02\x18+\x02\x19-\x02\x1A/\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E7\x02" +
		"\x1F9\x02 ;\x02!=\x02\"?\x02#A\x02$C\x02\x02E\x02\x02G\x02\x02\x03\x02" +
		"\x0F\x05\x02**]]}}\x05\x02++__\x7F\x7F\x03\x02))\n\x02))^^ddhhppttvvx" +
		"x\x05\x02C\\aac|\x06\x022;C\\aac|\x06\x02##\'(,`~~\x04\x02\f\f\x0F\x0F" +
		"\x04\x02\v\v\"\"\x03\x022;\x04\x02ZZzz\x04\x022;aa\x05\x022;C\\c|\x02" +
		"\u0185\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02" +
		"\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02" +
		"\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02" +
		"\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02" +
		"\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02" +
		";\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02" +
		"\x02\x02\x03I\x03\x02\x02\x02\x05L\x03\x02\x02\x02\x07O\x03\x02\x02\x02" +
		"\tU\x03\x02\x02\x02\v^\x03\x02\x02\x02\ra\x03\x02\x02\x02\x0Ff\x03\x02" +
		"\x02\x02\x11m\x03\x02\x02\x02\x13q\x03\x02\x02\x02\x15t\x03\x02\x02\x02" +
		"\x17{\x03\x02\x02\x02\x19~\x03\x02\x02\x02\x1B\x85\x03\x02\x02\x02\x1D" +
		"\x8B\x03\x02\x02\x02\x1F\x8D\x03\x02\x02\x02!\x91\x03\x02\x02\x02#\x97" +
		"\x03\x02\x02\x02%\xA0\x03\x02\x02\x02\'\xAB\x03\x02\x02\x02)\xB4\x03\x02" +
		"\x02\x02+\xC6\x03\x02\x02\x02-\xCC\x03\x02\x02\x02/\xCE\x03\x02\x02\x02" +
		"1\xD9\x03\x02\x02\x023\xED\x03\x02\x02\x025\u0104\x03\x02\x02\x027\u010D" +
		"\x03\x02\x02\x029\u0113\x03\x02\x02\x02;\u011D\x03\x02\x02\x02=\u0123" +
		"\x03\x02\x02\x02?\u0132\x03\x02\x02\x02A\u0142\x03\x02\x02\x02C\u0146" +
		"\x03\x02\x02\x02E\u014C\x03\x02\x02\x02G\u0153\x03\x02\x02\x02IJ\t\x02" +
		"\x02\x02JK\b\x02\x02\x02K\x04\x03\x02\x02\x02LM\t\x03\x02\x02MN\b\x03" +
		"\x03\x02N\x06\x03\x02\x02\x02OP\x07d\x02\x02PQ\x07t\x02\x02QR\x07g\x02" +
		"\x02RS\x07c\x02\x02ST\x07m\x02\x02T\b\x03\x02\x02\x02UV\x07e\x02\x02V" +
		"W\x07q\x02\x02WX\x07p\x02\x02XY\x07v\x02\x02YZ\x07k\x02\x02Z[\x07p\x02" +
		"\x02[\\\x07w\x02\x02\\]\x07g\x02\x02]\n\x03\x02\x02\x02^_\x07f\x02\x02" +
		"_`\x07q\x02\x02`\f\x03\x02\x02\x02ab\x07g\x02\x02bc\x07n\x02\x02cd\x07" +
		"u\x02\x02de\x07g\x02\x02e\x0E\x03\x02\x02\x02fg\x07g\x02\x02gh\x07z\x02" +
		"\x02hi\x07r\x02\x02ij\x07q\x02\x02jk\x07t\x02\x02kl\x07v\x02\x02l\x10" +
		"\x03\x02\x02\x02mn\x07h\x02\x02no\x07q\x02\x02op\x07t\x02\x02p\x12\x03" +
		"\x02\x02\x02qr\x07k\x02\x02rs\x07h\x02\x02s\x14\x03\x02\x02\x02tu\x07" +
		"k\x02\x02uv\x07o\x02\x02vw\x07r\x02\x02wx\x07q\x02\x02xy\x07t\x02\x02" +
		"yz\x07v\x02\x02z\x16\x03\x02\x02\x02{|\x07k\x02\x02|}\x07p\x02\x02}\x18" +
		"\x03\x02\x02\x02~\x7F\x07t\x02\x02\x7F\x80\x07g\x02\x02\x80\x81\x07v\x02" +
		"\x02\x81\x82\x07w\x02\x02\x82\x83\x07t\x02\x02\x83\x84\x07p\x02\x02\x84" +
		"\x1A\x03\x02\x02\x02\x85\x86\x07y\x02\x02\x86\x87\x07j\x02\x02\x87\x88" +
		"\x07k\x02\x02\x88\x89\x07n\x02\x02\x89\x8A\x07g\x02\x02\x8A\x1C\x03\x02" +
		"\x02\x02\x8B\x8C\x07.\x02\x02\x8C\x1E\x03\x02\x02\x02\x8D\x8E\x07?\x02" +
		"\x02\x8E \x03\x02\x02\x02\x8F\x92\x057\x1C\x02\x90\x92\x05;\x1E\x02\x91" +
		"\x8F\x03\x02\x02\x02\x91\x90\x03\x02\x02\x02\x91\x92\x03\x02\x02\x02\x92" +
		"\x93\x03\x02\x02\x02\x93\x94\x07A\x02\x02\x94\"\x03\x02\x02\x02\x95\x98" +
		"\x057\x1C\x02\x96\x98\x05;\x1E\x02\x97\x95\x03\x02\x02\x02\x97\x96\x03" +
		"\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x99\x03\x02\x02\x02\x99\x9C\x07" +
		"<\x02\x02\x9A\x9D\x057\x1C\x02\x9B\x9D\x05;\x1E\x02\x9C\x9A\x03\x02\x02" +
		"\x02\x9C\x9B\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D$\x03\x02\x02" +
		"\x02\x9E\xA1\x057\x1C\x02\x9F\xA1\x05;\x1E\x02\xA0\x9E\x03\x02\x02\x02" +
		"\xA0\x9F\x03\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02" +
		"\xA2\xA3\x07<\x02\x02\xA3\xA4\x07<\x02\x02\xA4\xA7\x03\x02\x02\x02\xA5" +
		"\xA8\x057\x1C\x02\xA6\xA8\x05;\x1E\x02\xA7\xA5\x03\x02\x02\x02\xA7\xA6" +
		"\x03\x02\x02\x02\xA7\xA8\x03\x02\x02\x02\xA8&\x03\x02\x02\x02\xA9\xAC" +
		"\x057\x1C\x02\xAA\xAC\x05;\x1E\x02\xAB\xA9\x03\x02\x02\x02\xAB\xAA\x03" +
		"\x02\x02\x02\xAB\xAC\x03\x02\x02\x02\xAC\xAD\x03\x02\x02\x02\xAD\xB0\x07" +
		"0\x02\x02\xAE\xB1\x057\x1C\x02\xAF\xB1\x05;\x1E\x02\xB0\xAE\x03\x02\x02" +
		"\x02\xB0\xAF\x03\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1(\x03\x02\x02" +
		"\x02\xB2\xB5\x057\x1C\x02\xB3\xB5\x05;\x1E\x02\xB4\xB2\x03\x02\x02\x02" +
		"\xB4\xB3\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5\xB6\x03\x02\x02\x02" +
		"\xB6\xB7\x07?\x02\x02\xB7\xB8\x07@\x02\x02\xB8\xBB\x03\x02\x02\x02\xB9" +
		"\xBC\x057\x1C\x02\xBA\xBC\x05;\x1E\x02\xBB\xB9\x03\x02\x02\x02\xBB\xBA" +
		"\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC*\x03\x02\x02\x02\xBD\xBE" +
		"\x05C\"\x02\xBE\xBF\x05G$\x02\xBF\xC0\x070\x02\x02\xC0\xC1\x05G$\x02\xC1" +
		"\xC7\x03\x02\x02\x02\xC2\xC3\x05E#\x02\xC3\xC4\x070\x02\x02\xC4\xC5\x05" +
		"E#\x02\xC5\xC7\x03\x02\x02\x02\xC6\xBD\x03\x02\x02\x02\xC6\xC2\x03\x02" +
		"\x02\x02\xC7,\x03\x02\x02\x02\xC8\xC9\x05C\"\x02\xC9\xCA\x05G$\x02\xCA" +
		"\xCD\x03\x02\x02\x02\xCB\xCD\x05E#\x02\xCC\xC8\x03\x02\x02\x02\xCC\xCB" +
		"\x03\x02\x02\x02\xCD.\x03\x02\x02\x02\xCE\xD4\x07)\x02\x02\xCF\xD3\n\x04" +
		"\x02\x02\xD0\xD1\x07^\x02\x02\xD1\xD3\t\x05\x02\x02\xD2\xCF\x03\x02\x02" +
		"\x02\xD2\xD0\x03\x02\x02\x02\xD3\xD6\x03\x02\x02\x02\xD4\xD2\x03\x02\x02" +
		"\x02\xD4\xD5\x03\x02\x02\x02\xD5\xD7\x03\x02\x02\x02\xD6\xD4\x03\x02\x02" +
		"\x02\xD7\xD8\x07)\x02\x02\xD80\x03\x02\x02\x02\xD9\xDA\x07%\x02\x02\xDA" +
		"\xDB\x07}\x02\x02\xDB\xE8\x03\x02\x02\x02\xDC\xE7\x051\x19\x02\xDD\xE1" +
		"\x07}\x02\x02\xDE\xE0\v\x02\x02\x02\xDF\xDE\x03\x02\x02\x02\xE0\xE3\x03" +
		"\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE1\xDF\x03\x02\x02\x02\xE2\xE4\x03" +
		"\x02\x02\x02\xE3\xE1\x03\x02\x02\x02\xE4\xE7\x07\x7F\x02\x02\xE5\xE7\v" +
		"\x02\x02\x02\xE6\xDC\x03\x02\x02\x02\xE6\xDD\x03\x02\x02\x02\xE6\xE5\x03" +
		"\x02\x02\x02\xE7\xEA\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE8\xE6\x03" +
		"\x02\x02\x02\xE9\xEB\x03\x02\x02\x02\xEA\xE8\x03\x02\x02\x02\xEB\xEC\x07" +
		"\x7F\x02\x02\xEC2\x03\x02\x02\x02\xED\xF1\t\x06\x02\x02\xEE\xF0\t\x07" +
		"\x02\x02\xEF\xEE\x03\x02\x02\x02\xF0\xF3\x03\x02\x02\x02\xF1\xEF\x03\x02" +
		"\x02\x02\xF1\xF2\x03\x02\x02\x02\xF24\x03\x02\x02\x02\xF3\xF1\x03\x02" +
		"\x02\x02\xF4\u0105\t\b\x02\x02\xF5\xF6\x070\x02\x02\xF6\u0105\x070\x02" +
		"\x02\xF7\xF8\x070\x02\x02\xF8\xF9\x070\x02\x02\xF9\u0105\x070\x02\x02" +
		"\xFA\u0105\x07>\x02\x02\xFB\xFC\x07>\x02\x02\xFC\u0105\x07?\x02\x02\xFD" +
		"\xFE\x07@\x02\x02\xFE\u0105\x07?\x02\x02\xFF\u0105\x07@\x02\x02\u0100" +
		"\u0101\x07?\x02\x02\u0101\u0105\x07?\x02\x02\u0102\u0103\x07#\x02\x02" +
		"\u0103\u0105\x07?\x02\x02\u0104\xF4\x03\x02\x02\x02\u0104\xF5\x03\x02" +
		"\x02\x02\u0104\xF7\x03\x02\x02\x02\u0104\xFA\x03\x02\x02\x02\u0104\xFB" +
		"\x03\x02\x02\x02\u0104\xFD\x03\x02\x02\x02\u0104\xFF\x03\x02\x02\x02\u0104" +
		"\u0100\x03\x02\x02\x02\u0104\u0102\x03\x02\x02\x02\u01056\x03\x02\x02" +
		"\x02\u0106\u010A\t\t\x02\x02\u0107\u0109\x05;\x1E\x02\u0108\u0107\x03" +
		"\x02\x02\x02\u0109\u010C\x03\x02\x02\x02\u010A\u0108\x03\x02\x02\x02\u010A" +
		"\u010B\x03\x02\x02\x02\u010B\u010E\x03\x02\x02\x02\u010C\u010A\x03\x02" +
		"\x02\x02\u010D\u0106\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F" +
		"\u010D\x03\x02\x02\x02\u010F\u0110\x03\x02\x02\x02\u0110\u0111\x03\x02" +
		"\x02\x02\u0111\u0112\b\x1C\x04\x02\u01128\x03\x02\x02\x02\u0113\u0114" +
		"\x07/\x02\x02\u0114\u0115\x07/\x02\x02\u0115\u0119\x03\x02\x02\x02\u0116" +
		"\u0118\n\t\x02\x02\u0117\u0116\x03\x02\x02\x02\u0118\u011B\x03\x02\x02" +
		"\x02\u0119\u0117\x03\x02\x02\x02\u0119\u011A\x03\x02\x02\x02\u011A:\x03" +
		"\x02\x02\x02\u011B\u0119\x03\x02\x02\x02\u011C\u011E\t\n\x02\x02\u011D" +
		"\u011C\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F\u011D\x03\x02" +
		"\x02\x02\u011F\u0120\x03\x02\x02\x02\u0120\u0121\x03\x02\x02\x02\u0121" +
		"\u0122\b\x1E\x05\x02\u0122<\x03\x02\x02\x02\u0123\u0124\x071\x02\x02\u0124" +
		"\u0125\x07,\x02\x02\u0125\u012A\x03\x02\x02\x02\u0126\u0129\x05=\x1F\x02" +
		"\u0127\u0129\v\x02\x02\x02\u0128\u0126\x03\x02\x02\x02\u0128\u0127\x03" +
		"\x02\x02\x02\u0129\u012C\x03\x02\x02\x02\u012A\u012B\x03\x02\x02\x02\u012A" +
		"\u0128\x03\x02\x02\x02\u012B\u012D\x03\x02\x02\x02\u012C\u012A\x03\x02" +
		"\x02\x02\u012D\u012E\x07,\x02\x02\u012E\u012F\x071\x02\x02\u012F\u0130" +
		"\x03\x02\x02\x02\u0130\u0131\b\x1F\x06\x02\u0131>\x03\x02\x02\x02\u0132" +
		"\u0136\x07^\x02\x02\u0133\u0135\t\n\x02\x02\u0134\u0133\x03\x02\x02\x02" +
		"\u0135\u0138\x03\x02\x02\x02\u0136\u0134\x03\x02\x02\x02\u0136\u0137\x03" +
		"\x02\x02\x02\u0137\u013E\x03\x02\x02\x02\u0138\u0136\x03\x02\x02\x02\u0139" +
		"\u013B\x07\x0F\x02\x02\u013A\u0139\x03\x02\x02\x02\u013A\u013B\x03\x02" +
		"\x02\x02\u013B\u013C\x03\x02\x02\x02\u013C\u013F\x07\f\x02\x02\u013D\u013F" +
		"\x04\x0E\x0F\x02\u013E\u013A\x03\x02\x02\x02\u013E\u013D\x03\x02\x02\x02" +
		"\u013F\u0140\x03\x02\x02\x02\u0140\u0141\b \x07\x02\u0141@\x03\x02\x02" +
		"\x02\u0142\u0143\v\x02\x02\x02\u0143\u0144\x03\x02\x02\x02\u0144\u0145" +
		"\b!\b\x02\u0145B\x03\x02\x02\x02\u0146\u0148\t\v\x02\x02\u0147\u0149\t" +
		"\v\x02\x02\u0148\u0147\x03\x02\x02\x02\u0148\u0149\x03\x02\x02\x02\u0149" +
		"\u014A\x03\x02\x02\x02\u014A\u014B\t\f\x02\x02\u014BD\x03\x02\x02\x02" +
		"\u014C\u0150\t\v\x02\x02\u014D\u014F\t\r\x02\x02\u014E\u014D\x03\x02\x02" +
		"\x02\u014F\u0152\x03\x02\x02\x02\u0150\u014E\x03\x02\x02\x02\u0150\u0151" +
		"\x03\x02\x02\x02\u0151F\x03\x02\x02\x02\u0152\u0150\x03\x02\x02\x02\u0153" +
		"\u0157\t\x0E\x02\x02\u0154\u0156\t\x07\x02\x02\u0155\u0154\x03\x02\x02" +
		"\x02\u0156\u0159\x03\x02\x02\x02\u0157\u0155\x03\x02\x02\x02\u0157\u0158" +
		"\x03\x02\x02\x02\u0158H\x03\x02\x02\x02\u0159\u0157\x03\x02\x02\x02#\x02" +
		"\x91\x97\x9C\xA0\xA7\xAB\xB0\xB4\xBB\xC6\xCC\xD2\xD4\xE1\xE6\xE8\xF1\u0104" +
		"\u010A\u010F\u0119\u011F\u0128\u012A\u0136\u013A\u013E\u0148\u014E\u0150" +
		"\u0155\u0157\t\x03\x02\x02\x03\x03\x03\x03\x1C\x04\x02\x05\x02\x02\x06" +
		"\x02\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

