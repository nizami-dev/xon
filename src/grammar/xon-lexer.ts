// Generated from XonLexer.g4 by ANTLR 4.9.0-SNAPSHOT

 
// @ts-nocheck
import { XonLexerBase } from "./xon-lexer-base";


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XonLexer extends XonLexerBase {
	public static readonly INDENT = 1;
	public static readonly DEDENT = 2;
	public static readonly Infix = 3;
	public static readonly Is = 4;
	public static readonly As = 5;
	public static readonly If = 6;
	public static readonly Else = 7;
	public static readonly ElseIf = 8;
	public static readonly Loop = 9;
	public static readonly In = 10;
	public static readonly Break = 11;
	public static readonly Return = 12;
	public static readonly Preprocessor = 13;
	public static readonly LineBreak = 14;
	public static readonly OpenBracket = 15;
	public static readonly CloseBracket = 16;
	public static readonly OpenParen = 17;
	public static readonly CloseParen = 18;
	public static readonly OpenBrace = 19;
	public static readonly CloseBrace = 20;
	public static readonly Comma = 21;
	public static readonly Assign = 22;
	public static readonly Question = 23;
	public static readonly Colon = 24;
	public static readonly Dot = 25;
	public static readonly Plus = 26;
	public static readonly Minus = 27;
	public static readonly Exclamation = 28;
	public static readonly Asterisk = 29;
	public static readonly Slash = 30;
	public static readonly Modulo = 31;
	public static readonly Caret = 32;
	public static readonly Hash = 33;
	public static readonly LessThan = 34;
	public static readonly MoreThan = 35;
	public static readonly LessThanEquals = 36;
	public static readonly MoreThanEquals = 37;
	public static readonly Equals = 38;
	public static readonly NotEquals = 39;
	public static readonly And = 40;
	public static readonly Or = 41;
	public static readonly AsteriskAssign = 42;
	public static readonly SlashAssign = 43;
	public static readonly PercentAssign = 44;
	public static readonly PlusAssign = 45;
	public static readonly MinusAssign = 46;
	public static readonly Pipe = 47;
	public static readonly LambdaStart = 48;
	public static readonly Range = 49;
	public static readonly Elipsis = 50;
	public static readonly BooleanLiteral = 51;
	public static readonly FloatLiteral = 52;
	public static readonly IntegerLiteral = 53;
	public static readonly CharLiteral = 54;
	public static readonly StringLiteral = 55;
	public static readonly StringFormatStart = 56;
	public static readonly StringFormatMiddle = 57;
	public static readonly StringFormatEnd = 58;
	public static readonly ID = 59;
	public static readonly Skip = 60;
	public static readonly UnexpectedCharacter = 61;
	public static readonly ERROR = 2;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "ERROR",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"Infix", "Is", "As", "If", "Else", "ElseIf", "Loop", "In", "Break", "Return", 
		"Preprocessor", "LineBreak", "OpenBracket", "CloseBracket", "OpenParen", 
		"CloseParen", "OpenBrace", "CloseBrace", "Comma", "Assign", "Question", 
		"Colon", "Dot", "Plus", "Minus", "Exclamation", "Asterisk", "Slash", "Modulo", 
		"Caret", "Hash", "LessThan", "MoreThan", "LessThanEquals", "MoreThanEquals", 
		"Equals", "NotEquals", "And", "Or", "AsteriskAssign", "SlashAssign", "PercentAssign", 
		"PlusAssign", "MinusAssign", "Pipe", "LambdaStart", "Range", "Elipsis", 
		"BooleanLiteral", "FloatLiteral", "IntegerLiteral", "CharLiteral", "StringLiteral", 
		"StringFormatStart", "StringFormatMiddle", "StringFormatEnd", "ID", "Skip", 
		"UnexpectedCharacter", "SPACES", "MULTI_LINE_COMMENT", "SINGLE_LINE_COMMENT", 
		"LINE_JOINING", "ALPHABET_NUMBER", "DIGIT_NUMBER", "STRING_CHARACTER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'infix'", "'is'", "'as'", "'if'", "'else'", 
		"'elif'", "'loop'", "'in'", "'break'", "'return'", undefined, undefined, 
		"'['", "']'", "'('", "')'", "'{'", "'}'", "','", "'='", "'?'", "':'", 
		"'.'", "'+'", "'-'", "'!'", "'*'", "'/'", "'%'", "'^'", "'#'", "'<'", 
		"'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'*='", "'/='", 
		"'%='", "'+='", "'-='", "'|'", "'\\'", "'..'", "'...'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "INDENT", "DEDENT", "Infix", "Is", "As", "If", "Else", "ElseIf", 
		"Loop", "In", "Break", "Return", "Preprocessor", "LineBreak", "OpenBracket", 
		"CloseBracket", "OpenParen", "CloseParen", "OpenBrace", "CloseBrace", 
		"Comma", "Assign", "Question", "Colon", "Dot", "Plus", "Minus", "Exclamation", 
		"Asterisk", "Slash", "Modulo", "Caret", "Hash", "LessThan", "MoreThan", 
		"LessThanEquals", "MoreThanEquals", "Equals", "NotEquals", "And", "Or", 
		"AsteriskAssign", "SlashAssign", "PercentAssign", "PlusAssign", "MinusAssign", 
		"Pipe", "LambdaStart", "Range", "Elipsis", "BooleanLiteral", "FloatLiteral", 
		"IntegerLiteral", "CharLiteral", "StringLiteral", "StringFormatStart", 
		"StringFormatMiddle", "StringFormatEnd", "ID", "Skip", "UnexpectedCharacter",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XonLexer._LITERAL_NAMES, XonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return XonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XonLexer.modeNames; }

	// @Override
	public action(_localctx: RuleContext, ruleIndex: number, actionIndex: number): void {
		switch (ruleIndex) {
		case 11:
			this.LineBreak_action(_localctx, actionIndex);
			break;

		case 12:
			this.OpenBracket_action(_localctx, actionIndex);
			break;

		case 13:
			this.CloseBracket_action(_localctx, actionIndex);
			break;

		case 14:
			this.OpenParen_action(_localctx, actionIndex);
			break;

		case 15:
			this.CloseParen_action(_localctx, actionIndex);
			break;

		case 16:
			this.OpenBrace_action(_localctx, actionIndex);
			break;

		case 17:
			this.CloseBrace_action(_localctx, actionIndex);
			break;
		}
	}
	private LineBreak_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 0:
			this.handleLineBreak()
			break;
		}
	}
	private OpenBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 1:
			this.opened++;
			break;
		}
	}
	private CloseBracket_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 2:
			this.opened--;
			break;
		}
	}
	private OpenParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 3:
			this.opened++;
			break;
		}
	}
	private CloseParen_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 4:
			this.opened--;
			break;
		}
	}
	private OpenBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 5:
			this.opened++;
			break;
		}
	}
	private CloseBrace_action(_localctx: RuleContext, actionIndex: number): void {
		switch (actionIndex) {
		case 6:
			this.opened--;
			break;
		}
	}
	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 11:
			return this.LineBreak_sempred(_localctx, predIndex);
		}
		return true;
	}
	private LineBreak_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.atStartOfInput();
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02?\u01D4\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03" +
		"\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03" +
		"\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x07\f\xBA\n\f\f\f\x0E\f\xBD" +
		"\v\f\x03\f\x03\f\x03\r\x03\r\x03\r\x05\r\xC4\n\r\x03\r\x03\r\x05\r\xC8" +
		"\n\r\x03\r\x05\r\xCB\n\r\x05\r\xCD\n\r\x03\r\x03\r\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03" +
		"\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03" +
		"#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03\'" +
		"\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03" +
		",\x03,\x03-\x03-\x03-\x03.\x03.\x03/\x03/\x030\x030\x030\x031\x031\x03" +
		"1\x031\x032\x032\x032\x032\x032\x032\x032\x032\x032\x052\u0136\n2\x03" +
		"3\x033\x053\u013A\n3\x033\x033\x033\x033\x033\x033\x033\x033\x033\x05" +
		"3\u0145\n3\x034\x034\x054\u0149\n4\x034\x034\x034\x054\u014E\n4\x035\x03" +
		"5\x035\x035\x036\x036\x076\u0156\n6\f6\x0E6\u0159\v6\x036\x036\x037\x03" +
		"7\x077\u015F\n7\f7\x0E7\u0162\v7\x037\x037\x038\x038\x078\u0168\n8\f8" +
		"\x0E8\u016B\v8\x038\x038\x039\x039\x079\u0171\n9\f9\x0E9\u0174\v9\x03" +
		"9\x039\x03:\x03:\x07:\u017A\n:\f:\x0E:\u017D\v:\x03;\x03;\x03;\x03;\x05" +
		";\u0183\n;\x03;\x03;\x03<\x03<\x03<\x03<\x03=\x06=\u018C\n=\r=\x0E=\u018D" +
		"\x03>\x03>\x03>\x03>\x07>\u0194\n>\f>\x0E>\u0197\v>\x03>\x03>\x03>\x03" +
		"?\x03?\x03?\x03?\x07?\u01A0\n?\f?\x0E?\u01A3\v?\x03@\x03@\x05@\u01A7\n" +
		"@\x03@\x05@\u01AA\n@\x03@\x03@\x05@\u01AE\n@\x03A\x06A\u01B1\nA\rA\x0E" +
		"A\u01B2\x03A\x03A\x06A\u01B7\nA\rA\x0EA\u01B8\x07A\u01BB\nA\fA\x0EA\u01BE" +
		"\vA\x03B\x06B\u01C1\nB\rB\x0EB\u01C2\x03B\x03B\x06B\u01C7\nB\rB\x0EB\u01C8" +
		"\x07B\u01CB\nB\fB\x0EB\u01CE\vB\x03C\x03C\x03C\x05C\u01D3\nC\x04\xBB\u0195" +
		"\x02\x02D\x03\x02\x05\x05\x02\x06\x07\x02\x07\t\x02\b\v\x02\t\r\x02\n" +
		"\x0F\x02\v\x11\x02\f\x13\x02\r\x15\x02\x0E\x17\x02\x0F\x19\x02\x10\x1B" +
		"\x02\x11\x1D\x02\x12\x1F\x02\x13!\x02\x14#\x02\x15%\x02\x16\'\x02\x17" +
		")\x02\x18+\x02\x19-\x02\x1A/\x02\x1B1\x02\x1C3\x02\x1D5\x02\x1E7\x02\x1F" +
		"9\x02 ;\x02!=\x02\"?\x02#A\x02$C\x02%E\x02&G\x02\'I\x02(K\x02)M\x02*O" +
		"\x02+Q\x02,S\x02-U\x02.W\x02/Y\x020[\x021]\x022_\x023a\x024c\x025e\x02" +
		"6g\x027i\x028k\x029m\x02:o\x02;q\x02<s\x02=u\x02>w\x02?y\x02\x02{\x02" +
		"\x02}\x02\x02\x7F\x02\x02\x81\x02\x02\x83\x02\x02\x85\x02\x02\x03\x02" +
		"\f\x03\x022;\x04\x02ZZzz\x03\x02))\x05\x02C\\aac|\x06\x022;C\\aac|\x04" +
		"\x02\v\v\"\"\x04\x02\f\f\x0F\x0F\x05\x022;C\\c|\x04\x02$$}}\v\x02$$^^" +
		"ddhhppttvvxx}}\x02\u01EC\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02" +
		"\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03" +
		"\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02" +
		"\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02" +
		"U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02" +
		"\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02" +
		"\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03" +
		"\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02" +
		"\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02" +
		"w\x03\x02\x02\x02\x03\x87\x03\x02\x02\x02\x05\x8D\x03\x02\x02\x02\x07" +
		"\x90\x03\x02\x02\x02\t\x93\x03\x02\x02\x02\v\x96\x03\x02\x02\x02\r\x9B" +
		"\x03\x02\x02\x02\x0F\xA0\x03\x02\x02\x02\x11\xA5\x03\x02\x02\x02\x13\xA8" +
		"\x03\x02\x02\x02\x15\xAE\x03\x02\x02\x02\x17\xB5\x03\x02\x02\x02\x19\xCC" +
		"\x03\x02\x02\x02\x1B\xD0\x03\x02\x02\x02\x1D\xD3\x03\x02\x02\x02\x1F\xD6" +
		"\x03\x02\x02\x02!\xD9\x03\x02\x02\x02#\xDC\x03\x02\x02\x02%\xDF\x03\x02" +
		"\x02\x02\'\xE2\x03\x02\x02\x02)\xE4\x03\x02\x02\x02+\xE6\x03\x02\x02\x02" +
		"-\xE8\x03\x02\x02\x02/\xEA\x03\x02\x02\x021\xEC\x03\x02\x02\x023\xEE\x03" +
		"\x02\x02\x025\xF0\x03\x02\x02\x027\xF2\x03\x02\x02\x029\xF4\x03\x02\x02" +
		"\x02;\xF6\x03\x02\x02\x02=\xF8\x03\x02\x02\x02?\xFA\x03\x02\x02\x02A\xFC" +
		"\x03\x02\x02\x02C\xFE\x03\x02\x02\x02E\u0100\x03\x02\x02\x02G\u0103\x03" +
		"\x02\x02\x02I\u0106\x03\x02\x02\x02K\u0109\x03\x02\x02\x02M\u010C\x03" +
		"\x02\x02\x02O\u010F\x03\x02\x02\x02Q\u0112\x03\x02\x02\x02S\u0115\x03" +
		"\x02\x02\x02U\u0118\x03\x02\x02\x02W\u011B\x03\x02\x02\x02Y\u011E\x03" +
		"\x02\x02\x02[\u0121\x03\x02\x02\x02]\u0123\x03\x02\x02\x02_\u0125\x03" +
		"\x02\x02\x02a\u0128\x03\x02\x02\x02c\u0135\x03\x02\x02\x02e\u0144\x03" +
		"\x02\x02\x02g\u014D\x03\x02\x02\x02i\u014F\x03\x02\x02\x02k\u0153\x03" +
		"\x02\x02\x02m\u015C\x03\x02\x02\x02o\u0165\x03\x02\x02\x02q\u016E\x03" +
		"\x02\x02\x02s\u0177\x03\x02\x02\x02u\u0182\x03\x02\x02\x02w\u0186\x03" +
		"\x02\x02\x02y\u018B\x03\x02\x02\x02{\u018F\x03\x02\x02\x02}\u019B\x03" +
		"\x02\x02\x02\x7F\u01A4\x03\x02\x02\x02\x81\u01B0\x03\x02\x02\x02\x83\u01C0" +
		"\x03\x02\x02\x02\x85\u01D2\x03\x02\x02\x02\x87\x88\x07k\x02\x02\x88\x89" +
		"\x07p\x02\x02\x89\x8A\x07h\x02\x02\x8A\x8B\x07k\x02\x02\x8B\x8C\x07z\x02" +
		"\x02\x8C\x04\x03\x02\x02\x02\x8D\x8E\x07k\x02\x02\x8E\x8F\x07u\x02\x02" +
		"\x8F\x06\x03\x02\x02\x02\x90\x91\x07c\x02\x02\x91\x92\x07u\x02\x02\x92" +
		"\b\x03\x02\x02\x02\x93\x94\x07k\x02\x02\x94\x95\x07h\x02\x02\x95\n\x03" +
		"\x02\x02\x02\x96\x97\x07g\x02\x02\x97\x98\x07n\x02\x02\x98\x99\x07u\x02" +
		"\x02\x99\x9A\x07g\x02\x02\x9A\f\x03\x02\x02\x02\x9B\x9C\x07g\x02\x02\x9C" +
		"\x9D\x07n\x02\x02\x9D\x9E\x07k\x02\x02\x9E\x9F\x07h\x02\x02\x9F\x0E\x03" +
		"\x02\x02\x02\xA0\xA1\x07n\x02\x02\xA1\xA2\x07q\x02\x02\xA2\xA3\x07q\x02" +
		"\x02\xA3\xA4\x07r\x02\x02\xA4\x10\x03\x02\x02\x02\xA5\xA6\x07k\x02\x02" +
		"\xA6\xA7\x07p\x02\x02\xA7\x12\x03\x02\x02\x02\xA8\xA9\x07d\x02\x02\xA9" +
		"\xAA\x07t\x02\x02\xAA\xAB\x07g\x02\x02\xAB\xAC\x07c\x02\x02\xAC\xAD\x07" +
		"m\x02\x02\xAD\x14\x03\x02\x02\x02\xAE\xAF\x07t\x02\x02\xAF\xB0\x07g\x02" +
		"\x02\xB0\xB1\x07v\x02\x02\xB1\xB2\x07w\x02\x02\xB2\xB3\x07t\x02\x02\xB3" +
		"\xB4\x07p\x02\x02\xB4\x16\x03\x02\x02\x02\xB5\xB6\x07%\x02\x02\xB6\xB7" +
		"\x07}\x02\x02\xB7\xBB\x03\x02\x02\x02\xB8\xBA\v\x02\x02\x02\xB9\xB8\x03" +
		"\x02\x02\x02\xBA\xBD\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBB\xB9\x03" +
		"\x02\x02\x02\xBC\xBE\x03\x02\x02\x02\xBD\xBB\x03\x02\x02\x02\xBE\xBF\x07" +
		"\x7F\x02\x02\xBF\x18\x03\x02\x02\x02\xC0\xC1\x06\r\x02\x02\xC1\xCD\x05" +
		"y=\x02\xC2\xC4\x07\x0F\x02\x02\xC3\xC2\x03\x02\x02\x02\xC3\xC4\x03\x02" +
		"\x02\x02\xC4\xC5\x03\x02\x02\x02\xC5\xC8\x07\f\x02\x02\xC6\xC8\x07\x0F" +
		"\x02\x02\xC7\xC3\x03\x02\x02\x02\xC7\xC6\x03\x02\x02\x02\xC8\xCA\x03\x02" +
		"\x02\x02\xC9\xCB\x05y=\x02\xCA\xC9\x03\x02\x02\x02\xCA\xCB\x03\x02\x02" +
		"\x02\xCB\xCD\x03\x02\x02\x02\xCC\xC0\x03\x02\x02\x02\xCC\xC7\x03\x02\x02" +
		"\x02\xCD\xCE\x03\x02\x02\x02\xCE\xCF\b\r\x02\x02\xCF\x1A\x03\x02\x02\x02" +
		"\xD0\xD1\x07]\x02\x02\xD1\xD2\b\x0E\x03\x02\xD2\x1C\x03\x02\x02\x02\xD3" +
		"\xD4\x07_\x02\x02\xD4\xD5\b\x0F\x04\x02\xD5\x1E\x03\x02\x02\x02\xD6\xD7" +
		"\x07*\x02\x02\xD7\xD8\b\x10\x05\x02\xD8 \x03\x02\x02\x02\xD9\xDA\x07+" +
		"\x02\x02\xDA\xDB\b\x11\x06\x02\xDB\"\x03\x02\x02\x02\xDC\xDD\x07}\x02" +
		"\x02\xDD\xDE\b\x12\x07\x02\xDE$\x03\x02\x02\x02\xDF\xE0\x07\x7F\x02\x02" +
		"\xE0\xE1\b\x13\b\x02\xE1&\x03\x02\x02\x02\xE2\xE3\x07.\x02\x02\xE3(\x03" +
		"\x02\x02\x02\xE4\xE5\x07?\x02\x02\xE5*\x03\x02\x02\x02\xE6\xE7\x07A\x02" +
		"\x02\xE7,\x03\x02\x02\x02\xE8\xE9\x07<\x02\x02\xE9.\x03\x02\x02\x02\xEA" +
		"\xEB\x070\x02\x02\xEB0\x03\x02\x02\x02\xEC\xED\x07-\x02\x02\xED2\x03\x02" +
		"\x02\x02\xEE\xEF\x07/\x02\x02\xEF4\x03\x02\x02\x02\xF0\xF1\x07#\x02\x02" +
		"\xF16\x03\x02\x02\x02\xF2\xF3\x07,\x02\x02\xF38\x03\x02\x02\x02\xF4\xF5" +
		"\x071\x02\x02\xF5:\x03\x02\x02\x02\xF6\xF7\x07\'\x02\x02\xF7<\x03\x02" +
		"\x02\x02\xF8\xF9\x07`\x02\x02\xF9>\x03\x02\x02\x02\xFA\xFB\x07%\x02\x02" +
		"\xFB@\x03\x02\x02\x02\xFC\xFD\x07>\x02\x02\xFDB\x03\x02\x02\x02\xFE\xFF" +
		"\x07@\x02\x02\xFFD\x03\x02\x02\x02\u0100\u0101\x07>\x02\x02\u0101\u0102" +
		"\x07?\x02\x02\u0102F\x03\x02\x02\x02\u0103\u0104\x07@\x02\x02\u0104\u0105" +
		"\x07?\x02\x02\u0105H\x03\x02\x02\x02\u0106\u0107\x07?\x02\x02\u0107\u0108" +
		"\x07?\x02\x02\u0108J\x03\x02\x02\x02\u0109\u010A\x07#\x02\x02\u010A\u010B" +
		"\x07?\x02\x02\u010BL\x03\x02\x02\x02\u010C\u010D\x07(\x02\x02\u010D\u010E" +
		"\x07(\x02\x02\u010EN\x03\x02\x02\x02\u010F\u0110\x07~\x02\x02\u0110\u0111" +
		"\x07~\x02\x02\u0111P\x03\x02\x02\x02\u0112\u0113\x07,\x02\x02\u0113\u0114" +
		"\x07?\x02\x02\u0114R\x03\x02\x02\x02\u0115\u0116\x071\x02\x02\u0116\u0117" +
		"\x07?\x02\x02\u0117T\x03\x02\x02\x02\u0118\u0119\x07\'\x02\x02\u0119\u011A" +
		"\x07?\x02\x02\u011AV\x03\x02\x02\x02\u011B\u011C\x07-\x02\x02\u011C\u011D" +
		"\x07?\x02\x02\u011DX\x03\x02\x02\x02\u011E\u011F\x07/\x02\x02\u011F\u0120" +
		"\x07?\x02\x02\u0120Z\x03\x02\x02\x02\u0121\u0122\x07~\x02\x02\u0122\\" +
		"\x03\x02\x02\x02\u0123\u0124\x07^\x02\x02\u0124^\x03\x02\x02\x02\u0125" +
		"\u0126\x070\x02\x02\u0126\u0127\x070\x02\x02\u0127`\x03\x02\x02\x02\u0128" +
		"\u0129\x070\x02\x02\u0129\u012A\x070\x02\x02\u012A\u012B\x070\x02\x02" +
		"\u012Bb\x03\x02\x02\x02\u012C\u012D\x07v\x02\x02\u012D\u012E\x07t\x02" +
		"\x02\u012E\u012F\x07w\x02\x02\u012F\u0136\x07g\x02\x02\u0130\u0131\x07" +
		"h\x02\x02\u0131\u0132\x07c\x02\x02\u0132\u0133\x07n\x02\x02\u0133\u0134" +
		"\x07u\x02\x02\u0134\u0136\x07g\x02\x02\u0135\u012C\x03\x02\x02\x02\u0135" +
		"\u0130\x03\x02\x02\x02\u0136d\x03\x02\x02\x02\u0137\u0139\t\x02\x02\x02" +
		"\u0138\u013A\t\x02\x02\x02\u0139\u0138\x03\x02\x02\x02\u0139\u013A\x03" +
		"\x02\x02\x02\u013A\u013B\x03\x02\x02\x02\u013B\u013C\t\x03\x02\x02\u013C" +
		"\u013D\x05\x81A\x02\u013D\u013E\x070\x02\x02\u013E\u013F\x05\x81A\x02" +
		"\u013F\u0145\x03\x02\x02\x02\u0140\u0141\x05\x83B\x02\u0141\u0142\x07" +
		"0\x02\x02\u0142\u0143\x05\x83B\x02\u0143\u0145\x03\x02\x02\x02\u0144\u0137" +
		"\x03\x02\x02\x02\u0144\u0140\x03\x02\x02\x02\u0145f\x03\x02\x02\x02\u0146" +
		"\u0148\t\x02\x02\x02\u0147\u0149\t\x02\x02\x02\u0148\u0147\x03\x02\x02" +
		"\x02\u0148\u0149\x03\x02\x02\x02\u0149\u014A\x03\x02\x02\x02\u014A\u014B" +
		"\t\x03\x02\x02\u014B\u014E\x05\x81A\x02\u014C\u014E\x05\x83B\x02\u014D" +
		"\u0146\x03\x02\x02\x02\u014D\u014C\x03\x02\x02\x02\u014Eh\x03\x02\x02" +
		"\x02\u014F\u0150\x07)\x02\x02\u0150\u0151\n\x04\x02\x02\u0151\u0152\x07" +
		")\x02\x02\u0152j\x03\x02\x02\x02\u0153\u0157\x07$\x02\x02\u0154\u0156" +
		"\x05\x85C\x02\u0155\u0154\x03\x02\x02\x02\u0156\u0159\x03\x02\x02\x02" +
		"\u0157\u0155\x03\x02\x02\x02\u0157\u0158\x03\x02\x02\x02\u0158\u015A\x03" +
		"\x02\x02\x02\u0159\u0157\x03\x02\x02\x02\u015A\u015B\x07$\x02\x02\u015B" +
		"l\x03\x02\x02\x02\u015C\u0160\x07$\x02\x02\u015D\u015F\x05\x85C\x02\u015E" +
		"\u015D\x03\x02\x02\x02\u015F\u0162\x03\x02\x02\x02\u0160\u015E\x03\x02" +
		"\x02\x02\u0160\u0161\x03\x02\x02\x02\u0161\u0163\x03\x02\x02\x02\u0162" +
		"\u0160\x03\x02\x02\x02\u0163\u0164\x07}\x02\x02\u0164n\x03\x02\x02\x02" +
		"\u0165\u0169\x07\x7F\x02\x02\u0166\u0168\x05\x85C\x02\u0167\u0166\x03" +
		"\x02\x02\x02\u0168\u016B\x03\x02\x02\x02\u0169\u0167\x03\x02\x02\x02\u0169" +
		"\u016A\x03\x02\x02\x02\u016A\u016C\x03\x02\x02\x02\u016B\u0169\x03\x02" +
		"\x02\x02\u016C\u016D\x07}\x02\x02\u016Dp\x03\x02\x02\x02\u016E\u0172\x07" +
		"\x7F\x02\x02\u016F\u0171\x05\x85C\x02\u0170\u016F\x03\x02\x02\x02\u0171" +
		"\u0174\x03\x02\x02\x02\u0172\u0170\x03\x02\x02\x02\u0172\u0173\x03\x02" +
		"\x02\x02\u0173\u0175\x03\x02\x02\x02\u0174\u0172\x03\x02\x02\x02\u0175" +
		"\u0176\x07$\x02\x02\u0176r\x03\x02\x02\x02\u0177\u017B\t\x05\x02\x02\u0178" +
		"\u017A\t\x06\x02\x02\u0179\u0178\x03\x02\x02\x02\u017A\u017D\x03\x02\x02" +
		"\x02\u017B\u0179\x03\x02\x02\x02\u017B\u017C\x03\x02\x02\x02\u017Ct\x03" +
		"\x02\x02\x02\u017D\u017B\x03\x02\x02\x02\u017E\u0183\x05y=\x02\u017F\u0183" +
		"\x05}?\x02\u0180\u0183\x05{>\x02\u0181\u0183\x05\x7F@\x02\u0182\u017E" +
		"\x03\x02\x02\x02\u0182\u017F\x03\x02\x02\x02\u0182\u0180\x03\x02\x02\x02" +
		"\u0182\u0181\x03\x02\x02\x02\u0183\u0184\x03\x02\x02\x02\u0184\u0185\b" +
		";\t\x02\u0185v\x03\x02\x02\x02\u0186\u0187\v\x02\x02\x02\u0187\u0188\x03" +
		"\x02\x02\x02\u0188\u0189\b<\n\x02\u0189x\x03\x02\x02\x02\u018A\u018C\t" +
		"\x07\x02\x02\u018B\u018A\x03\x02\x02\x02\u018C\u018D\x03\x02\x02\x02\u018D" +
		"\u018B\x03\x02\x02\x02\u018D\u018E\x03\x02\x02\x02\u018Ez\x03\x02\x02" +
		"\x02\u018F\u0190\x071\x02\x02\u0190\u0191\x07,\x02\x02\u0191\u0195\x03" +
		"\x02\x02\x02\u0192\u0194\v\x02\x02\x02\u0193\u0192\x03\x02\x02\x02\u0194" +
		"\u0197\x03\x02\x02\x02\u0195\u0196\x03\x02\x02\x02\u0195\u0193\x03\x02" +
		"\x02\x02\u0196\u0198\x03\x02\x02\x02\u0197\u0195\x03\x02\x02\x02\u0198" +
		"\u0199\x07,\x02\x02\u0199\u019A\x071\x02\x02\u019A|\x03\x02\x02\x02\u019B" +
		"\u019C\x071\x02\x02\u019C\u019D\x071\x02\x02\u019D\u01A1\x03\x02\x02\x02" +
		"\u019E\u01A0\n\b\x02\x02\u019F\u019E\x03\x02\x02\x02\u01A0\u01A3\x03\x02" +
		"\x02\x02\u01A1\u019F\x03\x02\x02\x02\u01A1\u01A2\x03\x02\x02\x02\u01A2" +
		"~\x03\x02\x02\x02\u01A3\u01A1\x03\x02\x02\x02\u01A4\u01A6\x07^\x02\x02" +
		"\u01A5\u01A7\x05y=\x02\u01A6\u01A5\x03\x02\x02\x02\u01A6\u01A7\x03\x02" +
		"\x02\x02\u01A7\u01AD\x03\x02\x02\x02\u01A8\u01AA\x07\x0F\x02\x02\u01A9" +
		"\u01A8\x03\x02\x02\x02\u01A9\u01AA\x03\x02\x02\x02\u01AA\u01AB\x03\x02" +
		"\x02\x02\u01AB\u01AE\x07\f\x02\x02\u01AC\u01AE\x07\x0F\x02\x02\u01AD\u01A9" +
		"\x03\x02\x02\x02\u01AD\u01AC\x03\x02\x02\x02\u01AE\x80\x03\x02\x02\x02" +
		"\u01AF\u01B1\t\t\x02\x02\u01B0\u01AF\x03\x02\x02\x02\u01B1\u01B2\x03\x02" +
		"\x02\x02\u01B2\u01B0\x03\x02\x02\x02\u01B2\u01B3\x03\x02\x02\x02\u01B3" +
		"\u01BC\x03\x02\x02\x02\u01B4\u01B6\x07a\x02\x02\u01B5\u01B7\t\t\x02\x02" +
		"\u01B6\u01B5\x03\x02\x02\x02\u01B7\u01B8\x03\x02\x02\x02\u01B8\u01B6\x03" +
		"\x02\x02\x02\u01B8\u01B9\x03\x02\x02\x02\u01B9\u01BB\x03\x02\x02\x02\u01BA" +
		"\u01B4\x03\x02\x02\x02\u01BB\u01BE\x03\x02\x02\x02\u01BC\u01BA\x03\x02" +
		"\x02\x02\u01BC\u01BD\x03\x02\x02\x02\u01BD\x82\x03\x02\x02\x02\u01BE\u01BC" +
		"\x03\x02\x02\x02\u01BF\u01C1\t\x02\x02\x02\u01C0\u01BF\x03\x02\x02\x02" +
		"\u01C1\u01C2\x03\x02\x02\x02\u01C2\u01C0\x03\x02\x02\x02\u01C2\u01C3\x03" +
		"\x02\x02\x02\u01C3\u01CC\x03\x02\x02\x02\u01C4\u01CB\x07a\x02\x02\u01C5" +
		"\u01C7\t\x02\x02\x02\u01C6\u01C5\x03\x02\x02\x02\u01C7\u01C8\x03\x02\x02" +
		"\x02\u01C8\u01C6\x03\x02\x02\x02\u01C8\u01C9\x03\x02\x02\x02\u01C9\u01CB" +
		"\x03\x02\x02\x02\u01CA\u01C4\x03\x02\x02\x02\u01CA\u01C6\x03\x02\x02\x02" +
		"\u01CB\u01CE\x03\x02\x02\x02\u01CC\u01CA\x03\x02\x02\x02\u01CC\u01CD\x03" +
		"\x02\x02\x02\u01CD\x84\x03\x02\x02\x02\u01CE\u01CC\x03\x02\x02\x02\u01CF" +
		"\u01D3\n\n\x02\x02\u01D0\u01D1\x07^\x02\x02\u01D1\u01D3\t\v\x02\x02\u01D2" +
		"\u01CF\x03\x02\x02\x02\u01D2\u01D0\x03\x02\x02\x02\u01D3\x86\x03\x02\x02" +
		"\x02!\x02\xBB\xC3\xC7\xCA\xCC\u0135\u0139\u0144\u0148\u014D\u0157\u0160" +
		"\u0169\u0172\u017B\u0182\u018D\u0195\u01A1\u01A6\u01A9\u01AD\u01B2\u01B8" +
		"\u01BC\u01C2\u01C8\u01CA\u01CC\u01D2\v\x03\r\x02\x03\x0E\x03\x03\x0F\x04" +
		"\x03\x10\x05\x03\x11\x06\x03\x12\x07\x03\x13\b\b\x02\x02\x02\x04\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XonLexer.__ATN) {
			XonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XonLexer._serializedATN));
		}

		return XonLexer.__ATN;
	}

}

