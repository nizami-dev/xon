import '../../grammar/xon-parser': ParameterContext
import '../../metadata/declaration/parameter/parameter-declaration-metadata': ParameterDeclarationMetadata
import '../../util/source-range': SourceRange
import '../body/body-tree-helper': getBodyTree
import '../body/body-tree': BodyTree
import '../expression/expression-tree-helper': getExpressionTree
import '../expression/expression-tree': ExpressionTree
import '../expression/method/method-expression-tree': MethodExpressionTree
import '../id/id-tree-helper': getIdTree
import '../id/id-tree': IdTree
import '../tree': Tree

object ParameterTree(ctx ParameterContext) Tree
  ctx ParameterContext = ctx
  sourceReference SourceRange = SourceRange.fromContext(ctx)
  metadata ParameterDeclarationMetadata
  id IdTree = getIdTree(ctx.id())
  type ExpressionTree? = getExpressionTree(ctx.expr())
  body BodyTree? = getBodyTree(ctx.body())

  toString()
    type = this.type?.toString() or ''
    if (type and (this.ctx.id().OPERATOR() or !(this.type is MethodExpressionTree)))
      type = ' ' + type
    body = (this.body and this.body) or ''
    return this.id + type + body
