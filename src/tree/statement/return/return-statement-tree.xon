{ReturnStatementContext} := import '../../../grammar/xon-parser'
{None, String} := import '../../../lib/core'
{SourceRange} := import '../../../util/source-range'
{getExpressionTree} := import '../../expression/expression-tree-helper'
{ExpressionTree} := import '../../expression/expression-tree'
{StatementTree} := import '../statement-tree'

class ReturnStatementTree(ctx: ReturnStatementContext) is StatementTree
  ctx := ctx
  sourceRange := SourceRange.fromContext(ctx)
  value := ctx.expression() and getExpressionTree(ctx.expression())

  toString := () => this.value and #{`return ${this.value}`} or 'return'
