{IfStatementContext} := import '../../../grammar/xon-parser'
{None, String} := import '../../../lib/core'
{SourceRange} := import '../../../util/source-range'
{getBodyTree} := import '../../body/body-tree-helper'
{BodyTree} := import '../../body/body-tree'
{getExpressionTree} := import '../../expression/expression-tree-helper'
{ExpressionTree} := import '../../expression/expression-tree'
{StatementTree} := import '../statement-tree'

class IfStatementTree(ctx: IfStatementContext) is StatementTree
  ctx := ctx
  sourceRange := SourceRange.fromContext(ctx)
  condition := getExpressionTree(ctx.expression())
  thenBody := getBodyTree(ctx._thenBody)
  elseBody := getBodyTree(ctx._elseBody)

  toString: () => #{`if ${this.condition}${this.thenBody}${(this.elseBody && '\nelse' + this.elseBody) || ''}`}
