{MultipleBodyContext} := import '../../../grammar/xon-parser'
{String} := import '../../../lib/core'
{SourceRange} := import '../../../util/source-range'
{PreprocessorExpressionTree} := import '../../expression/preprocessor/preprocessor-expression-tree'
{ExpressionStatementTree} := import '../../statement/expression/expression-statement-tree'
{getStatementTrees} := import '../../statement/statement-tree-helper'
{StatementTree} := import '../../statement/statement-tree'
{BodyTree} := import '../body-tree'

object MultipleBodyTree(ctx: MultipleBodyContext) is BodyTree
  ctx: MultipleBodyContext = ctx
  sourceRange: SourceRange = SourceRange.fromContext(ctx)
  statements: StatementTree[] = getStatementTrees(ctx.statement())
  toString: () => '\n' + this.statements.map(
    (x) => x is ExpressionStatementTree and x.expression is PreprocessorExpressionTree and '  ' + x or x.toString().replace(#{/^(.+)/gm}, '  $1')
  ).join('\n')
