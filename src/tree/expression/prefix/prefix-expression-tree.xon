import '../../../grammar/xon-parser': PrefixExpressionContext
import '../../../lib/core': String
import '../../../metadata/expression/expression-metadata': ExpressionMetadata
import '../../../util/id-token': getIdToken, IdToken
import '../../../util/source-range': SourceRange
import '../expression-tree-helper': getExpressionTree
import '../expression-tree': ExpressionTree

object PrefixExpressionTree[ctx PrefixExpressionContext] ExpressionTree
  metadata ExpressionMetadata
  sourceRange SourceRange = SourceRange.fromContext[ctx]
  operator IdToken = getIdToken[ctx._op]
  value ExpressionTree = getExpressionTree[ctx.expr[]]

  toString[] String = #{`${this.operator}${this.value}`}
