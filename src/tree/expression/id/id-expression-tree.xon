import '../../../grammar/xon-parser': IdExpressionContext
import '../../../lib/core': String
import '../../../metadata/expression/expression-metadata': ExpressionMetadata
import '../../../util/id-token': getIdToken, IdToken
import '../../../util/source-range': SourceRange
import '../expression-tree': ExpressionTree

object IdExpressionTree(ctx IdExpressionContext) ExpressionTree
  metadata ExpressionMetadata
  ctx IdExpressionContext = ctx
  sourceRange SourceRange = SourceRange.fromContext(ctx)
  name IdToken = getIdToken(ctx._name)
  toString: () => this.name.toString()
