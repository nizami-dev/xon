import '../../../grammar/xon-parser': GenericsExpressionContext
import '../../../lib/core': String
import '../../../metadata/expression/expression-metadata': ExpressionMetadata
import '../../../util/source-range': SourceRange
import '../../parameter/parameter-tree-helper': getParameterTrees
import '../../parameter/parameter-tree': ParameterTree
import '../expression-tree-helper': getExpressionTree
import '../expression-tree': ExpressionTree

object GenericsExpressionTree(ctx GenericsExpressionContext) ExpressionTree
  sourceRange SourceRange = SourceRange.fromContext(ctx)
  metadata ExpressionMetadata
  instance ExpressionTree = getExpressionTree(ctx.expr())
  generics ParameterTree[] = getParameterTrees(ctx.generics().parameter())

  toString() String
    generics = (this.generics.length and #{`<|${this.generics.join(', ')}|>`}#) or ''
    return this.instance + generics
