import '../../../grammar/xon-parser': MethodExpressionContext
import '../../../lib/core': String
import '../../../metadata/expression/method/method-expression-metadata': MethodExpressionMetadata
import '../../../util/source-range': SourceRange
import '../../parameter/parameter-tree-helper': getParameterTrees
import '../../parameter/parameter-tree': ParameterTree
import '../expression-tree-helper': getExpressionTree
import '../expression-tree': ExpressionTree

object MethodExpressionTree[ctx MethodExpressionContext] ExpressionTree
  metadata MethodExpressionMetadata
  ctx MethodExpressionContext = ctx
  sourceRange SourceRange = SourceRange.fromContext[ctx]
  parameters ParameterTree[] = [] = getParameterTrees[ctx.parameters[].parameter[]]
  value ExpressionTree = getExpressionTree[ctx._value]

  toString[] String
    return #{`[${this.parameters.join(', ')}] ${this.value}`}
