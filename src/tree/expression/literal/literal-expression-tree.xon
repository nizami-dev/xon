{LiteralExpressionContext} := import '../../../grammar/xon-parser'
{String} := import '../../../lib/core'
{LiteralExpressionMetadata} := import '../../../metadata/expression/literal/literal-expression-metadata'
{SourceRange} := import '../../../util/source-range'
{getLiteralTree} := import '../../literal/literal-tree-helper'
{LiteralTree} := import '../../literal/literal-tree'
{ExpressionTree} := import '../expression-tree'

class LiteralExpressionTree(ctx: LiteralExpressionContext) is ExpressionTree
  ctx := ctx
  sourceRange := SourceRange.fromContext(ctx)
  literal := ctx and getLiteralTree(ctx.literal())

  toString := () => this.literal.sourceRange.rangeText
